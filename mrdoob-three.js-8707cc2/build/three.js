// three.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"51"};void 0===self.console&&(self.console={info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}});void 0===self.Int32Array&&(self.Int32Array=Array,self.Float32Array=Array);void 0===String.prototype.startsWith&&(String.prototype.startsWith=function(a){return this.slice(0,a.length)===a});
void 0===String.prototype.endsWith&&(String.prototype.endsWith=function(a){var a=String(a),b=this.lastIndexOf(a);return b>=0&&b===this.length-a.length});void 0===!String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")});
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c){window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"]}if(window.requestAnimationFrame===void 0)window.requestAnimationFrame=function(b){var c=Date.now(),e=Math.max(0,16-(c-a)),h=window.setTimeout(function(){b(c+e)},e);a=c+e;return h};if(window.cancelAnimationFrame===void 0)window.cancelAnimationFrame=
function(a){clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=a!==void 0?a:true;this.elapsedTime=this.oldTime=this.startTime=0;this.running=false};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=true};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=false};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime=this.elapsedTime+this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.0010*(b-this.oldTime);this.oldTime=b;this.elapsedTime=this.elapsedTime+a}return a};
THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,f,e;if(c===0)this.r=this.g=this.b=0;else{d=Math.floor(a*6);f=a*6-d;a=c*(1-b);e=c*(1-b*f);b=c*(1-b*(1-f));if(d===0){this.r=c;this.g=b;this.b=a}else if(d===1){this.r=e;this.g=c;this.b=a}else if(d===2){this.r=a;this.g=c;this.b=b}else if(d===3){this.r=a;this.g=e;this.b=c}else if(d===4){this.r=b;this.g=a;this.b=c}else if(d===5){this.r=c;this.g=a;this.b=e}}return this},setHex:function(a){a=
Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r=this.r+(a.r-this.r)*b;this.g=this.g+(a.g-this.g)*b;this.b=this.b+(a.b-this.b)*b;return this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getContextStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x=this.x+a.x;this.y=this.y+a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x=this.x-a.x;this.y=this.y-a.y;return this},multiplyScalar:function(a){this.x=this.x*a;this.y=this.y*a;return this},divideScalar:function(a){if(a){this.x=
this.x/a;this.y=this.y/a}else this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
lerpSelf:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return this.lengthSq()<1E-4},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x=this.x+a.x;this.y=this.y+a.y;this.z=this.z+a.z;return this},addScalar:function(a){this.x=this.x+a;this.y=this.y+
a;this.z=this.z+a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x=this.x-a.x;this.y=this.y-a.y;this.z=this.z-a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x=this.x*a.x;this.y=this.y*a.y;this.z=this.z*a.z;return this},multiplyScalar:function(a){this.x=this.x*a;this.y=this.y*a;this.z=this.z*a;return this},divideSelf:function(a){this.x=this.x/a.x;this.y=
this.y/a.y;this.z=this.z/a.z;return this},divideScalar:function(a){if(a){this.x=this.x/a;this.y=this.y/a;this.z=this.z/a}else this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;this.z=this.z+(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,f=d[0],e=d[4],h=d[8],k=d[1],i=d[5],l=d[9],j=d[2],n=d[6],d=d[10];if(b===void 0||b==="XYZ"){this.y=Math.asin(c(h));if(Math.abs(h)<0.99999){this.x=Math.atan2(-l,d);this.z=Math.atan2(-e,f)}else{this.x=Math.atan2(n,i);this.z=0}}else if(b==="YXZ"){this.x=Math.asin(-c(l));if(Math.abs(l)<
0.99999){this.y=Math.atan2(h,d);this.z=Math.atan2(k,i)}else{this.y=Math.atan2(-j,f);this.z=0}}else if(b==="ZXY"){this.x=Math.asin(c(n));if(Math.abs(n)<0.99999){this.y=Math.atan2(-j,d);this.z=Math.atan2(-e,i)}else{this.y=0;this.z=Math.atan2(k,f)}}else if(b==="ZYX"){this.y=Math.asin(-c(j));if(Math.abs(j)<0.99999){this.x=Math.atan2(n,d);this.z=Math.atan2(k,f)}else{this.x=0;this.z=Math.atan2(-e,i)}}else if(b==="YZX"){this.z=Math.asin(c(k));if(Math.abs(k)<0.99999){this.x=Math.atan2(-l,i);this.y=Math.atan2(-j,
f)}else{this.x=0;this.y=Math.atan2(h,d)}}else if(b==="XZY"){this.z=Math.asin(-c(e));if(Math.abs(e)<0.99999){this.x=Math.atan2(n,i);this.y=Math.atan2(h,f)}else{this.x=Math.atan2(-l,d);this.y=0}}return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,f=a.y*a.y,e=a.z*a.z,h=a.w*a.w;if(b===void 0||b==="XYZ"){this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-d-f+e);this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w)));this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),h+d-f-e)}else if(b===
"YXZ"){this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z)));this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-d-f+e);this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-d+f-e)}else if(b==="ZXY"){this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z)));this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-d-f+e);this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-d+f-e)}else if(b==="ZYX"){this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-d-f+e);this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z)));this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+d-f-e)}else if(b==="YZX"){this.x=Math.atan2(2*(a.x*a.w-a.z*
a.y),h-d+f-e);this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+d-f-e);this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))}else if(b==="XZY"){this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-d+f-e);this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+d-f-e);this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y)))}return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=
b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return this.lengthSq()<1E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==void 0?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x=this.x+a.x;this.y=this.y+a.y;this.z=this.z+a.z;this.w=this.w+a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x=
this.x-a.x;this.y=this.y-a.y;this.z=this.z-a.z;this.w=this.w-a.w;return this},multiplyScalar:function(a){this.x=this.x*a;this.y=this.y*a;this.z=this.z*a;this.w=this.w*a;return this},divideScalar:function(a){if(a){this.x=this.x/a;this.y=this.y/a;this.z=this.z/a;this.w=this.w/a}else{this.z=this.y=this.x=0;this.w=1}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;this.z=this.z+(a.z-this.z)*b;this.w=this.w+(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*
Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);if(b<1E-4){this.x=1;this.z=this.y=0}else{this.x=a.x/b;this.y=a.y/b;this.z=a.z/b}return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,f=a[0];d=a[4];var e=a[8],h=a[1],k=a[5],i=a[9];c=a[2];b=a[6];var l=a[10];if(Math.abs(d-h)<0.01&&Math.abs(e-c)<0.01&&Math.abs(i-b)<0.01){if(Math.abs(d+h)<0.1&&Math.abs(e+c)<0.1&&Math.abs(i+b)<0.1&&Math.abs(f+k+l-3)<0.1){this.set(1,0,0,0);return this}a=Math.PI;f=(f+1)/2;k=(k+1)/2;l=(l+1)/2;d=(d+h)/4;e=
(e+c)/4;i=(i+b)/4;if(f>k&&f>l)if(f<0.01){b=0;d=c=0.707106781}else{b=Math.sqrt(f);c=d/b;d=e/b}else if(k>l)if(k<0.01){b=0.707106781;c=0;d=0.707106781}else{c=Math.sqrt(k);b=d/c;d=i/c}else if(l<0.01){c=b=0.707106781;d=0}else{d=Math.sqrt(l);b=e/d;c=i/d}this.set(b,c,d,a);return this}a=Math.sqrt((b-i)*(b-i)+(e-c)*(e-c)+(h-d)*(h-d));Math.abs(a)<0.0010&&(a=1);this.x=(b-i)/a;this.y=(e-c)/a;this.z=(h-d)/a;this.w=Math.acos((f+k+l-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],f=-b[10]*b[4]+b[6]*b[8],e=b[10]*b[0]-b[2]*b[8],h=-b[6]*b[0]+b[2]*b[4],k=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],l=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*f+b[2]*k;b===0&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,j=this.elements;j[0]=b*a;j[1]=b*c;j[2]=b*d;j[3]=b*f;j[4]=b*e;j[5]=b*h;j[6]=b*k;j[7]=b*i;j[8]=b*l;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,f,e,h,k,i,l,j,n,m,s,p,o){this.elements=new Float32Array(16);this.set(a!==void 0?a:1,b||0,c||0,d||0,f||0,e!==void 0?e:1,h||0,k||0,i||0,l||0,j!==void 0?j:1,n||0,m||0,s||0,p||0,o!==void 0?o:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,e,h,k,i,l,j,n,m,s,p,o){var r=this.elements;r[0]=a;r[4]=b;r[8]=c;r[12]=d;r[1]=f;r[5]=e;r[9]=h;r[13]=k;r[2]=i;r[6]=l;r[10]=j;r[14]=n;r[3]=m;r[7]=s;r[11]=p;r[15]=o;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,h=THREE.Matrix4.__v3;h.sub(a,b).normalize();if(h.length()===0)h.z=1;f.cross(c,h).normalize();if(f.length()===0){h.x=h.x+1E-4;f.cross(c,h).normalize()}e.cross(h,f);d[0]=f.x;d[4]=e.x;d[8]=h.x;d[1]=f.y;d[5]=e.y;d[9]=h.y;d[2]=f.z;d[6]=e.z;d[10]=h.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,f=this.elements,e=c[0],h=c[4],k=c[8],i=c[12],l=c[1],j=c[5],n=c[9],m=c[13],s=c[2],p=c[6],o=c[10],r=c[14],u=c[3],D=c[7],v=c[11],c=c[15],x=d[0],I=d[4],
A=d[8],y=d[12],T=d[1],B=d[5],F=d[9],C=d[13],G=d[2],O=d[6],S=d[10],Q=d[14],E=d[3],z=d[7],J=d[11],d=d[15];f[0]=e*x+h*T+k*G+i*E;f[4]=e*I+h*B+k*O+i*z;f[8]=e*A+h*F+k*S+i*J;f[12]=e*y+h*C+k*Q+i*d;f[1]=l*x+j*T+n*G+m*E;f[5]=l*I+j*B+n*O+m*z;f[9]=l*A+j*F+n*S+m*J;f[13]=l*y+j*C+n*Q+m*d;f[2]=s*x+p*T+o*G+r*E;f[6]=s*I+p*B+o*O+r*z;f[10]=s*A+p*F+o*S+r*J;f[14]=s*y+p*C+o*Q+r*d;f[3]=u*x+D*T+v*G+c*E;f[7]=u*I+D*B+v*O+c*z;f[11]=u*A+D*F+v*S+c*J;f[15]=u*y+D*C+v*Q+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]=b[0]*a;b[4]=b[4]*a;b[8]=b[8]*a;b[12]=b[12]*a;b[1]=b[1]*a;b[5]=b[5]*a;b[9]=b[9]*a;b[13]=b[13]*a;b[2]=b[2]*a;b[6]=b[6]*a;b[10]=b[10]*a;b[14]=b[14]*a;b[3]=b[3]*a;b[7]=b[7]*a;b[11]=b[11]*a;b[15]=
b[15]*a;return this},multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=1/(b[3]*c+b[7]*d+b[11]*f+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*f+b[12])*e;a.y=(b[1]*c+b[5]*d+b[9]*f+b[13])*e;a.z=(b[2]*c+b[6]*d+b[10]*f+b[14])*e;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w;a.x=b[0]*c+b[4]*d+b[8]*f+b[12]*e;a.y=b[1]*c+b[5]*d+b[9]*f+b[13]*e;a.z=b[2]*c+b[6]*d+b[10]*f+b[14]*e;a.w=b[3]*c+b[7]*d+b[11]*f+b[15]*e;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,
c=0,d=a.length;c<d;c=c+3){b.x=a[c];b.y=a[c+1];b.z=a[c+2];this.multiplyVector3(b);a[c]=b.x;a[c+1]=b.y;a[c+2]=b.z}return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z;a.x=c*b[0]+d*b[4]+f*b[8];a.y=c*b[1]+d*b[5]+f*b[9];a.z=c*b[2]+d*b[6]+f*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*
a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],f=a[12],e=a[1],h=a[5],k=a[9],i=a[13],l=a[2],j=a[6],n=a[10],m=a[14],s=a[3],p=a[7],o=a[11],a=a[15];return f*k*j*s-d*i*j*s-f*h*n*s+c*i*n*s+d*h*m*s-c*k*m*s-f*k*l*p+d*i*l*p+f*e*n*p-b*i*n*p-d*e*m*p+b*k*m*p+f*h*l*o-c*i*l*o-f*e*j*o+b*i*j*o+c*e*m*o-b*h*m*o-d*h*l*a+c*k*l*a+d*e*j*a-b*k*j*a-c*e*n*a+b*h*n*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;
b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=
c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],
a[9],a[10])},getInverse:function(a){var b=this.elements,c=a.elements,d=c[0],f=c[4],e=c[8],h=c[12],k=c[1],i=c[5],l=c[9],j=c[13],n=c[2],m=c[6],s=c[10],p=c[14],o=c[3],r=c[7],u=c[11],c=c[15];b[0]=l*p*r-j*s*r+j*m*u-i*p*u-l*m*c+i*s*c;b[4]=h*s*r-e*p*r-h*m*u+f*p*u+e*m*c-f*s*c;b[8]=e*j*r-h*l*r+h*i*u-f*j*u-e*i*c+f*l*c;b[12]=h*l*m-e*j*m-h*i*s+f*j*s+e*i*p-f*l*p;b[1]=j*s*o-l*p*o-j*n*u+k*p*u+l*n*c-k*s*c;b[5]=e*p*o-h*s*o+h*n*u-d*p*u-e*n*c+d*s*c;b[9]=h*l*o-e*j*o-h*k*u+d*j*u+e*k*c-d*l*c;b[13]=e*j*n-h*l*n+h*k*s-d*
j*s-e*k*p+d*l*p;b[2]=i*p*o-j*m*o+j*n*r-k*p*r-i*n*c+k*m*c;b[6]=h*m*o-f*p*o-h*n*r+d*p*r+f*n*c-d*m*c;b[10]=f*j*o-h*i*o+h*k*r-d*j*r-f*k*c+d*i*c;b[14]=h*i*n-f*j*n-h*k*m+d*j*m+f*k*p-d*i*p;b[3]=l*m*o-i*s*o-l*n*r+k*s*r+i*n*u-k*m*u;b[7]=f*s*o-e*m*o+e*n*r-d*s*r-f*n*u+d*m*u;b[11]=e*i*o-f*l*o-e*k*r+d*l*r+f*k*u-d*i*u;b[15]=f*l*n-e*i*n+e*k*m-d*l*m-f*k*s+d*i*s;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,f=a.y,e=a.z,h=Math.cos(d),d=Math.sin(d),
k=Math.cos(f),f=Math.sin(f),i=Math.cos(e),e=Math.sin(e);if(b===void 0||b==="XYZ"){var l=h*i,j=h*e,n=d*i,m=d*e;c[0]=k*i;c[4]=-k*e;c[8]=f;c[1]=j+n*f;c[5]=l-m*f;c[9]=-d*k;c[2]=m-l*f;c[6]=n+j*f;c[10]=h*k}else if(b==="YXZ"){l=k*i;j=k*e;n=f*i;m=f*e;c[0]=l+m*d;c[4]=n*d-j;c[8]=h*f;c[1]=h*e;c[5]=h*i;c[9]=-d;c[2]=j*d-n;c[6]=m+l*d;c[10]=h*k}else if(b==="ZXY"){l=k*i;j=k*e;n=f*i;m=f*e;c[0]=l-m*d;c[4]=-h*e;c[8]=n+j*d;c[1]=j+n*d;c[5]=h*i;c[9]=m-l*d;c[2]=-h*f;c[6]=d;c[10]=h*k}else if(b==="ZYX"){l=h*i;j=h*e;n=d*i;
m=d*e;c[0]=k*i;c[4]=n*f-j;c[8]=l*f+m;c[1]=k*e;c[5]=m*f+l;c[9]=j*f-n;c[2]=-f;c[6]=d*k;c[10]=h*k}else if(b==="YZX"){l=h*k;j=h*f;n=d*k;m=d*f;c[0]=k*i;c[4]=m-l*e;c[8]=n*e+j;c[1]=e;c[5]=h*i;c[9]=-d*i;c[2]=-f*i;c[6]=j*e+n;c[10]=l-m*e}else if(b==="XZY"){l=h*k;j=h*f;n=d*k;m=d*f;c[0]=k*i;c[4]=-e;c[8]=f*i;c[1]=l*e+m;c[5]=h*i;c[9]=j*e-n;c[2]=n*e-j;c[6]=d*i;c[10]=m*e+l}return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w,h=c+c,k=d+d,i=f+f,a=c*h,l=c*k,c=c*i,j=d*k,d=d*
i,f=f*i,h=e*h,k=e*k,e=e*i;b[0]=1-(j+f);b[4]=l-e;b[8]=c+k;b[1]=l+e;b[5]=1-(a+f);b[9]=d-h;b[2]=c-k;b[6]=d+h;b[10]=1-(a+j);return this},compose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__m1,e=THREE.Matrix4.__m2;f.identity();f.setRotationFromQuaternion(b);e.makeScale(c.x,c.y,c.z);this.multiply(f,e);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,h=THREE.Matrix4.__v3;f.set(d[0],d[1],d[2]);e.set(d[4],d[5],d[6]);
h.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=f.length();c.y=e.length();c.z=h.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]=d.elements[0]/c.x;d.elements[1]=d.elements[1]/c.x;d.elements[2]=d.elements[2]/c.x;d.elements[4]=d.elements[4]/c.y;d.elements[5]=d.elements[5]/c.y;d.elements[6]=d.elements[6]/c.y;d.elements[8]=d.elements[8]/
c.z;d.elements[9]=d.elements[9]/c.z;d.elements[10]=d.elements[10]/c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),f=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*f;b[5]=a[5]*f;b[6]=a[6]*f;b[8]=a[8]*c;b[9]=a[9]*
c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],f=b[6],e=b[7],h=b[8],k=b[9],i=b[10],l=b[11],j=Math.cos(a),a=Math.sin(a);b[4]=j*c+a*h;b[5]=j*d+a*k;b[6]=j*f+a*i;b[7]=j*e+a*l;b[8]=j*h-a*c;b[9]=j*k-a*d;b[10]=j*i-a*f;b[11]=j*l-a*e;return this},rotateY:function(a){var b=
this.elements,c=b[0],d=b[1],f=b[2],e=b[3],h=b[8],k=b[9],i=b[10],l=b[11],j=Math.cos(a),a=Math.sin(a);b[0]=j*c-a*h;b[1]=j*d-a*k;b[2]=j*f-a*i;b[3]=j*e-a*l;b[8]=j*h+a*c;b[9]=j*k+a*d;b[10]=j*i+a*f;b[11]=j*l+a*e;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],h=b[4],k=b[5],i=b[6],l=b[7],j=Math.cos(a),a=Math.sin(a);b[0]=j*c+a*h;b[1]=j*d+a*k;b[2]=j*f+a*i;b[3]=j*e+a*l;b[4]=j*h-a*c;b[5]=j*k-a*d;b[6]=j*i-a*f;b[7]=j*l-a*e;return this},rotateByAxis:function(a,b){var c=this.elements;
if(a.x===1&&a.y===0&&a.z===0)return this.rotateX(b);if(a.x===0&&a.y===1&&a.z===0)return this.rotateY(b);if(a.x===0&&a.y===0&&a.z===1)return this.rotateZ(b);var d=a.x,f=a.y,e=a.z,h=Math.sqrt(d*d+f*f+e*e),d=d/h,f=f/h,e=e/h,h=d*d,k=f*f,i=e*e,l=Math.cos(b),j=Math.sin(b),n=1-l,m=d*f*n,s=d*e*n,n=f*e*n,d=d*j,p=f*j,j=e*j,e=h+(1-h)*l,h=m+j,f=s-p,m=m-j,k=k+(1-k)*l,j=n+d,s=s+p,n=n-d,i=i+(1-i)*l,l=c[0],d=c[1],p=c[2],o=c[3],r=c[4],u=c[5],D=c[6],v=c[7],x=c[8],I=c[9],A=c[10],y=c[11];c[0]=e*l+h*r+f*x;c[1]=e*d+h*
u+f*I;c[2]=e*p+h*D+f*A;c[3]=e*o+h*v+f*y;c[4]=m*l+k*r+j*x;c[5]=m*d+k*u+j*I;c[6]=m*p+k*D+j*A;c[7]=m*o+k*v+j*y;c[8]=s*l+n*r+i*x;c[9]=s*d+n*u+i*I;c[10]=s*p+n*D+i*A;c[11]=s*o+n*v+i*y;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]=b[0]*c;b[4]=b[4]*d;b[8]=b[8]*a;b[1]=b[1]*c;b[5]=b[5]*d;b[9]=b[9]*a;b[2]=b[2]*c;b[6]=b[6]*d;b[10]=b[10]*a;b[3]=b[3]*c;b[7]=b[7]*d;b[11]=b[11]*a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+
a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);
return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,e=a.x,h=a.y,k=a.z,i=f*e,l=f*h;this.set(i*e+c,i*h-d*k,i*k+d*h,0,i*h+d*k,l*h+c,l*k-d*e,0,i*k-d*h,l*k+d*e,f*k*k+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,f,e){var h=this.elements;h[0]=2*f/(b-a);h[4]=0;h[8]=(b+a)/(b-a);h[12]=0;h[1]=0;h[5]=2*f/(d-c);h[9]=(d+c)/(d-c);h[13]=0;h[2]=0;h[6]=0;h[10]=-(e+f)/(e-f);h[14]=-2*e*f/(e-f);h[3]=
0;h[7]=0;h[11]=-1;h[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),f=-a;return this.makeFrustum(f*b,a*b,f,a,c,d)},makeOrthographic:function(a,b,c,d,f,e){var h=this.elements,k=b-a,i=c-d,l=e-f;h[0]=2/k;h[4]=0;h[8]=0;h[12]=-((b+a)/k);h[1]=0;h[5]=2/i;h[9]=0;h[13]=-((c+d)/i);h[2]=0;h[6]=0;h[10]=-2/l;h[14]=-((e+f)/l);h[3]=0;h[7]=0;h[11]=0;h[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],
a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){a[b]===void 0&&(a[b]=[]);a[b].indexOf(c)===-1&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);d!==-1&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],f=c[2],e=c[3],h=c[4],k=c[5],i=c[6],l=c[7],j=c[8],n=c[9],m=c[10],s=c[11],p=c[12],o=c[13],r=c[14],c=c[15];b[0].set(e-a,l-h,s-j,c-p);b[1].set(e+a,l+h,s+j,c+p);b[2].set(e+d,l+k,s+n,c+o);b[3].set(e-d,l-k,s-n,c-o);b[4].set(e-f,l-i,s-m,c-r);b[5].set(e+f,l+i,s+m,c+r);for(d=0;d<6;d++){a=b[d];a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))}};
THREE.Frustum.prototype.contains=function(a){for(var b=0,c=this.planes,b=a.matrixWorld,d=b.elements,a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),f=0;f<6;f++){b=c[f].x*d[12]+c[f].y*d[13]+c[f].z*d[14]+c[f].w;if(b<=a)return false}return true};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,f){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=f||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,f=new a.Vector3,e=new a.Vector3,h=new a.Vector3,k=new a.Matrix4,i=function(a,b){return a.distance-b.distance},l=new a.Vector3,j=new a.Vector3,n=new a.Vector3,m=function(a,b,c){l.sub(c,a);var d=l.dot(b),a=j.add(a,n.copy(b).multiplyScalar(d));return c.distanceTo(a)},s=function(a,b,c,d){l.sub(d,b);j.sub(c,b);n.sub(a,
b);var a=l.dot(l),b=l.dot(j),c=l.dot(n),f=j.dot(j),d=j.dot(n),e=1/(a*f-b*b),f=(f*c-b*d)*e,a=(a*d-b*c)*e;return f>=0&&a>=0&&f+a<1},p=function(i,j,l){var p,o;if(i instanceof a.Particle){p=m(j.origin,j.direction,i.matrixWorld.getPosition());if(p>i.scale.x)return l;o={distance:p,point:i.position,face:null,object:i};l.push(o)}else if(i instanceof a.Mesh){var n=i.geometry.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis();p=m(j.origin,j.direction,i.matrixWorld.getPosition());if(p>n)return l;var A,
y,T=i.geometry,B=T.vertices,F,C,G;F=i.geometry.materials;C=i.material instanceof a.MeshFaceMaterial;var O,S=j.precision;i.matrixRotationWorld.extractRotation(i.matrixWorld);b.copy(j.origin);k.getInverse(i.matrixWorld);c.copy(b);k.multiplyVector3(c);d.copy(j.direction);k.rotateAxis(d).normalize();n=0;for(A=T.faces.length;n<A;n++){o=T.faces[n];p=C===true?F[o.materialIndex]:i.material;if(p!==void 0){G=p.side;f.sub(o.centroid,c);e=o.normal;p=d.dot(e);if(!(Math.abs(p)<S)){y=e.dot(f)/p;if(!(y<0)&&(G===
a.DoubleSide||(G===a.FrontSide?p<0:p>0))){h.add(c,d.multiplyScalar(y));if(o instanceof a.Face3){p=B[o.a];y=B[o.b];G=B[o.c];if(s(h,p,y,G)){y=i.matrixWorld.multiplyVector3(h.clone());p=b.distanceTo(y);if(!(p<j.near||p>j.far)){o={distance:p,point:y,face:o,faceIndex:n,object:i};l.push(o)}}}else if(o instanceof a.Face4){p=B[o.a];y=B[o.b];G=B[o.c];O=B[o.d];if(s(h,p,y,O)||s(h,y,G,O)){y=i.matrixWorld.multiplyVector3(h.clone());p=b.distanceTo(y);if(!(p<j.near||p>j.far)){o={distance:p,point:y,face:o,faceIndex:n,
object:i};l.push(o)}}}}}}}}},o=function(a,b,c){for(var a=a.getDescendants(),d=0,f=a.length;d<f;d++)p(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];b===true&&o(a,this,c);p(a,this,c);c.sort(i);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,f=a.length;d<f;d++){p(a[d],this,c);b===true&&o(a[d],this,c)}c.sort(i);return c}})(THREE);
THREE.Rectangle=function(){function a(){e=d-b;h=f-c}var b=0,c=0,d=0,f=0,e=0,h=0,k=true;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return e};this.getHeight=function(){return h};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(e,h,j,n){k=false;b=e;c=h;d=j;f=n;a()};this.addPoint=function(e,h){if(k===true){k=false;b=e;c=h;d=e;f=h}else{b=b<e?b:e;c=c<h?c:
h;d=d>e?d:e;f=f>h?f:h}a()};this.add3Points=function(e,h,j,n,m,s){if(k===true){k=false;b=e<j?e<m?e:m:j<m?j:m;c=h<n?h<s?h:s:n<s?n:s;d=e>j?e>m?e:m:j>m?j:m;f=h>n?h>s?h:s:n>s?n:s}else{b=e<j?e<m?e<b?e:b:m<b?m:b:j<m?j<b?j:b:m<b?m:b;c=h<n?h<s?h<c?h:c:s<c?s:c:n<s?n<c?n:c:s<c?s:c;d=e>j?e>m?e>d?e:d:m>d?m:d:j>m?j>d?j:d:m>d?m:d;f=h>n?h>s?h>f?h:f:s>f?s:f:n>s?n>f?n:f:s>f?s:f}a()};this.addRectangle=function(e){if(k===true){k=false;b=e.getLeft();c=e.getTop();d=e.getRight();f=e.getBottom()}else{b=b<e.getLeft()?b:e.getLeft();
c=c<e.getTop()?c:e.getTop();d=d>e.getRight()?d:e.getRight();f=f>e.getBottom()?f:e.getBottom()}a()};this.inflate=function(e){b=b-e;c=c-e;d=d+e;f=f+e;a()};this.minSelf=function(e){b=b>e.getLeft()?b:e.getLeft();c=c>e.getTop()?c:e.getTop();d=d<e.getRight()?d:e.getRight();f=f<e.getBottom()?f:e.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||f<a.getTop()||c>a.getBottom()?false:true};this.empty=function(){k=true;f=d=c=b=0;a()};this.isEmpty=function(){return k}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return a<0?-1:a>0?1:0}};
THREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=true;this.quaternion=
new THREE.Quaternion;this.useQuaternion=false;this.boundRadius=0;this.boundRadiusScale=1;this.visible=true;this.receiveShadow=this.castShadow=false;this.frustumCulled=true;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,f;c=0;for(d=this.children.length;c<d;c++){f=this.children[c];
if(f.name===a)return f;if(b){f=f.getChildByName(a,b);if(f!==void 0)return f}}},getDescendants:function(a){a===void 0&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion===false?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);if(this.scale.x!==1||this.scale.y!==
1||this.scale.z!==1){this.matrix.scale(this.scale);this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))}this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(a){this.matrixAutoUpdate===true&&this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||a===true){this.parent===void 0?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix);this.matrixWorldNeedsUpdate=false;a=true}for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},
clone:function(){}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3DCount=0;
THREE.Projector=function(){function a(){if(e===k){var a=new THREE.RenderableObject;h.push(a);k++;e++;return a}return h[e++]}function b(){if(l===n){var a=new THREE.RenderableVertex;j.push(a);n++;l++;return a}return j[l++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,j=-b.z+b.w;if(e>=0&&f>=0&&h>=0&&j>=0)return true;if(e<0&&f<0||h<0&&j<0)return false;e<0?c=Math.max(c,e/(e-f)):f<0&&(d=Math.min(d,e/(e-f)));h<0?c=Math.max(c,h/(h-j)):j<0&&(d=Math.min(d,h/(h-j)));
if(d<c)return false;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return true}var f,e,h=[],k=0,i,l,j=[],n=0,m,s,p=[],o=0,r,u=[],D=0,v,x,I=[],A=0,y,T,B=[],F=0,C={objects:[],sprites:[],lights:[],elements:[]},G=new THREE.Vector3,O=new THREE.Vector4,S=new THREE.Matrix4,Q=new THREE.Matrix4,E=new THREE.Frustum,z=new THREE.Vector4,J=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);S.multiply(b.projectionMatrix,b.matrixWorldInverse);S.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);S.multiply(b.matrixWorld,b.projectionMatrixInverse);S.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(h,k,n,da){var xa=k.near,P=k.far,Ka=false,La,Y,ca,K,U,fa,Ha,ra,ma,Ea,Fa,$a,ha,mb,Va,ab;T=x=r=s=0;C.elements.length=0;h.updateMatrixWorld();k.parent===
void 0&&k.updateMatrixWorld();k.matrixWorldInverse.getInverse(k.matrixWorld);S.multiply(k.projectionMatrix,k.matrixWorldInverse);E.setFromMatrix(S);e=0;C.objects.length=0;C.sprites.length=0;C.lights.length=0;var yb=function(b){for(var c=0,d=b.children.length;c<d;c++){var e=b.children[c];if(e.visible!==false){if(e instanceof THREE.Light)C.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(e.frustumCulled===false||E.contains(e)===true){f=a();f.object=e;if(e.renderDepth!==null)f.z=
e.renderDepth;else{G.copy(e.matrixWorld.getPosition());S.multiplyVector3(G);f.z=G.z}C.objects.push(f)}}else if(e instanceof THREE.Sprite||e instanceof THREE.Particle){f=a();f.object=e;if(e.renderDepth!==null)f.z=e.renderDepth;else{G.copy(e.matrixWorld.getPosition());S.multiplyVector3(G);f.z=G.z}C.sprites.push(f)}else{f=a();f.object=e;if(e.renderDepth!==null)f.z=e.renderDepth;else{G.copy(e.matrixWorld.getPosition());S.multiplyVector3(G);f.z=G.z}C.objects.push(f)}yb(e)}}};yb(h);n===true&&C.objects.sort(c);
h=0;for(n=C.objects.length;h<n;h++){ra=C.objects[h].object;ma=ra.matrixWorld;l=0;if(ra instanceof THREE.Mesh){Ea=ra.geometry;Fa=ra.geometry.materials;ca=Ea.vertices;$a=Ea.faces;mb=Ea.faceVertexUvs;Ea=ra.matrixRotationWorld.extractRotation(ma);ab=ra.material instanceof THREE.MeshFaceMaterial;La=0;for(Y=ca.length;La<Y;La++){i=b();i.positionWorld.copy(ca[La]);ma.multiplyVector3(i.positionWorld);i.positionScreen.copy(i.positionWorld);S.multiplyVector4(i.positionScreen);i.positionScreen.x=i.positionScreen.x/
i.positionScreen.w;i.positionScreen.y=i.positionScreen.y/i.positionScreen.w;i.visible=i.positionScreen.z>xa&&i.positionScreen.z<P}ca=0;for(La=$a.length;ca<La;ca++){Ha=$a[ca];Y=ab===true?Fa[Ha.materialIndex]:ra.material;if(Y!==void 0){fa=Y.side;if(Ha instanceof THREE.Face3){K=j[Ha.a];U=j[Ha.b];ha=j[Ha.c];if(K.visible===true&&U.visible===true&&ha.visible===true){Ka=(ha.positionScreen.x-K.positionScreen.x)*(U.positionScreen.y-K.positionScreen.y)-(ha.positionScreen.y-K.positionScreen.y)*(U.positionScreen.x-
K.positionScreen.x)<0;if(fa===THREE.DoubleSide||Ka===(fa===THREE.FrontSide)){if(s===o){Va=new THREE.RenderableFace3;p.push(Va);o++;s++;m=Va}else m=p[s++];m.v1.copy(K);m.v2.copy(U);m.v3.copy(ha)}else continue}else continue}else if(Ha instanceof THREE.Face4){K=j[Ha.a];U=j[Ha.b];ha=j[Ha.c];Va=j[Ha.d];if(K.visible===true&&U.visible===true&&ha.visible===true&&Va.visible===true){Ka=(Va.positionScreen.x-K.positionScreen.x)*(U.positionScreen.y-K.positionScreen.y)-(Va.positionScreen.y-K.positionScreen.y)*
(U.positionScreen.x-K.positionScreen.x)<0||(U.positionScreen.x-ha.positionScreen.x)*(Va.positionScreen.y-ha.positionScreen.y)-(U.positionScreen.y-ha.positionScreen.y)*(Va.positionScreen.x-ha.positionScreen.x)<0;if(fa===THREE.DoubleSide||Ka===(fa===THREE.FrontSide)){if(r===D){var zb=new THREE.RenderableFace4;u.push(zb);D++;r++;m=zb}else m=u[r++];m.v1.copy(K);m.v2.copy(U);m.v3.copy(ha);m.v4.copy(Va)}else continue}else continue}m.normalWorld.copy(Ha.normal);Ka===false&&(fa===THREE.BackSide||fa===THREE.DoubleSide)&&
m.normalWorld.negate();Ea.multiplyVector3(m.normalWorld);m.centroidWorld.copy(Ha.centroid);ma.multiplyVector3(m.centroidWorld);m.centroidScreen.copy(m.centroidWorld);S.multiplyVector3(m.centroidScreen);Ha=Ha.vertexNormals;K=0;for(U=Ha.length;K<U;K++){ha=m.vertexNormalsWorld[K];ha.copy(Ha[K]);Ka===false&&(fa===THREE.BackSide||fa===THREE.DoubleSide)&&ha.negate();Ea.multiplyVector3(ha)}m.vertexNormalsLength=Ha.length;K=0;for(U=mb.length;K<U;K++){ha=mb[K][ca];if(ha!==void 0){fa=0;for(Ha=ha.length;fa<
Ha;fa++)m.uvs[K][fa]=ha[fa]}}m.material=Y;m.z=m.centroidScreen.z;C.elements.push(m)}}}else if(ra instanceof THREE.Line){Q.multiply(S,ma);ca=ra.geometry.vertices;K=b();K.positionScreen.copy(ca[0]);Q.multiplyVector4(K.positionScreen);ma=ra.type===THREE.LinePieces?2:1;La=1;for(Y=ca.length;La<Y;La++){K=b();K.positionScreen.copy(ca[La]);Q.multiplyVector4(K.positionScreen);if(!((La+1)%ma>0)){U=j[l-2];z.copy(K.positionScreen);J.copy(U.positionScreen);if(d(z,J)===true){z.multiplyScalar(1/z.w);J.multiplyScalar(1/
J.w);if(x===A){Fa=new THREE.RenderableLine;I.push(Fa);A++;x++;v=Fa}else v=I[x++];v.v1.positionScreen.copy(z);v.v2.positionScreen.copy(J);v.z=Math.max(z.z,J.z);v.material=ra.material;C.elements.push(v)}}}}}h=0;for(n=C.sprites.length;h<n;h++){ra=C.sprites[h].object;ma=ra.matrixWorld;if(ra instanceof THREE.Particle){O.set(ma.elements[12],ma.elements[13],ma.elements[14],1);S.multiplyVector4(O);O.z=O.z/O.w;if(O.z>0&&O.z<1){if(T===F){xa=new THREE.RenderableParticle;B.push(xa);F++;T++;y=xa}else y=B[T++];
y.object=ra;y.x=O.x/O.w;y.y=O.y/O.w;y.z=O.z;y.rotation=ra.rotation.z;y.scale.x=ra.scale.x*Math.abs(y.x-(O.x+k.projectionMatrix.elements[0])/(O.w+k.projectionMatrix.elements[12]));y.scale.y=ra.scale.y*Math.abs(y.y-(O.y+k.projectionMatrix.elements[5])/(O.w+k.projectionMatrix.elements[13]));y.material=ra.material;C.elements.push(y)}}}da===true&&C.elements.sort(c);return C}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==void 0?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),f=Math.cos(a.z/2),e=Math.sin(a.x/2),h=Math.sin(a.y/2),k=Math.sin(a.z/2);if(b===void 0||b==="XYZ"){this.x=e*d*f+c*h*k;this.y=c*h*f-e*d*k;this.z=c*d*k+e*h*f;this.w=c*d*f-e*h*k}else if(b==="YXZ"){this.x=e*d*f+c*h*k;this.y=c*h*f-e*d*k;this.z=
c*d*k-e*h*f;this.w=c*d*f+e*h*k}else if(b==="ZXY"){this.x=e*d*f-c*h*k;this.y=c*h*f+e*d*k;this.z=c*d*k+e*h*f;this.w=c*d*f-e*h*k}else if(b==="ZYX"){this.x=e*d*f-c*h*k;this.y=c*h*f+e*d*k;this.z=c*d*k-e*h*f;this.w=c*d*f+e*h*k}else if(b==="YZX"){this.x=e*d*f+c*h*k;this.y=c*h*f+e*d*k;this.z=c*d*k-e*h*f;this.w=c*d*f-e*h*k}else if(b==="XZY"){this.x=e*d*f-c*h*k;this.y=c*h*f-e*d*k;this.z=c*d*k+e*h*f;this.w=c*d*f+e*h*k}return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*
d;this.z=a.z*d;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],f=b[1],e=b[5],h=b[9],k=b[2],i=b[6],b=b[10],l=c+e+b;if(l>0){c=0.5/Math.sqrt(l+1);this.w=0.25/c;this.x=(i-h)*c;this.y=(d-k)*c;this.z=(f-a)*c}else if(c>e&&c>b){c=2*Math.sqrt(1+c-e-b);this.w=(i-h)/c;this.x=0.25*c;this.y=(a+f)/c;this.z=(d+k)/c}else if(e>b){c=2*Math.sqrt(1+e-c-b);this.w=(d-k)/c;this.x=(a+f)/c;this.y=0.25*c;this.z=(h+i)/c}else{c=2*Math.sqrt(1+b-c-e);this.w=(f-a)/c;this.x=
(d+k)/c;this.y=(h+i)/c;this.z=0.25*c}return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x=this.x*-1;this.y=this.y*-1;this.z=this.z*-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);if(a===0)this.w=this.z=this.y=this.x=0;else{a=1/a;this.x=this.x*a;this.y=
this.y*a;this.z=this.z*a;this.w=this.w*a}return this},multiply:function(a,b){var c=a.x,d=a.y,f=a.z,e=a.w,h=b.x,k=b.y,i=b.z,l=b.w;this.x=c*l+d*i-f*k+e*h;this.y=-c*i+d*l+f*h+e*k;this.z=c*k-d*h+f*l+e*i;this.w=-c*h-d*k-f*i+e*l;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,f=this.w,e=a.x,h=a.y,k=a.z,a=a.w;this.x=b*a+f*e+c*k-d*h;this.y=c*a+f*h+d*e-b*k;this.z=d*a+f*k+b*h-c*e;this.w=f*a-b*e-c*h-d*k;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,f=a.z,e=this.x,h=
this.y,k=this.z,i=this.w,l=i*c+h*f-k*d,j=i*d+k*c-e*f,n=i*f+e*d-h*c,c=-e*c-h*d-k*f;b.x=l*i+c*-e+j*-k-n*-h;b.y=j*i+c*-h+n*-e-l*-k;b.z=n*i+c*-k+l*-h-j*-e;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,f=this.z,e=this.w,h=e*a.w+c*a.x+d*a.y+f*a.z;if(h<0){this.w=-a.w;this.x=-a.x;this.y=-a.y;this.z=-a.z;h=-h}else this.copy(a);if(h>=1){this.w=e;this.x=c;this.y=d;this.z=f;return this}var k=Math.acos(h),i=Math.sqrt(1-h*h);if(Math.abs(i)<0.0010){this.w=0.5*(e+this.w);this.x=0.5*(c+this.x);this.y=0.5*
(d+this.y);this.z=0.5*(f+this.z);return this}h=Math.sin((1-b)*k)/i;k=Math.sin(b*k)/i;this.w=e*h+this.w*k;this.x=c*h+this.x*k;this.y=d*h+this.y*k;this.z=f*h+this.z*k;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;if(f<0){c.w=-b.w;c.x=-b.x;c.y=-b.y;c.z=-b.z;f=-f}else c.copy(b);if(Math.abs(f)>=1){c.w=a.w;c.x=a.x;c.y=a.y;c.z=a.z;return c}var b=Math.acos(f),e=Math.sqrt(1-f*f);if(Math.abs(e)<0.0010){c.w=0.5*(a.w+c.w);c.x=0.5*(a.x+c.x);c.y=0.5*(a.y+c.y);c.z=0.5*(a.z+c.z);return c}f=Math.sin((1-d)*b)/e;d=Math.sin(d*b)/e;c.w=a.w*f+c.w*d;c.x=a.x*f+c.x*d;c.y=a.y*f+c.y*d;c.z=a.z*f+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,f,e){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,f,e,h){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=h;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u=this.u+(a.u-this.u)*b;this.v=this.v+(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=false;this.dynamic=true};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var e=0,h=f.vertexNormals.length;e<h;e++)b.multiplyVector3(f.vertexNormals[e]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];c.centroid.set(0,
0,0);if(c instanceof THREE.Face3){c.centroid.addSelf(this.vertices[c.a]);c.centroid.addSelf(this.vertices[c.b]);c.centroid.addSelf(this.vertices[c.c]);c.centroid.divideScalar(3)}else if(c instanceof THREE.Face4){c.centroid.addSelf(this.vertices[c.a]);c.centroid.addSelf(this.vertices[c.b]);c.centroid.addSelf(this.vertices[c.c]);c.centroid.addSelf(this.vertices[c.d]);c.centroid.divideScalar(4)}}},computeFaceNormals:function(){var a,b,c,d,f,e,h=new THREE.Vector3,k=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++){c=this.faces[a];d=this.vertices[c.a];f=this.vertices[c.b];e=this.vertices[c.c];h.sub(e,f);k.sub(d,f);h.crossSelf(k);h.isZero()||h.normalize();c.normal.copy(h)}},computeVertexNormals:function(){var a,b,c,d;if(this.__tmpVertices===void 0){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];
else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3){d[c.a].addSelf(c.normal);d[c.b].addSelf(c.normal);d[c.c].addSelf(c.normal)}else if(c instanceof THREE.Face4){d[c.a].addSelf(c.normal);d[c.b].addSelf(c.normal);d[c.c].addSelf(c.normal);d[c.d].addSelf(c.normal)}}a=0;
for(b=this.vertices.length;a<b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3){c.vertexNormals[0].copy(d[c.a]);c.vertexNormals[1].copy(d[c.b]);c.vertexNormals[2].copy(d[c.c])}else if(c instanceof THREE.Face4){c.vertexNormals[0].copy(d[c.a]);c.vertexNormals[1].copy(d[c.b]);c.vertexNormals[2].copy(d[c.c]);c.vertexNormals[3].copy(d[c.d])}}},computeMorphNormals:function(){var a,b,c,d,f;c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];f.__originalFaceNormal?
f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=f.normal.clone();if(!f.__originalVertexNormals)f.__originalVertexNormals=[];a=0;for(b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone()}var e=new THREE.Geometry;e.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=
[];var h=this.morphNormals[a].faceNormals,k=this.morphNormals[a].vertexNormals,i,l;c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];i=new THREE.Vector3;l=f instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3};h.push(i);k.push(l)}}h=this.morphNormals[a];e.vertices=this.morphTargets[a].vertices;e.computeFaceNormals();e.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];
i=h.faceNormals[c];l=h.vertexNormals[c];i.copy(f.normal);if(f instanceof THREE.Face3){l.a.copy(f.vertexNormals[0]);l.b.copy(f.vertexNormals[1]);l.c.copy(f.vertexNormals[2])}else{l.a.copy(f.vertexNormals[0]);l.b.copy(f.vertexNormals[1]);l.c.copy(f.vertexNormals[2]);l.d.copy(f.vertexNormals[3])}}}c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];f.normal=f.__originalFaceNormal;f.vertexNormals=f.__originalVertexNormals}},computeTangents:function(){function a(a,b,c,d,e,f,O){k=a.vertices[b];i=a.vertices[c];
l=a.vertices[d];j=h[e];n=h[f];m=h[O];s=i.x-k.x;p=l.x-k.x;o=i.y-k.y;r=l.y-k.y;u=i.z-k.z;D=l.z-k.z;v=n.u-j.u;x=m.u-j.u;I=n.v-j.v;A=m.v-j.v;y=1/(v*A-x*I);C.set((A*s-I*p)*y,(A*o-I*r)*y,(A*u-I*D)*y);G.set((v*p-x*s)*y,(v*r-x*o)*y,(v*D-x*u)*y);B[b].addSelf(C);B[c].addSelf(C);B[d].addSelf(C);F[b].addSelf(G);F[c].addSelf(G);F[d].addSelf(G)}var b,c,d,f,e,h,k,i,l,j,n,m,s,p,o,r,u,D,v,x,I,A,y,T,B=[],F=[],C=new THREE.Vector3,G=new THREE.Vector3,O=new THREE.Vector3,S=new THREE.Vector3,Q=new THREE.Vector3;b=0;for(c=
this.vertices.length;b<c;b++){B[b]=new THREE.Vector3;F[b]=new THREE.Vector3}b=0;for(c=this.faces.length;b<c;b++){e=this.faces[b];h=this.faceVertexUvs[0][b];if(e instanceof THREE.Face3)a(this,e.a,e.b,e.c,0,1,2);else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.d,0,1,3);a(this,e.b,e.c,e.d,1,2,3)}}var E=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){e=this.faces[b];for(d=0;d<e.vertexNormals.length;d++){Q.copy(e.vertexNormals[d]);f=e[E[d]];T=B[f];O.copy(T);O.subSelf(Q.multiplyScalar(Q.dot(T))).normalize();
S.cross(e.vertexNormals[d],T);f=S.dot(F[f]);f=f<0?-1:1;e.vertexTangents[d]=new THREE.Vector4(O.x,O.y,O.z,f)}}this.hasTangents=true},computeBoundingBox:function(){if(!this.boundingBox)this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3};if(this.vertices.length>0){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,f=this.vertices.length;d<f;d++){a=this.vertices[d];if(a.x<b.x)b.x=a.x;else if(a.x>c.x)c.x=
a.x;if(a.y<b.y)b.y=a.y;else if(a.y>c.y)c.y=a.y;if(a.z<b.z)b.z=a.z;else if(a.z>c.z)c.z=a.z}}else{this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){var a=0;if(this.boundingSphere===null)this.boundingSphere={radius:0};for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,4),e,h,k,i;e=0;for(h=this.vertices.length;e<h;e++){d=
this.vertices[e];d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join("_");if(a[d]===void 0){a[d]=e;b.push(this.vertices[e]);c[e]=b.length-1}else c[e]=c[a[d]]}e=0;for(h=this.faces.length;e<h;e++){a=this.faces[e];if(a instanceof THREE.Face3){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c]}else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(f=3;f>0;f--)if(d.indexOf(a["abcd"[f]])!==f){d.splice(f,1);this.faces[e]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,
a.materialIndex);d=0;for(k=this.faceVertexUvs.length;d<k;d++)(i=this.faceVertexUvs[d][e])&&i.splice(f,1);this.faces[e].vertexColors=a.vertexColors;break}}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){}};THREE.GeometryCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.attributes={};this.dynamic=false;this.boundingSphere=this.boundingBox=null;this.hasTangents=false;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;if(this.attributes.position)b=this.attributes.position.array;if(this.attributes.normal)c=this.attributes.normal.array;if(b!==void 0){a.multiplyVector3Array(b);this.verticesNeedUpdate=true}if(c!==void 0){b=new THREE.Matrix4;b.extractRotation(a);b.multiplyVector3Array(c);this.normalsNeedUpdate=true}},computeBoundingBox:function(){if(!this.boundingBox)this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,
Infinity),max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,f,e=0,h=a.length;e<h;e=e+3){c=a[e];d=a[e+1];f=a[e+2];if(c<b.min.x)b.min.x=c;else if(c>b.max.x)b.max.x=c;if(d<b.min.y)b.min.y=d;else if(d>b.max.y)b.max.y=d;if(f<b.min.z)b.min.z=f;else if(f>b.max.z)b.max.z=f}if(a===void 0||a.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){if(!this.boundingSphere)this.boundingSphere=
{radius:0};var a=this.attributes.position.array;if(a){for(var b,c=0,d,f,e=0,h=a.length;e<h;e=e+3){b=a[e];d=a[e+1];f=a[e+2];b=b*b+d*d+f*f;b>c&&(c=b)}this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(this.attributes.normal===void 0)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=
0}var f=this.offsets,e=this.attributes.index.array,h=this.attributes.position.array,k=this.attributes.normal.array,i,l,j,n,m,s,p=new THREE.Vector3,o=new THREE.Vector3,r=new THREE.Vector3,u=new THREE.Vector3,D=new THREE.Vector3;c=0;for(d=f.length;c<d;++c){b=f[c].start;i=f[c].count;var v=f[c].index;a=b;for(b=b+i;a<b;a=a+3){i=v+e[a];l=v+e[a+1];j=v+e[a+2];n=h[i*3];m=h[i*3+1];s=h[i*3+2];p.set(n,m,s);n=h[l*3];m=h[l*3+1];s=h[l*3+2];o.set(n,m,s);n=h[j*3];m=h[j*3+1];s=h[j*3+2];r.set(n,m,s);u.sub(r,o);D.sub(p,
o);u.crossSelf(D);k[i*3]=k[i*3]+u.x;k[i*3+1]=k[i*3+1]+u.y;k[i*3+2]=k[i*3+2]+u.z;k[l*3]=k[l*3]+u.x;k[l*3+1]=k[l*3+1]+u.y;k[l*3+2]=k[l*3+2]+u.z;k[j*3]=k[j*3]+u.x;k[j*3+1]=k[j*3+1]+u.y;k[j*3+2]=k[j*3+2]+u.z}}a=0;for(b=k.length;a<b;a=a+3){n=k[a];m=k[a+1];s=k[a+2];c=1/Math.sqrt(n*n+m*m+s*s);k[a]=k[a]*c;k[a+1]=k[a+1]*c;k[a+2]=k[a+2]*c}this.normalsNeedUpdate=true}},computeTangents:function(){function a(a){ba.x=d[a*3];ba.y=d[a*3+1];ba.z=d[a*3+2];ga.copy(ba);xa=i[a];J.copy(xa);J.subSelf(ba.multiplyScalar(ba.dot(xa))).normalize();
X.cross(ga,xa);P=X.dot(l[a]);da=P<0?-1:1;k[a*4]=J.x;k[a*4+1]=J.y;k[a*4+2]=J.z;k[a*4+3]=da}if(this.attributes.index===void 0||this.attributes.position===void 0||this.attributes.normal===void 0||this.attributes.uv===void 0)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,f=this.attributes.uv.array,e=c.length/3;if(this.attributes.tangent===
void 0){var h=4*e;this.attributes.tangent={itemSize:4,array:new Float32Array(h),numItems:h}}for(var k=this.attributes.tangent.array,i=[],l=[],h=0;h<e;h++){i[h]=new THREE.Vector3;l[h]=new THREE.Vector3}var j,n,m,s,p,o,r,u,D,v,x,I,A,y,T,e=new THREE.Vector3,h=new THREE.Vector3,B,F,C,G,O,S,Q,E=this.offsets;C=0;for(G=E.length;C<G;++C){F=E[C].start;O=E[C].count;var z=E[C].index;B=F;for(F=F+O;B<F;B=B+3){O=z+b[B];S=z+b[B+1];Q=z+b[B+2];j=c[O*3];n=c[O*3+1];m=c[O*3+2];s=c[S*3];p=c[S*3+1];o=c[S*3+2];r=c[Q*3];
u=c[Q*3+1];D=c[Q*3+2];v=f[O*2];x=f[O*2+1];I=f[S*2];A=f[S*2+1];y=f[Q*2];T=f[Q*2+1];s=s-j;j=r-j;p=p-n;n=u-n;o=o-m;m=D-m;I=I-v;v=y-v;A=A-x;x=T-x;T=1/(I*x-v*A);e.set((x*s-A*j)*T,(x*p-A*n)*T,(x*o-A*m)*T);h.set((I*j-v*s)*T,(I*n-v*p)*T,(I*m-v*o)*T);i[O].addSelf(e);i[S].addSelf(e);i[Q].addSelf(e);l[O].addSelf(h);l[S].addSelf(h);l[Q].addSelf(h)}}var J=new THREE.Vector3,X=new THREE.Vector3,ba=new THREE.Vector3,ga=new THREE.Vector3,da,xa,P;C=0;for(G=E.length;C<G;++C){F=E[C].start;O=E[C].count;z=E[C].index;B=
F;for(F=F+O;B<F;B=B+3){O=z+b[B];S=z+b[B+1];Q=z+b[B+2];a(O);a(S);a(Q)}}this.tangentsNeedUpdate=this.hasTangents=true}}};
THREE.Spline=function(a){function b(a,b,c,d,e,f,h){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*h+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,e,h,k,i,l,j,n,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;e=Math.floor(f);h=f-e;c[0]=e===0?e:e-1;c[1]=e;c[2]=e>this.points.length-2?this.points.length-1:e+1;c[3]=e>this.points.length-3?this.points.length-1:
e+2;l=this.points[c[0]];j=this.points[c[1]];n=this.points[c[2]];m=this.points[c[3]];k=h*h;i=h*k;d.x=b(l.x,j.x,n.x,m.x,h,k,i);d.y=b(l.y,j.y,n.y,m.y,h,k,i);d.z=b(l.z,j.z,n.z,m.z,h,k,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++){b=this.points[a];d[a]=[b.x,b.y,b.z]}return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,h=new THREE.Vector3,j=[],k=0;j[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++){b=
a/c;d=this.getPoint(b);h.copy(d);k=k+h.distanceTo(f);f.copy(d);b=(this.points.length-1)*b;b=Math.floor(b);if(b!=e){j[b]=k;e=b}}j[j.length]=k;return{chunks:j,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,h,j=[],k=new THREE.Vector3,i=this.getLength();j.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=i.chunks[b]-i.chunks[b-1];h=Math.ceil(a*c/i.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<h-1;c++){d=e+c*(1/h)*(f-e);d=this.getPoint(d);
j.push(k.copy(d).clone())}j.push(k.copy(this.points[b]).clone())}this.points=j}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate===true&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,f,e){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=f!==void 0?f:0.1;this.far=e!==void 0?e:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=d!==void 0?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){b===void 0&&(b=24);this.fov=2*Math.atan(b/(a*2))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,e){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=e;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.onlyShadow=this.castShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;
this.shadowCascade=false;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=c!==void 0?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,f){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.angle=d!==void 0?d:Math.PI/2;this.exponent=f!==void 0?f:10;this.onlyShadow=this.castShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=
this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(a.length<1?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++){b=a.materials[c];if(b instanceof THREE.ShaderMaterial)return true}return false},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function f(a,e,f,k,i,l,r){var u=f.toLowerCase().endsWith(".dds"),D=b+"/"+f;if(u){var v=THREE.ImageUtils.loadCompressedTexture(D);a[e]=v}else{v=document.createElement("canvas");a[e]=new THREE.Texture(v)}a[e].sourceFile=f;if(k){a[e].repeat.set(k[0],k[1]);if(k[0]!==1)a[e].wrapS=THREE.RepeatWrapping;if(k[1]!==1)a[e].wrapT=THREE.RepeatWrapping}i&&a[e].offset.set(i[0],i[1]);if(l){f={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping};if(f[l[0]]!==void 0)a[e].wrapS=f[l[0]];if(f[l[1]]!==void 0)a[e].wrapT=f[l[1]]}if(r)a[e].anisotropy=r;if(!u){var x=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);x.image.width=a;x.image.height=b;x.image.getContext("2d").drawImage(this,0,0,a,b)}else x.image=this;x.needsUpdate=true};a.crossOrigin=h.crossOrigin;a.src=D}}function e(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255}var h=this,k="MeshLambertMaterial",
i={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(a.shading){var l=a.shading.toLowerCase();l==="phong"?k="MeshPhongMaterial":l==="basic"&&(k="MeshBasicMaterial")}if(a.blending!==void 0&&THREE[a.blending]!==void 0)i.blending=THREE[a.blending];if(a.transparent!==void 0||a.opacity<1)i.transparent=a.transparent;if(a.depthTest!==void 0)i.depthTest=a.depthTest;if(a.depthWrite!==void 0)i.depthWrite=a.depthWrite;if(a.visible!==void 0)i.visible=a.visible;if(a.flipSided!==
void 0)i.side=THREE.BackSide;if(a.doubleSided!==void 0)i.side=THREE.DoubleSide;if(a.wireframe!==void 0)i.wireframe=a.wireframe;if(a.vertexColors!==void 0)if(a.vertexColors==="face")i.vertexColors=THREE.FaceColors;else if(a.vertexColors)i.vertexColors=THREE.VertexColors;if(a.colorDiffuse)i.color=e(a.colorDiffuse);else if(a.DbgColor)i.color=a.DbgColor;if(a.colorSpecular)i.specular=e(a.colorSpecular);if(a.colorAmbient)i.ambient=e(a.colorAmbient);if(a.transparency)i.opacity=a.transparency;if(a.specularCoef)i.shininess=
a.specularCoef;a.mapDiffuse&&b&&f(i,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&f(i,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&f(i,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&f(i,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&f(i,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);if(a.mapBumpScale)i.bumpScale=a.mapBumpScale;if(a.mapNormal){k=THREE.ShaderUtils.lib.normal;l=THREE.UniformsUtils.clone(k.uniforms);l.tNormal.value=i.normalMap;a.mapNormalFactor&&l.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor);if(i.map){l.tDiffuse.value=i.map;l.enableDiffuse.value=true}if(i.specularMap){l.tSpecular.value=i.specularMap;l.enableSpecular.value=true}if(i.lightMap){l.tAO.value=
i.lightMap;l.enableAO.value=true}l.uDiffuseColor.value.setHex(i.color);l.uSpecularColor.value.setHex(i.specular);l.uAmbientColor.value.setHex(i.ambient);l.uShininess.value=i.shininess;if(i.opacity!==void 0)l.uOpacity.value=i.opacity;i=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:l,lights:true,fog:true})}else i=new THREE[k](i);if(a.DbgName!==void 0)i.name=a.DbgName;return i}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};
THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),f=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,f)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,f,e){var h=new XMLHttpRequest;h.onreadystatechange=function(){if(h.readyState==4)if(h.status==200||h.status==0){var k=JSON.parse(h.responseText);a.loadAjaxBuffers(k,c,f,d,e)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+h.status+"]")};h.open("GET",b,true);h.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,f){var e=new XMLHttpRequest,h=c+"/"+a.buffers,k=0;e.onreadystatechange=function(){if(e.readyState==4)if(e.status==200||e.status==0){var c=e.response;if(c===void 0)c=(new Uint8Array(e.responseBody)).buffer;THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+h+"] ["+e.status+"]");else if(e.readyState==3){if(f){k==0&&(k=e.getResponseHeader("Content-Length"));f({total:k,loaded:e.responseText.length})}}else e.readyState==
2&&(k=e.getResponseHeader("Content-Length"))};e.open("GET",h,true);e.responseType="arraybuffer";e.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var f=function(b){var c,f,i,l,j,n,m,s,p,o,r,u,D,v,x;function I(a){return a%4?4-a%4:0}function A(a,b){return(new Uint8Array(a,b,1))[0]}function y(a,b){return(new Uint32Array(a,b,1))[0]}function T(b,c){var d,e,f,h,k,j,i,l,m=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=m[d*3];f=m[d*3+1];h=m[d*3+2];k=z[e*2];e=z[e*2+1];j=z[f*2];i=z[f*2+1];f=z[h*2];l=z[h*2+1];h=S.faceVertexUvs[0];var o=[];o.push(new THREE.UV(k,e));o.push(new THREE.UV(j,i));o.push(new THREE.UV(f,
l));h.push(o)}}function B(b,c){var d,e,f,h,k,j,i,l,m,o,p=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=p[d*4];f=p[d*4+1];h=p[d*4+2];k=p[d*4+3];j=z[e*2];e=z[e*2+1];i=z[f*2];m=z[f*2+1];l=z[h*2];o=z[h*2+1];h=z[k*2];f=z[k*2+1];k=S.faceVertexUvs[0];var n=[];n.push(new THREE.UV(j,e));n.push(new THREE.UV(i,m));n.push(new THREE.UV(l,o));n.push(new THREE.UV(h,f));k.push(n)}}function F(b,c,d){for(var e,f,h,k,c=new Uint32Array(a,c,3*b),j=new Uint16Array(a,d,b),d=0;d<b;d++){e=c[d*3];f=c[d*3+1];h=c[d*3+2];k=j[d];
S.faces.push(new THREE.Face3(e,f,h,null,null,k))}}function C(b,c,d){for(var e,f,h,k,j,c=new Uint32Array(a,c,4*b),i=new Uint16Array(a,d,b),d=0;d<b;d++){e=c[d*4];f=c[d*4+1];h=c[d*4+2];k=c[d*4+3];j=i[d];S.faces.push(new THREE.Face4(e,f,h,k,null,null,j))}}function G(b,c,d,e){for(var f,h,k,j,i,l,m,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),o=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[e*3];h=c[e*3+1];k=c[e*3+2];i=d[e*3];l=d[e*3+1];m=d[e*3+2];j=o[e];var n=E[l*3],p=E[l*3+1];l=E[l*3+2];var r=E[m*3],
s=E[m*3+1];m=E[m*3+2];S.faces.push(new THREE.Face3(f,h,k,[new THREE.Vector3(E[i*3],E[i*3+1],E[i*3+2]),new THREE.Vector3(n,p,l),new THREE.Vector3(r,s,m)],null,j))}}function O(b,c,d,e){for(var f,h,k,j,i,l,m,o,n,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),p=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[e*4];h=c[e*4+1];k=c[e*4+2];j=c[e*4+3];l=d[e*4];m=d[e*4+1];o=d[e*4+2];n=d[e*4+3];i=p[e];var r=E[m*3],s=E[m*3+1];m=E[m*3+2];var u=E[o*3],v=E[o*3+1];o=E[o*3+2];var z=E[n*3],y=E[n*3+1];n=E[n*3+2];S.faces.push(new THREE.Face4(f,
h,k,j,[new THREE.Vector3(E[l*3],E[l*3+1],E[l*3+2]),new THREE.Vector3(r,s,m),new THREE.Vector3(u,v,o),new THREE.Vector3(z,y,n)],null,i))}}var S=this,Q=0,E=[],z=[],J,X,ba;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(S,d,b);x=a;X=Q;b=new Uint8Array(x,X,12);o="";for(D=0;D<12;D++)o=o+String.fromCharCode(b[X+D]);c=A(x,X+12);A(x,X+13);A(x,X+14);A(x,X+15);f=A(x,X+16);i=A(x,X+17);l=A(x,X+18);j=A(x,X+19);n=y(x,X+20);m=y(x,X+20+4);s=y(x,X+20+8);p=y(x,X+20+12);o=y(x,X+20+16);r=y(x,X+20+20);
u=y(x,X+20+24);D=y(x,X+20+28);b=y(x,X+20+32);v=y(x,X+20+36);x=y(x,X+20+40);Q=Q+c;X=f*3+j;ba=f*4+j;J=p*X;c=o*(X+i*3);f=r*(X+l*3);j=u*(X+i*3+l*3);X=D*ba;i=b*(ba+i*4);l=v*(ba+l*4);ba=Q;var Q=new Float32Array(a,Q,n*3),ga,da,xa,P;for(ga=0;ga<n;ga++){da=Q[ga*3];xa=Q[ga*3+1];P=Q[ga*3+2];S.vertices.push(new THREE.Vector3(da,xa,P))}n=Q=ba+n*3*Float32Array.BYTES_PER_ELEMENT;if(m){Q=new Int8Array(a,Q,m*3);for(ba=0;ba<m;ba++){ga=Q[ba*3];da=Q[ba*3+1];xa=Q[ba*3+2];E.push(ga/127,da/127,xa/127)}}Q=n+m*3*Int8Array.BYTES_PER_ELEMENT;
m=Q=Q+I(m*3);if(s){Q=new Float32Array(a,Q,s*2);for(n=0;n<s;n++){ba=Q[n*2];ga=Q[n*2+1];z.push(ba,ga)}}s=Q=m+s*2*Float32Array.BYTES_PER_ELEMENT;J=s+J+I(p*2);m=J+c+I(o*2);c=m+f+I(r*2);f=c+j+I(u*2);X=f+X+I(D*2);j=X+i+I(b*2);i=j+l+I(v*2);if(r){l=m+r*Uint32Array.BYTES_PER_ELEMENT*3;F(r,m,l+r*Uint32Array.BYTES_PER_ELEMENT*3);T(r,l)}if(u){r=c+u*Uint32Array.BYTES_PER_ELEMENT*3;l=r+u*Uint32Array.BYTES_PER_ELEMENT*3;G(u,c,r,l+u*Uint32Array.BYTES_PER_ELEMENT*3);T(u,l)}if(v){u=j+v*Uint32Array.BYTES_PER_ELEMENT*
4;C(v,j,u+v*Uint32Array.BYTES_PER_ELEMENT*4);B(v,u)}if(x){v=i+x*Uint32Array.BYTES_PER_ELEMENT*4;u=v+x*Uint32Array.BYTES_PER_ELEMENT*4;O(x,i,v,u+x*Uint32Array.BYTES_PER_ELEMENT*4);B(x,u)}p&&F(p,s,s+p*Uint32Array.BYTES_PER_ELEMENT*3);if(o){p=J+o*Uint32Array.BYTES_PER_ELEMENT*3;G(o,J,p,p+o*Uint32Array.BYTES_PER_ELEMENT*3)}D&&C(D,f,f+D*Uint32Array.BYTES_PER_ELEMENT*4);if(b){o=X+b*Uint32Array.BYTES_PER_ELEMENT*4;O(b,X,o,o+b*Uint32Array.BYTES_PER_ELEMENT*4)}this.computeCentroids();this.computeFaceNormals();
THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};f.prototype=Object.create(THREE.Geometry.prototype);b(new f(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;b===void 0&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},false);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(c.crossOrigin)b.crossOrigin=c.crossOrigin;b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,f){var e=new XMLHttpRequest,h=0;e.onreadystatechange=function(){if(e.readyState===e.DONE)if(e.status===200||e.status===0){if(e.responseText){var k=JSON.parse(e.responseText);a.createModel(k,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+e.status+"]");else if(e.readyState===e.LOADING){if(f){h===0&&(h=e.getResponseHeader("Content-Length"));
f({total:h,loaded:e.responseText.length})}}else e.readyState===e.HEADERS_RECEIVED&&(h=e.getResponseHeader("Content-Length"))};e.open("GET",b,true);e.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,f=a.scale!==void 0?1/a.scale:1;this.initMaterials(d,a.materials,c);var e,h,k,i,l,j,n,m,s,p,o,r,u,D,v=a.faces;s=a.vertices;var x=a.normals,I=a.colors,A=0;for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&A++;for(e=0;e<A;e++){d.faceUvs[e]=[];d.faceVertexUvs[e]=[]}c=0;for(i=s.length;c<i;){l=new THREE.Vector3;l.x=s[c++]*f;l.y=s[c++]*f;l.z=s[c++]*f;d.vertices.push(l)}c=0;for(i=v.length;c<i;){s=v[c++];l=s&1;k=s&2;e=s&4;h=s&8;n=s&
16;j=s&32;p=s&64;s=s&128;if(l){o=new THREE.Face4;o.a=v[c++];o.b=v[c++];o.c=v[c++];o.d=v[c++];l=4}else{o=new THREE.Face3;o.a=v[c++];o.b=v[c++];o.c=v[c++];l=3}if(k){k=v[c++];o.materialIndex=k}k=d.faces.length;if(e)for(e=0;e<A;e++){r=a.uvs[e];m=v[c++];D=r[m*2];m=r[m*2+1];d.faceUvs[e][k]=new THREE.UV(D,m)}if(h)for(e=0;e<A;e++){r=a.uvs[e];u=[];for(h=0;h<l;h++){m=v[c++];D=r[m*2];m=r[m*2+1];u[h]=new THREE.UV(D,m)}d.faceVertexUvs[e][k]=u}if(n){n=v[c++]*3;h=new THREE.Vector3;h.x=x[n++];h.y=x[n++];h.z=x[n];
o.normal=h}if(j)for(e=0;e<l;e++){n=v[c++]*3;h=new THREE.Vector3;h.x=x[n++];h.y=x[n++];h.z=x[n];o.vertexNormals.push(h)}if(p){j=v[c++];j=new THREE.Color(I[j]);o.color=j}if(s)for(e=0;e<l;e++){j=v[c++];j=new THREE.Color(I[j]);o.vertexColors.push(j)}d.faces.push(o)}if(a.skinWeights){c=0;for(i=a.skinWeights.length;c<i;c=c+2){v=a.skinWeights[c];x=a.skinWeights[c+1];d.skinWeights.push(new THREE.Vector4(v,x,0,0))}}if(a.skinIndices){c=0;for(i=a.skinIndices.length;c<i;c=c+2){v=a.skinIndices[c];x=a.skinIndices[c+
1];d.skinIndices.push(new THREE.Vector4(v,x,0,0))}}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets!==void 0){c=0;for(i=a.morphTargets.length;c<i;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];I=d.morphTargets[c].vertices;A=a.morphTargets[c].vertices;v=0;for(x=A.length;v<x;v=v+3){s=new THREE.Vector3;s.x=A[v]*f;s.y=A[v+1]*f;s.z=A[v+2]*f;I.push(s)}}}if(a.morphColors!==void 0){c=0;for(i=a.morphColors.length;c<i;c++){d.morphColors[c]={};
d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=[];x=d.morphColors[c].colors;I=a.morphColors[c].colors;f=0;for(v=I.length;f<v;f=f+3){A=new THREE.Color(16755200);A.setRGB(I[f],I[f+1],I[f+2]);x.push(A)}}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(b.path===null){var d=a.split("/");d.pop();b.path=d.length<1?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),f):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},false);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);d.open("GET",
a,true);d.send(null);var f=new THREE.LoadingMonitor;f.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})});f.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,f=a.scale!==void 0?1/a.scale:1;if(a.materials){d.materials=[];for(var e=0;e<a.materials.length;++e){var h=a.materials[e],k=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},i=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},l=function(a,d,e,f,h,j){a[d]=new THREE.Texture;a[d].sourceFile=
e;if(f){a[d].repeat.set(f[0],f[1]);if(f[0]!==1)a[d].wrapS=THREE.RepeatWrapping;if(f[1]!==1)a[d].wrapT=THREE.RepeatWrapping}h&&a[d].offset.set(h[0],h[1]);if(j){f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(f[j[0]]!==void 0)a[d].wrapS=f[j[0]];if(f[j[1]]!==void 0)a[d].wrapT=f[j[1]]}var l=a[d],a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!k(a.width)||!k(a.height)){var b=i(a.width),c=i(a.height);l.image=document.createElement("canvas");l.image.width=
b;l.image.height=c;l.image.getContext("2d").drawImage(a,0,0,b,c)}else l.image=a;l.needsUpdate=true});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+e);b&&b.add(a)},j=function(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255},n="MeshLambertMaterial",m={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(h.shading){var s=h.shading.toLowerCase();s==="phong"?n="MeshPhongMaterial":s==="basic"&&(n="MeshBasicMaterial")}if(h.blending!==void 0&&THREE[h.blending]!==
void 0)m.blending=THREE[h.blending];if(h.transparent!==void 0||h.opacity<1)m.transparent=h.transparent;if(h.depthTest!==void 0)m.depthTest=h.depthTest;if(h.depthWrite!==void 0)m.depthWrite=h.depthWrite;if(h.vertexColors!==void 0)if(h.vertexColors=="face")m.vertexColors=THREE.FaceColors;else if(h.vertexColors)m.vertexColors=THREE.VertexColors;if(h.colorDiffuse)m.color=j(h.colorDiffuse);else if(h.DbgColor)m.color=h.DbgColor;if(h.colorSpecular)m.specular=j(h.colorSpecular);if(h.colorAmbient)m.ambient=
j(h.colorAmbient);if(h.transparency)m.opacity=h.transparency;if(h.specularCoef)m.shininess=h.specularCoef;if(h.visible!==void 0)m.visible=h.visible;if(h.flipSided!==void 0)m.side=THREE.BackSide;if(h.doubleSided!==void 0)m.side=THREE.DoubleSide;if(h.wireframe!==void 0)m.wireframe=h.wireframe;h.mapDiffuse&&l(m,"map",h.mapDiffuse,h.mapDiffuseRepeat,h.mapDiffuseOffset,h.mapDiffuseWrap);h.mapLight&&l(m,"lightMap",h.mapLight,h.mapLightRepeat,h.mapLightOffset,h.mapLightWrap);h.mapBump&&l(m,"bumpMap",h.mapBump,
h.mapBumpRepeat,h.mapBumpOffset,h.mapBumpWrap);h.mapNormal&&l(m,"normalMap",h.mapNormal,h.mapNormalRepeat,h.mapNormalOffset,h.mapNormalWrap);h.mapSpecular&&l(m,"specularMap",h.mapSpecular,h.mapSpecularRepeat,h.mapSpecularOffset,h.mapSpecularWrap);if(h.mapNormal){l=THREE.ShaderUtils.lib.normal;j=THREE.UniformsUtils.clone(l.uniforms);j.tNormal.value=m.normalMap;h.mapNormalFactor&&j.uNormalScale.value.set(h.mapNormalFactor,h.mapNormalFactor);if(m.map){j.tDiffuse.value=m.map;j.enableDiffuse.value=true}if(m.specularMap){j.tSpecular.value=
m.specularMap;j.enableSpecular.value=true}if(m.lightMap){j.tAO.value=m.lightMap;j.enableAO.value=true}j.uDiffuseColor.value.setHex(m.color);j.uSpecularColor.value.setHex(m.specular);j.uAmbientColor.value.setHex(m.ambient);j.uShininess.value=m.shininess;if(m.opacity!==void 0)j.uOpacity.value=m.opacity;m=new THREE.ShaderMaterial({fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:j,lights:true,fog:true})}else m=new THREE[n](m);if(h.DbgName!==void 0)m.name=h.DbgName;d.materials[e]=
m}}var h=a.faces,p=a.vertices,m=a.normals,l=a.colors,j=0;if(a.uvs)for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&j++;for(e=0;e<j;e++){d.faceUvs[e]=[];d.faceVertexUvs[e]=[]}n=0;for(s=p.length;n<s;){var o=new THREE.Vector3;o.x=p[n++]*f;o.y=p[n++]*f;o.z=p[n++]*f;d.vertices.push(o)}n=0;for(s=h.length;n<s;){var r=h[n++],u=r&2,e=r&4,D=r&8,v=r&16,p=r&32,x=r&64,o=r&128;if(r&1){r=new THREE.Face4;r.a=h[n++];r.b=h[n++];r.c=h[n++];r.d=h[n++];var I=4}else{r=new THREE.Face3;r.a=h[n++];r.b=h[n++];r.c=h[n++];I=3}if(u){u=
h[n++];r.materialIndex=u}var A=d.faces.length;if(e)for(e=0;e<j;e++){var y=a.uvs[e],u=h[n++],T=y[u*2],u=y[u*2+1];d.faceUvs[e][A]=new THREE.UV(T,u)}if(D)for(e=0;e<j;e++){for(var y=a.uvs[e],D=[],B=0;B<I;B++){u=h[n++];T=y[u*2];u=y[u*2+1];D[B]=new THREE.UV(T,u)}d.faceVertexUvs[e][A]=D}if(v){v=h[n++]*3;u=new THREE.Vector3;u.x=m[v++];u.y=m[v++];u.z=m[v];r.normal=u}if(p)for(e=0;e<I;e++){v=h[n++]*3;u=new THREE.Vector3;u.x=m[v++];u.y=m[v++];u.z=m[v];r.vertexNormals.push(u)}if(x){p=h[n++];r.color=new THREE.Color(l[p])}if(o)for(e=
0;e<I;e++){p=h[n++];r.vertexColors.push(new THREE.Color(l[p]))}d.faces.push(r)}if(a.skinWeights){e=0;for(h=a.skinWeights.length;e<h;e=e+2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[e],a.skinWeights[e+1],0,0))}if(a.skinIndices){e=0;for(h=a.skinIndices.length;e<h;e=e+2){m=0;d.skinIndices.push(new THREE.Vector4(a.skinIndices[e],a.skinIndices[e+1],m,0))}}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){e=0;for(h=a.morphTargets.length;e<h;e++){d.morphTargets[e]={};d.morphTargets[e].name=
a.morphTargets[e].name;d.morphTargets[e].vertices=[];m=d.morphTargets[e].vertices;l=a.morphTargets[e].vertices;u=0;for(j=l.length;u<j;u=u+3){o=new THREE.Vector3;o.x=l[u]*f;o.y=l[u+1]*f;o.z=l[u+2]*f;m.push(o)}}}if(a.morphColors){e=0;for(h=a.morphColors.length;e<h;e++){d.morphColors[e]={};d.morphColors[e].name=a.morphColors[e].name;d.morphColors[e].colors=[];f=d.morphColors[e].colors;l=a.morphColors[e].colors;m=0;for(j=l.length;m<j;m=m+3){n=new THREE.Color(16755200);n.setRGB(l[m],l[m+1],l[m+2]);f.push(n)}}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(d.readyState===4)if(d.status===200||d.status===0){var f=JSON.parse(d.responseText);c.parse(f,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,true);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return b=="relativeToHTML"?a:l+"/"+a}function f(a,b){for(var c in b)if(z.objects[c]===void 0){var d=b[c],e=null;if(d.geometry!==void 0){if(T=z.geometries[d.geometry]){e=false;B=z.materials[d.materials[0]];(e=B instanceof THREE.ShaderMaterial)&&T.computeTangents();D=d.position;v=d.rotation;x=d.quaternion;I=d.scale;r=d.matrix;x=0;d.materials.length===0&&(B=new THREE.MeshFaceMaterial);d.materials.length>1&&(B=new THREE.MeshFaceMaterial);
if(d.morph){e=new THREE.MorphAnimMesh(T,B);if(d.duration!==void 0)e.duration=d.duration;if(d.time!==void 0)e.time=d.time;if(d.mirroredLoop!==void 0)e.mirroredLoop=d.mirroredLoop;B.morphNormals&&T.computeMorphNormals()}else e=new THREE.Mesh(T,B);e.name=c;if(r){e.matrixAutoUpdate=false;e.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])}else{e.position.set(D[0],D[1],D[2]);if(x){e.quaternion.set(x[0],x[1],x[2],x[3]);e.useQuaternion=true}else e.rotation.set(v[0],
v[1],v[2]);e.scale.set(I[0],I[1],I[2])}e.visible=d.visible;e.castShadow=d.castShadow;e.receiveShadow=d.receiveShadow;a.add(e);z.objects[c]=e}}else{D=d.position;v=d.rotation;x=d.quaternion;I=d.scale;x=0;e=new THREE.Object3D;e.name=c;e.position.set(D[0],D[1],D[2]);if(x){e.quaternion.set(x[0],x[1],x[2],x[3]);e.useQuaternion=true}else e.rotation.set(v[0],v[1],v[2]);e.scale.set(I[0],I[1],I[2]);e.visible=d.visible!==void 0?d.visible:false;a.add(e);z.objects[c]=e;z.empties[c]=e}if(e){if(d.properties!==void 0)for(var h in d.properties)e.properties[h]=
d.properties[h];d.children!==void 0&&f(e,d.children)}}}function e(a){return function(b){z.geometries[a]=b;f(z.scene,J.objects);O=O-1;i.onLoadComplete();k()}}function h(a){return function(b){z.geometries[a]=b}}function k(){i.callbackProgress({totalModels:Q,totalTextures:E,loadedModels:Q-O,loadedTextures:E-S},z);i.onLoadProgress();O===0&&S===0&&b(z)}var i=this,l=THREE.Loader.prototype.extractUrlBase(c),j,n,m,s,p,o,r,u,D,v,x,I,A,y,T,B,F,C,G,O,S,Q,E,z,J=a;for(A in this.geometryHandlerMap)this.geometryHandlerMap[A].loaderObject=
new this.geometryHandlerMap[A].loaderClass;S=O=0;z={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(J.transform){a=J.transform.position;c=J.transform.rotation;A=J.transform.scale;a&&z.scene.position.set(a[0],a[1],a[2]);c&&z.scene.rotation.set(c[0],c[1],c[2]);A&&z.scene.scale.set(A[0],A[1],A[2]);if(a||c||A){z.scene.updateMatrix();z.scene.updateMatrixWorld()}}a=function(a){return function(){S=S-a;k();i.onLoadComplete()}};for(s in J.cameras){A=
J.cameras[s];A.type==="perspective"?F=new THREE.PerspectiveCamera(A.fov,A.aspect,A.near,A.far):A.type==="ortho"&&(F=new THREE.OrthographicCamera(A.left,A.right,A.top,A.bottom,A.near,A.far));D=A.position;c=A.target;A=A.up;F.position.set(D[0],D[1],D[2]);F.target=new THREE.Vector3(c[0],c[1],c[2]);A&&F.up.set(A[0],A[1],A[2]);z.cameras[s]=F}for(m in J.lights){c=J.lights[m];s=c.color!==void 0?c.color:16777215;F=c.intensity!==void 0?c.intensity:1;if(c.type==="directional"){D=c.direction;u=new THREE.DirectionalLight(s,
F);u.position.set(D[0],D[1],D[2]);u.position.normalize()}else if(c.type==="point"){D=c.position;u=c.distance;u=new THREE.PointLight(s,F,u);u.position.set(D[0],D[1],D[2])}else c.type==="ambient"&&(u=new THREE.AmbientLight(s));z.scene.add(u);z.lights[m]=u}for(p in J.fogs){m=J.fogs[p];m.type==="linear"?C=new THREE.Fog(0,m.near,m.far):m.type==="exp2"&&(C=new THREE.FogExp2(0,m.density));A=m.color;C.color.setRGB(A[0],A[1],A[2]);z.fogs[p]=C}if(z.cameras&&J.defaults.camera)z.currentCamera=z.cameras[J.defaults.camera];
if(z.fogs&&J.defaults.fog)z.scene.fog=z.fogs[J.defaults.fog];A=J.defaults.bgcolor;z.bgColor=new THREE.Color;z.bgColor.setRGB(A[0],A[1],A[2]);z.bgColorAlpha=J.defaults.bgalpha;for(j in J.geometries){p=J.geometries[j];if(p.type in this.geometryHandlerMap){O=O+1;i.onLoadStart()}}Q=O;for(j in J.geometries){p=J.geometries[j];if(p.type==="cube"){T=new THREE.CubeGeometry(p.width,p.height,p.depth,p.segmentsWidth,p.segmentsHeight,p.segmentsDepth,null,p.flipped,p.sides);z.geometries[j]=T}else if(p.type==="plane"){T=
new THREE.PlaneGeometry(p.width,p.height,p.segmentsWidth,p.segmentsHeight);z.geometries[j]=T}else if(p.type==="sphere"){T=new THREE.SphereGeometry(p.radius,p.segmentsWidth,p.segmentsHeight);z.geometries[j]=T}else if(p.type==="cylinder"){T=new THREE.CylinderGeometry(p.topRad,p.botRad,p.height,p.radSegs,p.heightSegs);z.geometries[j]=T}else if(p.type==="torus"){T=new THREE.TorusGeometry(p.radius,p.tube,p.segmentsR,p.segmentsT);z.geometries[j]=T}else if(p.type==="icosahedron"){T=new THREE.IcosahedronGeometry(p.radius,
p.subdivisions);z.geometries[j]=T}else if(p.type in this.geometryHandlerMap){C={};for(G in p)G!=="type"&&G!=="url"&&(C[G]=p[G]);this.geometryHandlerMap[p.type].loaderObject.load(d(p.url,J.urlBaseType),e(j),C)}else if(p.type==="embedded"){p=J.embeds[p.id];p.metadata=J.metadata;p&&this.geometryHandlerMap.ascii.loaderObject.createModel(p,h(j),"")}}for(o in J.textures){j=J.textures[o];if(j.url instanceof Array){S=S+j.url.length;for(G=0;G<j.url.length;G++)i.onLoadStart()}else{S=S+1;i.onLoadStart()}}E=
S;for(o in J.textures){j=J.textures[o];if(j.mapping!==void 0&&THREE[j.mapping]!==void 0)j.mapping=new THREE[j.mapping];if(j.url instanceof Array){p=j.url.length;C=[];for(G=0;G<p;G++)C[G]=d(j.url[G],J.urlBaseType);G=(G=C[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(C,j.mapping,a(p)):THREE.ImageUtils.loadTextureCube(C,j.mapping,a(p))}else{G=j.url.toLowerCase().endsWith(".dds");p=d(j.url,J.urlBaseType);C=a(1);G=G?THREE.ImageUtils.loadCompressedTexture(p,j.mapping,C):THREE.ImageUtils.loadTexture(p,
j.mapping,C);if(THREE[j.minFilter]!==void 0)G.minFilter=THREE[j.minFilter];if(THREE[j.magFilter]!==void 0)G.magFilter=THREE[j.magFilter];if(j.anisotropy)G.anisotropy=j.anisotropy;if(j.repeat){G.repeat.set(j.repeat[0],j.repeat[1]);if(j.repeat[0]!==1)G.wrapS=THREE.RepeatWrapping;if(j.repeat[1]!==1)G.wrapT=THREE.RepeatWrapping}j.offset&&G.offset.set(j.offset[0],j.offset[1]);if(j.wrap){p={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(p[j.wrap[0]]!==void 0)G.wrapS=p[j.wrap[0]];if(p[j.wrap[1]]!==
void 0)G.wrapT=p[j.wrap[1]]}}z.textures[o]=G}for(n in J.materials){r=J.materials[n];for(y in r.parameters)if(y==="envMap"||y==="map"||y==="lightMap"||y==="bumpMap")r.parameters[y]=z.textures[r.parameters[y]];else if(y==="shading")r.parameters[y]=r.parameters[y]==="flat"?THREE.FlatShading:THREE.SmoothShading;else if(y==="side")r.parameters[y]=r.parameters[y]=="double"?THREE.DoubleSide:r.parameters[y]=="back"?THREE.BackSide:THREE.FrontSide;else if(y==="blending")r.parameters[y]=r.parameters[y]in THREE?
THREE[r.parameters[y]]:THREE.NormalBlending;else if(y==="combine")r.parameters[y]=r.parameters[y]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;else if(y==="vertexColors")if(r.parameters[y]=="face")r.parameters[y]=THREE.FaceColors;else{if(r.parameters[y])r.parameters[y]=THREE.VertexColors}else if(y==="wrapRGB"){o=r.parameters[y];r.parameters[y]=new THREE.Vector3(o[0],o[1],o[2])}if(r.parameters.opacity!==void 0&&r.parameters.opacity<1)r.parameters.transparent=true;if(r.parameters.normalMap){o=
THREE.ShaderUtils.lib.normal;a=THREE.UniformsUtils.clone(o.uniforms);j=r.parameters.color;G=r.parameters.specular;p=r.parameters.ambient;C=r.parameters.shininess;a.tNormal.value=z.textures[r.parameters.normalMap];r.parameters.normalScale&&a.uNormalScale.value.set(r.parameters.normalScale[0],r.parameters.normalScale[1]);if(r.parameters.map){a.tDiffuse.value=r.parameters.map;a.enableDiffuse.value=true}if(r.parameters.envMap){a.tCube.value=r.parameters.envMap;a.enableReflection.value=true;a.uReflectivity.value=
r.parameters.reflectivity}if(r.parameters.lightMap){a.tAO.value=r.parameters.lightMap;a.enableAO.value=true}if(r.parameters.specularMap){a.tSpecular.value=z.textures[r.parameters.specularMap];a.enableSpecular.value=true}if(r.parameters.displacementMap){a.tDisplacement.value=z.textures[r.parameters.displacementMap];a.enableDisplacement.value=true;a.uDisplacementBias.value=r.parameters.displacementBias;a.uDisplacementScale.value=r.parameters.displacementScale}a.uDiffuseColor.value.setHex(j);a.uSpecularColor.value.setHex(G);
a.uAmbientColor.value.setHex(p);a.uShininess.value=C;if(r.parameters.opacity)a.uOpacity.value=r.parameters.opacity;B=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:a,lights:true,fog:true})}else B=new THREE[r.type](r.parameters);z.materials[n]=B}f(z.scene,J.objects);i.callbackSync(z);k()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=true;b.dispatchEvent({type:"load",content:a})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(b.crossOrigin)c.crossOrigin=b.crossOrigin;c.src=a}};
THREE.Material=function(){this.id=THREE.MaterialCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=true;this.polygonOffset=false;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=false;this.needsUpdate=this.visible=true};
THREE.Material.prototype.setValues=function(a){if(a!==void 0)for(var b in a){var c=a[b];if(c===void 0)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&typeof c==="number"?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){a===void 0&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.MaterialCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=false;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=false;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=false;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.lights=this.fog=false;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=false;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;
return a};
THREE.Texture=function(a,b,c,d,f,e,h,k,i){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=d!==void 0?d:THREE.ClampToEdgeWrapping;this.magFilter=f!==void 0?f:THREE.LinearFilter;this.minFilter=e!==void 0?e:THREE.LinearMipMapLinearFilter;this.anisotropy=i!==void 0?i:1;this.format=h!==void 0?h:THREE.RGBAFormat;this.type=k!==void 0?k:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,
1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.needsUpdate=false;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a}};THREE.TextureCount=0;
THREE.CompressedTexture=function(a,b,c,d,f,e,h,k,i,l){THREE.Texture.call(this,null,e,h,k,i,l,d,f);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,f,e,h,k,i,l){THREE.Texture.call(this,null,e,h,k,i,l,d,f);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b!==void 0?b:new THREE.ParticleBasicMaterial({color:Math.random()*16777215});this.sortParticles=false;if(this.geometry){this.geometry.boundingSphere||this.geometry.computeBoundingSphere();this.boundRadius=a.boundingSphere.radius}this.frustumCulled=false};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b!==void 0?b:new THREE.LineBasicMaterial({color:Math.random()*16777215});this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b!==void 0?b:new THREE.MeshBasicMaterial({color:Math.random()*16777215,wireframe:true});if(this.geometry){this.geometry.boundingSphere||this.geometry.computeBoundingSphere();this.boundRadius=a.boundingSphere.radius;if(this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++){this.morphTargetInfluences.push(0);
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}}}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b=b|this.updateMatrix());if(b||this.matrixWorldNeedsUpdate){a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix);this.matrixWorldNeedsUpdate=false;b=true}var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=c!==void 0?c:true;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,f,e;if(this.geometry.bones!==void 0){for(a=0;a<this.geometry.bones.length;a++){c=this.geometry.bones[a];d=c.pos;f=c.rotq;e=c.scl;b=this.addBone();b.name=c.name;b.position.set(d[0],d[1],d[2]);b.quaternion.set(f[0],f[1],f[2],f[3]);b.useQuaternion=true;e!==void 0?b.scale.set(e[0],e[1],e[2]):b.scale.set(1,1,1)}for(a=0;a<this.bones.length;a++){c=
this.geometry.bones[a];b=this.bones[a];c.parent===-1?this.add(b):this.bones[c.parent].add(b)}a=this.bones.length;if(this.useVertexTexture){this.boneTextureHeight=this.boneTextureWidth=a=a>256?64:a>64?32:a>16?16:8;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType);this.boneTexture.minFilter=THREE.NearestFilter;this.boneTexture.magFilter=
THREE.NearestFilter;this.boneTexture.generateMipmaps=false;this.boneTexture.flipY=false}else this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix);this.matrixWorldNeedsUpdate=false}for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,false):c.updateMatrixWorld(true)}if(this.boneInverses==void 0){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++){c=new THREE.Matrix4;c.getInverse(this.bones[a].skinMatrix);this.boneInverses.push(c)}}a=0;for(b=this.bones.length;a<b;a++){THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]);THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,a*16)}if(this.useVertexTexture)this.boneTexture.needsUpdate=true};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(true);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();c!==Infinity?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=false;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=false;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=false};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=true};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;if(!a.animations)a.animations={};for(var b,c=a.animations,d=/([a-z]+)(\d+)/,f=0,e=a.morphTargets.length;f<e;f++){var h=a.morphTargets[f].name.match(d);if(h&&h.length>1){h=h[1];c[h]||(c[h]={start:Infinity,end:-Infinity});var k=c[h];if(f<k.start)k.start=f;if(f>k.end)k.end=f;b||(b=h)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];if(c){this.setFrameRange(c.start,c.end);this.duration=1E3*((c.end-c.start)/b);this.time=0}else console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time=this.time+this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction=this.direction*-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=true}if(this.time<0){this.time=0;this.directionBackwards=false}}}else{this.time=this.time%this.duration;if(this.time<0)this.time=this.time+this.duration}a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/
b),0,this.length-1);if(a!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[a]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=a}b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=true;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance){this.LODs[b-1].object3D.visible=false;this.LODs[b].object3D.visible=true}else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
false}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:new THREE.Texture;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.blendSrc=a.blendSrc!==void 0?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=a.blendDst!==void 0?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=a.blendEquation!==void 0?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?
a.useScreenCoordinates:true;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1){this.matrix.scale(this.scale);this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)}this.matrixWorldNeedsUpdate=true};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=false;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light){this.__lights.indexOf(a)===-1&&this.__lights.push(a);a.target&&a.target.parent===void 0&&this.add(a.target)}else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.__objects.indexOf(a)===-1){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);b!==-1&&this.__lights.splice(b,1)}else if(!(a instanceof THREE.Camera)){b=this.__objects.indexOf(a);if(b!==-1){this.__objects.splice(b,1);this.__objectsRemoved.push(a);b=this.__objectsAdded.indexOf(a);b!==-1&&this.__objectsAdded.splice(b,1)}}for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.CanvasRenderer=function(a){function b(a){if(D!==a)D=o.globalAlpha=a}function c(a){if(v!==a){if(a===THREE.NormalBlending)o.globalCompositeOperation="source-over";else if(a===THREE.AdditiveBlending)o.globalCompositeOperation="lighter";else if(a===THREE.SubtractiveBlending)o.globalCompositeOperation="darker";v=a}}function d(a){if(x!==a)x=o.strokeStyle=a}function f(a){if(I!==a)I=o.fillStyle=a}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},e=this,h,k,i,l=new THREE.Projector,j=a.canvas!==
void 0?a.canvas:document.createElement("canvas"),n,m,s,p,o=j.getContext("2d"),r=new THREE.Color(0),u=0,D=1,v=0,x=null,I=null,A=null,y=null,T=null,B,F,C,G,O=new THREE.RenderableVertex,S=new THREE.RenderableVertex,Q,E,z,J,X,ba,ga,da,xa,P,Ka,La,Y=new THREE.Color,ca=new THREE.Color,K=new THREE.Color,U=new THREE.Color,fa=new THREE.Color,Ha={},ra={},ma,Ea,Fa,$a,ha,mb,Va,ab,yb,zb,ob=new THREE.Rectangle,Ma=new THREE.Rectangle,ka=new THREE.Rectangle,ub=false,va=new THREE.Color,ib=new THREE.Color,vb=new THREE.Color,
ya=new THREE.Vector3,cb,db,jb,Oa,Ra,eb,a=16;cb=document.createElement("canvas");cb.width=cb.height=2;db=cb.getContext("2d");db.fillStyle="rgba(0,0,0,1)";db.fillRect(0,0,2,2);jb=db.getImageData(0,0,2,2);Oa=jb.data;Ra=document.createElement("canvas");Ra.width=Ra.height=a;eb=Ra.getContext("2d");eb.translate(-a/2,-a/2);eb.scale(a,a);a--;this.domElement=j;this.sortElements=this.sortObjects=this.autoClear=true;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){n=a;m=b;s=Math.floor(n/2);
p=Math.floor(m/2);j.width=n;j.height=m;ob.set(-s,-p,s,p);Ma.set(-s,-p,s,p);D=1;v=0;T=y=A=I=x=null};this.setClearColor=function(a,b){r.copy(a);u=b!==void 0?b:1;Ma.set(-s,-p,s,p)};this.setClearColorHex=function(a,b){r.setHex(a);u=b!==void 0?b:1;Ma.set(-s,-p,s,p)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){o.setTransform(1,0,0,-1,s,p);if(Ma.isEmpty()===false){Ma.minSelf(ob);Ma.inflate(2);u<1&&o.clearRect(Math.floor(Ma.getX()),Math.floor(Ma.getY()),Math.floor(Ma.getWidth()),Math.floor(Ma.getHeight()));
if(u>0){c(THREE.NormalBlending);b(1);f("rgba("+Math.floor(r.r*255)+","+Math.floor(r.g*255)+","+Math.floor(r.b*255)+","+u+")");o.fillRect(Math.floor(Ma.getX()),Math.floor(Ma.getY()),Math.floor(Ma.getWidth()),Math.floor(Ma.getHeight()))}Ma.empty()}};this.render=function(a,g){function j(a,b,c){for(var d=0,g=i.length;d<g;d++){var e=i[d],f=e.color;if(e instanceof THREE.DirectionalLight){var h=e.matrixWorld.getPosition().normalize(),pa=b.dot(h);if(!(pa<=0)){pa=pa*e.intensity;c.r=c.r+f.r*pa;c.g=c.g+f.g*
pa;c.b=c.b+f.b*pa}}else if(e instanceof THREE.PointLight){h=e.matrixWorld.getPosition();pa=b.dot(ya.sub(h,a).normalize());if(!(pa<=0)){pa=pa*(e.distance==0?1:1-Math.min(a.distanceTo(h)/e.distance,1));if(pa!=0){pa=pa*e.intensity;c.r=c.r+f.r*pa;c.g=c.g+f.g*pa;c.b=c.b+f.b*pa}}}}}function m(a,d,f,h,ja,k,i,l){e.info.render.vertices=e.info.render.vertices+3;e.info.render.faces++;b(l.opacity);c(l.blending);Q=a.positionScreen.x;E=a.positionScreen.y;z=d.positionScreen.x;J=d.positionScreen.y;X=f.positionScreen.x;
ba=f.positionScreen.y;n(Q,E,z,J,X,ba);if((l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial)&&l.map===null&&l.map===null)if(ub===true){h=l.color;ja=l.emissive;if(l.wireframe===false&&l.shading==THREE.SmoothShading&&i.vertexNormalsLength==3){ca.r=K.r=U.r=va.r;ca.g=K.g=U.g=va.g;ca.b=K.b=U.b=va.b;j(i.v1.positionWorld,i.vertexNormalsWorld[0],ca);j(i.v2.positionWorld,i.vertexNormalsWorld[1],K);j(i.v3.positionWorld,i.vertexNormalsWorld[2],U);ca.r=h.r*ca.r+ja.r;ca.g=h.g*ca.g+ja.g;
ca.b=h.b*ca.b+ja.b;K.r=h.r*K.r+ja.r;K.g=h.g*K.g+ja.g;K.b=h.b*K.b+ja.b;U.r=h.r*U.r+ja.r;U.g=h.g*U.g+ja.g;U.b=h.b*U.b+ja.b;fa.r=(K.r+U.r)*0.5;fa.g=(K.g+U.g)*0.5;fa.b=(K.b+U.b)*0.5;Fa=pa(ca,K,U,fa);D(Q,E,z,J,X,ba,0,0,1,0,0,1,Fa)}else{Y.r=va.r;Y.g=va.g;Y.b=va.b;j(i.centroidWorld,i.normalWorld,Y);Y.r=h.r*Y.r+ja.r;Y.g=h.g*Y.g+ja.g;Y.b=h.b*Y.b+ja.b;l.wireframe===true?u(Y,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):v(Y)}}else l.wireframe===true?u(l.color,l.wireframeLinewidth,l.wireframeLinecap,
l.wireframeLinejoin):v(l.color);else if(l instanceof THREE.MeshBasicMaterial||l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial)if(l.map!==null){if(l.map.mapping instanceof THREE.UVMapping){$a=i.uvs[0];x(Q,E,z,J,X,ba,$a[h].u,$a[h].v,$a[ja].u,$a[ja].v,$a[k].u,$a[k].v,l.map)}}else if(l.envMap!==null){if(l.envMap.mapping instanceof THREE.SphericalReflectionMapping){a=g.matrixWorldInverse;ya.copy(i.vertexNormalsWorld[h]);ha=(ya.x*a.elements[0]+ya.y*a.elements[4]+ya.z*a.elements[8])*
0.5+0.5;mb=(ya.x*a.elements[1]+ya.y*a.elements[5]+ya.z*a.elements[9])*0.5+0.5;ya.copy(i.vertexNormalsWorld[ja]);Va=(ya.x*a.elements[0]+ya.y*a.elements[4]+ya.z*a.elements[8])*0.5+0.5;ab=(ya.x*a.elements[1]+ya.y*a.elements[5]+ya.z*a.elements[9])*0.5+0.5;ya.copy(i.vertexNormalsWorld[k]);yb=(ya.x*a.elements[0]+ya.y*a.elements[4]+ya.z*a.elements[8])*0.5+0.5;zb=(ya.x*a.elements[1]+ya.y*a.elements[5]+ya.z*a.elements[9])*0.5+0.5;x(Q,E,z,J,X,ba,ha,mb,Va,ab,yb,zb,l.envMap)}}else l.wireframe===true?u(l.color,
l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):v(l.color);else if(l instanceof THREE.MeshDepthMaterial){ma=g.near;Ea=g.far;ca.r=ca.g=ca.b=1-kb(a.positionScreen.z,ma,Ea);K.r=K.g=K.b=1-kb(d.positionScreen.z,ma,Ea);U.r=U.g=U.b=1-kb(f.positionScreen.z,ma,Ea);fa.r=(K.r+U.r)*0.5;fa.g=(K.g+U.g)*0.5;fa.b=(K.b+U.b)*0.5;Fa=pa(ca,K,U,fa);D(Q,E,z,J,X,ba,0,0,1,0,0,1,Fa)}else if(l instanceof THREE.MeshNormalMaterial){Y.r=Wa(i.normalWorld.x);Y.g=Wa(i.normalWorld.y);Y.b=Wa(i.normalWorld.z);l.wireframe===
true?u(Y,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):v(Y)}}function n(a,b,c,d,g,e){o.beginPath();o.moveTo(a,b);o.lineTo(c,d);o.lineTo(g,e);o.closePath()}function r(a,b,c,d,g,e,f,h){o.beginPath();o.moveTo(a,b);o.lineTo(c,d);o.lineTo(g,e);o.lineTo(f,h);o.closePath()}function u(a,b,c,g){if(A!==b)A=o.lineWidth=b;if(y!==c)y=o.lineCap=c;if(T!==g)T=o.lineJoin=g;d(a.getContextStyle());o.stroke();ka.inflate(b*2)}function v(a){f(a.getContextStyle());o.fill()}function x(a,b,c,d,g,e,h,pa,ja,
Wa,j,k,i){if(!(i instanceof THREE.DataTexture||i.image===void 0||i.image.width==0)){if(i.needsUpdate===true){var l=i.wrapS==THREE.RepeatWrapping,kb=i.wrapT==THREE.RepeatWrapping;Ha[i.id]=o.createPattern(i.image,l===true&&kb===true?"repeat":l===true&&kb===false?"repeat-x":l===false&&kb===true?"repeat-y":"no-repeat");i.needsUpdate=false}Ha[i.id]===void 0?f("rgba(0,0,0,1)"):f(Ha[i.id]);var l=i.offset.x/i.repeat.x,kb=i.offset.y/i.repeat.y,m=i.image.width*i.repeat.x,V=i.image.height*i.repeat.y,h=(h+l)*
m,pa=(1-pa+kb)*V,c=c-a,d=d-b,g=g-a,e=e-b,ja=(ja+l)*m-h,Wa=(1-Wa+kb)*V-pa,j=(j+l)*m-h,k=(1-k+kb)*V-pa,l=ja*k-j*Wa;if(l===0){if(ra[i.id]===void 0){b=document.createElement("canvas");b.width=i.image.width;b.height=i.image.height;b=b.getContext("2d");b.drawImage(i.image,0,0);ra[i.id]=b.getImageData(0,0,i.image.width,i.image.height).data}b=ra[i.id];h=(Math.floor(h)+Math.floor(pa)*i.image.width)*4;Y.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255);v(Y)}else{l=1/l;i=(k*c-Wa*g)*l;Wa=(k*d-Wa*e)*l;c=(ja*g-j*c)*l;d=(ja*
e-j*d)*l;a=a-i*h-c*pa;h=b-Wa*h-d*pa;o.save();o.transform(i,Wa,c,d,a,h);o.fill();o.restore()}}}function D(a,b,c,d,g,e,f,h,pa,ja,i,Wa,j){var k,l;k=j.width-1;l=j.height-1;f=f*k;h=h*l;c=c-a;d=d-b;g=g-a;e=e-b;pa=pa*k-f;ja=ja*l-h;i=i*k-f;Wa=Wa*l-h;l=1/(pa*Wa-i*ja);k=(Wa*c-ja*g)*l;ja=(Wa*d-ja*e)*l;c=(pa*g-i*c)*l;d=(pa*e-i*d)*l;a=a-k*f-c*h;b=b-ja*f-d*h;o.save();o.transform(k,ja,c,d,a,b);o.clip();o.drawImage(j,0,0);o.restore()}function pa(a,b,c,d){Oa[0]=a.r*255|0;Oa[1]=a.g*255|0;Oa[2]=a.b*255|0;Oa[4]=b.r*
255|0;Oa[5]=b.g*255|0;Oa[6]=b.b*255|0;Oa[8]=c.r*255|0;Oa[9]=c.g*255|0;Oa[10]=c.b*255|0;Oa[12]=d.r*255|0;Oa[13]=d.g*255|0;Oa[14]=d.b*255|0;db.putImageData(jb,0,0);eb.drawImage(cb,0,0);return Ra}function kb(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function Wa(a){a=(a+1)*0.5;return a<0?0:a>1?1:a}function ja(a,b){var c=b.x-a.x,d=b.y-a.y,g=c*c+d*d;if(g!==0){g=1/Math.sqrt(g);c=c*g;d=d*g;b.x=b.x+c;b.y=b.y+d;a.x=a.x-c;a.y=a.y-d}}if(g instanceof THREE.Camera===false)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
else{var Xb,Ec,Ia,V;this.autoClear===true?this.clear():o.setTransform(1,0,0,-1,s,p);e.info.render.vertices=0;e.info.render.faces=0;h=l.projectScene(a,g,this.sortObjects,this.sortElements);k=h.elements;i=h.lights;ub=i.length>0;if(ub===true){va.setRGB(0,0,0);ib.setRGB(0,0,0);vb.setRGB(0,0,0);Xb=0;for(Ec=i.length;Xb<Ec;Xb++){V=i[Xb];var $=V.color;if(V instanceof THREE.AmbientLight){va.r=va.r+$.r;va.g=va.g+$.g;va.b=va.b+$.b}else if(V instanceof THREE.DirectionalLight){ib.r=ib.r+$.r;ib.g=ib.g+$.g;ib.b=
ib.b+$.b}else if(V instanceof THREE.PointLight){vb.r=vb.r+$.r;vb.g=vb.g+$.g;vb.b=vb.b+$.b}}}Xb=0;for(Ec=k.length;Xb<Ec;Xb++){Ia=k[Xb];V=Ia.material;if(!(V===void 0||V.visible===false)){ka.empty();if(Ia instanceof THREE.RenderableParticle){B=Ia;B.x=B.x*s;B.y=B.y*p;var $=B,qa=Ia;b(V.opacity);c(V.blending);var Da=void 0,I=void 0,nb=void 0,pb=void 0,Yb=void 0,Tc=Ia=void 0;if(V instanceof THREE.ParticleBasicMaterial)if(V.map===null){nb=qa.object.scale.x;pb=qa.object.scale.y;nb=nb*qa.scale.x*s;pb=pb*qa.scale.y*
p;ka.set($.x-nb,$.y-pb,$.x+nb,$.y+pb);if(ob.intersects(ka)!==false){f(V.color.getContextStyle());o.save();o.translate($.x,$.y);o.rotate(-qa.rotation);o.scale(nb,pb);o.fillRect(-1,-1,2,2);o.restore()}}else{Yb=V.map.image;Ia=Yb.width>>1;Tc=Yb.height>>1;nb=qa.scale.x*s;pb=qa.scale.y*p;Da=nb*Ia;I=pb*Tc;ka.set($.x-Da,$.y-I,$.x+Da,$.y+I);if(ob.intersects(ka)!==false){o.save();o.translate($.x,$.y);o.rotate(-qa.rotation);o.scale(nb,-pb);o.translate(-Ia,-Tc);o.drawImage(Yb,0,0);o.restore()}}else if(V instanceof
THREE.ParticleCanvasMaterial){Da=qa.scale.x*s;I=qa.scale.y*p;ka.set($.x-Da,$.y-I,$.x+Da,$.y+I);if(ob.intersects(ka)!==false){d(V.color.getContextStyle());f(V.color.getContextStyle());o.save();o.translate($.x,$.y);o.rotate(-qa.rotation);o.scale(Da,I);V.program(o);o.restore()}}}else if(Ia instanceof THREE.RenderableLine){B=Ia.v1;F=Ia.v2;B.positionScreen.x=B.positionScreen.x*s;B.positionScreen.y=B.positionScreen.y*p;F.positionScreen.x=F.positionScreen.x*s;F.positionScreen.y=F.positionScreen.y*p;ka.addPoint(B.positionScreen.x,
B.positionScreen.y);ka.addPoint(F.positionScreen.x,F.positionScreen.y);if(ob.intersects(ka)===true){$=B;qa=F;b(V.opacity);c(V.blending);o.beginPath();o.moveTo($.positionScreen.x,$.positionScreen.y);o.lineTo(qa.positionScreen.x,qa.positionScreen.y);if(V instanceof THREE.LineBasicMaterial){$=V.linewidth;if(A!==$)A=o.lineWidth=$;$=V.linecap;if(y!==$)y=o.lineCap=$;$=V.linejoin;if(T!==$)T=o.lineJoin=$;d(V.color.getContextStyle());o.stroke();ka.inflate(V.linewidth*2)}}}else if(Ia instanceof THREE.RenderableFace3){B=
Ia.v1;F=Ia.v2;C=Ia.v3;B.positionScreen.x=B.positionScreen.x*s;B.positionScreen.y=B.positionScreen.y*p;F.positionScreen.x=F.positionScreen.x*s;F.positionScreen.y=F.positionScreen.y*p;C.positionScreen.x=C.positionScreen.x*s;C.positionScreen.y=C.positionScreen.y*p;if(V.overdraw===true){ja(B.positionScreen,F.positionScreen);ja(F.positionScreen,C.positionScreen);ja(C.positionScreen,B.positionScreen)}ka.add3Points(B.positionScreen.x,B.positionScreen.y,F.positionScreen.x,F.positionScreen.y,C.positionScreen.x,
C.positionScreen.y);ob.intersects(ka)===true&&m(B,F,C,0,1,2,Ia,V,a)}else if(Ia instanceof THREE.RenderableFace4){B=Ia.v1;F=Ia.v2;C=Ia.v3;G=Ia.v4;B.positionScreen.x=B.positionScreen.x*s;B.positionScreen.y=B.positionScreen.y*p;F.positionScreen.x=F.positionScreen.x*s;F.positionScreen.y=F.positionScreen.y*p;C.positionScreen.x=C.positionScreen.x*s;C.positionScreen.y=C.positionScreen.y*p;G.positionScreen.x=G.positionScreen.x*s;G.positionScreen.y=G.positionScreen.y*p;O.positionScreen.copy(F.positionScreen);
S.positionScreen.copy(G.positionScreen);if(V.overdraw===true){ja(B.positionScreen,F.positionScreen);ja(F.positionScreen,G.positionScreen);ja(G.positionScreen,B.positionScreen);ja(C.positionScreen,O.positionScreen);ja(C.positionScreen,S.positionScreen)}ka.addPoint(B.positionScreen.x,B.positionScreen.y);ka.addPoint(F.positionScreen.x,F.positionScreen.y);ka.addPoint(C.positionScreen.x,C.positionScreen.y);ka.addPoint(G.positionScreen.x,G.positionScreen.y);if(ob.intersects(ka)===true){qa=B;Da=F;I=C;nb=
G;pb=O;Yb=S;$=Ia;Ia=a;e.info.render.vertices=e.info.render.vertices+4;e.info.render.faces++;b(V.opacity);c(V.blending);if(V.map!==void 0&&V.map!==null||V.envMap!==void 0&&V.envMap!==null){m(qa,Da,nb,0,1,3,$,V,Ia);m(pb,I,Yb,1,2,3,$,V,Ia)}else{Q=qa.positionScreen.x;E=qa.positionScreen.y;z=Da.positionScreen.x;J=Da.positionScreen.y;X=I.positionScreen.x;ba=I.positionScreen.y;ga=nb.positionScreen.x;da=nb.positionScreen.y;xa=pb.positionScreen.x;P=pb.positionScreen.y;Ka=Yb.positionScreen.x;La=Yb.positionScreen.y;
if(V instanceof THREE.MeshLambertMaterial||V instanceof THREE.MeshPhongMaterial)if(ub===true){qa=V.color;Da=V.emissive;if(V.wireframe===false&&V.shading==THREE.SmoothShading&&$.vertexNormalsLength==4){ca.r=K.r=U.r=fa.r=va.r;ca.g=K.g=U.g=fa.g=va.g;ca.b=K.b=U.b=fa.b=va.b;j($.v1.positionWorld,$.vertexNormalsWorld[0],ca);j($.v2.positionWorld,$.vertexNormalsWorld[1],K);j($.v4.positionWorld,$.vertexNormalsWorld[3],U);j($.v3.positionWorld,$.vertexNormalsWorld[2],fa);ca.r=qa.r*ca.r+Da.r;ca.g=qa.g*ca.g+Da.g;
ca.b=qa.b*ca.b+Da.b;K.r=qa.r*K.r+Da.r;K.g=qa.g*K.g+Da.g;K.b=qa.b*K.b+Da.b;U.r=qa.r*U.r+Da.r;U.g=qa.g*U.g+Da.g;U.b=qa.b*U.b+Da.b;fa.r=qa.r*fa.r+Da.r;fa.g=qa.g*fa.g+Da.g;fa.b=qa.b*fa.b+Da.b;Fa=pa(ca,K,U,fa);n(Q,E,z,J,ga,da);D(Q,E,z,J,ga,da,0,0,1,0,0,1,Fa);n(xa,P,X,ba,Ka,La);D(xa,P,X,ba,Ka,La,1,0,1,1,0,1,Fa)}else{Y.r=va.r;Y.g=va.g;Y.b=va.b;j($.centroidWorld,$.normalWorld,Y);Y.r=qa.r*Y.r+Da.r;Y.g=qa.g*Y.g+Da.g;Y.b=qa.b*Y.b+Da.b;r(Q,E,z,J,X,ba,ga,da);V.wireframe===true?u(Y,V.wireframeLinewidth,V.wireframeLinecap,
V.wireframeLinejoin):v(Y)}}else{r(Q,E,z,J,X,ba,ga,da);V.wireframe===true?u(V.color,V.wireframeLinewidth,V.wireframeLinecap,V.wireframeLinejoin):v(V.color)}else if(V instanceof THREE.MeshBasicMaterial){r(Q,E,z,J,X,ba,ga,da);V.wireframe===true?u(V.color,V.wireframeLinewidth,V.wireframeLinecap,V.wireframeLinejoin):v(V.color)}else if(V instanceof THREE.MeshNormalMaterial){Y.r=Wa($.normalWorld.x);Y.g=Wa($.normalWorld.y);Y.b=Wa($.normalWorld.z);r(Q,E,z,J,X,ba,ga,da);V.wireframe===true?u(Y,V.wireframeLinewidth,
V.wireframeLinecap,V.wireframeLinejoin):v(Y)}else if(V instanceof THREE.MeshDepthMaterial){ma=g.near;Ea=g.far;ca.r=ca.g=ca.b=1-kb(qa.positionScreen.z,ma,Ea);K.r=K.g=K.b=1-kb(Da.positionScreen.z,ma,Ea);U.r=U.g=U.b=1-kb(nb.positionScreen.z,ma,Ea);fa.r=fa.g=fa.b=1-kb(I.positionScreen.z,ma,Ea);Fa=pa(ca,K,U,fa);n(Q,E,z,J,ga,da);D(Q,E,z,J,ga,da,0,0,1,0,0,1,Fa);n(xa,P,X,ba,Ka,La);D(xa,P,X,ba,Ka,La,1,0,1,1,0,1,Fa)}}}}Ma.addRectangle(ka)}}o.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)f[c]=d[c]}return f},clone:function(a){var b,c,d,f={};for(b in a){f[b]={};for(c in a[b]){d=a[b][c];f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d}}return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=true;var h=1;f.type==="v2"?h=2:f.type==="v3"?h=3:f.type==="v4"?h=4:f.type==="c"&&(h=3);f.size=h;f.array=new Float32Array(c*h);f.buffer=g.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=true}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?false:a&&a.shading!==void 0&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?true:false}function e(a){var b,
c,d;for(b in a.attributes){d=b==="index"?g.ELEMENT_ARRAY_BUFFER:g.ARRAY_BUFFER;c=a.attributes[b];c.buffer=g.createBuffer();g.bindBuffer(d,c.buffer);g.bufferData(d,c.array,g.STATIC_DRAW)}}function h(a,b,c){var d,e,f,h,i=a.vertices;h=i.length;var j=a.colors,k=j.length,l=a.__vertexArray,m=a.__colorArray,n=a.__sortArray,o=a.verticesNeedUpdate,p=a.colorsNeedUpdate,r=a.__webglCustomAttributesList;if(c.sortParticles){jb.copy(db);jb.multiplySelf(c.matrixWorld);for(d=0;d<h;d++){e=i[d];Oa.copy(e);jb.multiplyVector3(Oa);
n[d]=[Oa.z,d]}n.sort(function(a,b){return b[0]-a[0]});for(d=0;d<h;d++){e=i[n[d][1]];f=d*3;l[f]=e.x;l[f+1]=e.y;l[f+2]=e.z}for(d=0;d<k;d++){f=d*3;e=j[n[d][1]];m[f]=e.r;m[f+1]=e.g;m[f+2]=e.b}if(r){j=0;for(k=r.length;j<k;j++){i=r[j];if(i.boundTo===void 0||i.boundTo==="vertices"){f=0;e=i.value.length;if(i.size===1)for(d=0;d<e;d++){h=n[d][1];i.array[d]=i.value[h]}else if(i.size===2)for(d=0;d<e;d++){h=n[d][1];h=i.value[h];i.array[f]=h.x;i.array[f+1]=h.y;f=f+2}else if(i.size===3)if(i.type==="c")for(d=0;d<
e;d++){h=n[d][1];h=i.value[h];i.array[f]=h.r;i.array[f+1]=h.g;i.array[f+2]=h.b;f=f+3}else for(d=0;d<e;d++){h=n[d][1];h=i.value[h];i.array[f]=h.x;i.array[f+1]=h.y;i.array[f+2]=h.z;f=f+3}else if(i.size===4)for(d=0;d<e;d++){h=n[d][1];h=i.value[h];i.array[f]=h.x;i.array[f+1]=h.y;i.array[f+2]=h.z;i.array[f+3]=h.w;f=f+4}}}}}else{if(o)for(d=0;d<h;d++){e=i[d];f=d*3;l[f]=e.x;l[f+1]=e.y;l[f+2]=e.z}if(p)for(d=0;d<k;d++){e=j[d];f=d*3;m[f]=e.r;m[f+1]=e.g;m[f+2]=e.b}if(r){j=0;for(k=r.length;j<k;j++){i=r[j];if(i.needsUpdate&&
(i.boundTo===void 0||i.boundTo==="vertices")){e=i.value.length;f=0;if(i.size===1)for(d=0;d<e;d++)i.array[d]=i.value[d];else if(i.size===2)for(d=0;d<e;d++){h=i.value[d];i.array[f]=h.x;i.array[f+1]=h.y;f=f+2}else if(i.size===3)if(i.type==="c")for(d=0;d<e;d++){h=i.value[d];i.array[f]=h.r;i.array[f+1]=h.g;i.array[f+2]=h.b;f=f+3}else for(d=0;d<e;d++){h=i.value[d];i.array[f]=h.x;i.array[f+1]=h.y;i.array[f+2]=h.z;f=f+3}else if(i.size===4)for(d=0;d<e;d++){h=i.value[d];i.array[f]=h.x;i.array[f+1]=h.y;i.array[f+
2]=h.z;i.array[f+3]=h.w;f=f+4}}}}}if(o||c.sortParticles){g.bindBuffer(g.ARRAY_BUFFER,a.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,l,b)}if(p||c.sortParticles){g.bindBuffer(g.ARRAY_BUFFER,a.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,m,b)}if(r){j=0;for(k=r.length;j<k;j++){i=r[j];if(i.needsUpdate||c.sortParticles){g.bindBuffer(g.ARRAY_BUFFER,i.buffer);g.bufferData(g.ARRAY_BUFFER,i.array,b)}}}}function k(a,b,c){var d=a.attributes,e=d.index,f=d.position,h=d.normal,i=d.uv,j=d.color,d=d.tangent;
if(a.elementsNeedUpdate&&e!==void 0){g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.buffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,e.array,b)}if(a.verticesNeedUpdate&&f!==void 0){g.bindBuffer(g.ARRAY_BUFFER,f.buffer);g.bufferData(g.ARRAY_BUFFER,f.array,b)}if(a.normalsNeedUpdate&&h!==void 0){g.bindBuffer(g.ARRAY_BUFFER,h.buffer);g.bufferData(g.ARRAY_BUFFER,h.array,b)}if(a.uvsNeedUpdate&&i!==void 0){g.bindBuffer(g.ARRAY_BUFFER,i.buffer);g.bufferData(g.ARRAY_BUFFER,i.array,b)}if(a.colorsNeedUpdate&&j!==void 0){g.bindBuffer(g.ARRAY_BUFFER,
j.buffer);g.bufferData(g.ARRAY_BUFFER,j.array,b)}if(a.tangentsNeedUpdate&&d!==void 0){g.bindBuffer(g.ARRAY_BUFFER,d.buffer);g.bufferData(g.ARRAY_BUFFER,d.array,b)}if(c)for(var k in a.attributes)delete a.attributes[k].array}function i(a,b){return b.z-a.z}function l(a,b){return b[1]-a[1]}function j(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++){fa=Y=null;K=U=Ea=ma=ab=Va=Fa=-1;eb=true;a[d].render(b,c,vb,ya);fa=Y=null;K=U=Ea=ma=ab=Va=Fa=-1;eb=true}}function n(a,b,c,d,e,g,f,h){var i,j,k,l;if(b){j=
a.length-1;l=b=-1}else{j=0;b=a.length;l=1}for(var m=j;m!==b;m=m+l){i=a[m];if(i.render){j=i.object;k=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;f&&P.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);P.setDepthTest(i.depthTest);P.setDepthWrite(i.depthWrite);y(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}P.setMaterialFaces(i);k instanceof THREE.BufferGeometry?P.renderBufferDirect(d,e,g,i,k,j):P.renderBuffer(d,e,g,i,k,j)}}}function m(a,b,c,d,e,g,f){for(var h,i,j=0,k=a.length;j<
k;j++){h=a[j];i=h.object;if(i.visible){if(f)h=f;else{h=h[b];if(!h)continue;g&&P.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);P.setDepthTest(h.depthTest);P.setDepthWrite(h.depthWrite);y(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}P.renderImmediateObject(c,d,e,h,i)}}}function s(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function p(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return true;return false}function o(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
false}function r(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function u(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function D(a,b,c,d,e){ra=0;if(d.needsUpdate){d.program&&P.deallocateMaterial(d);P.initMaterial(d,b,c,e);d.needsUpdate=false}if(d.morphTargets&&!e.__webglMorphTargetInfluences)e.__webglMorphTargetInfluences=new Float32Array(P.maxMorphTargets);var f=false,h=d.program,i=h.uniforms,j=d.uniforms;if(h!==Y){g.useProgram(h);Y=h;f=true}if(d.id!==K){K=d.id;
f=true}if(f||a!==fa){g.uniformMatrix4fv(i.projectionMatrix,false,a._projectionMatrixArray);a!==fa&&(fa=a)}if(d.skinning)if(gc&&e.useVertexTexture){if(i.boneTexture!==null){var k=v();g.uniform1i(i.boneTexture,k);P.setTexture(e.boneTexture,k)}}else i.boneGlobalMatrices!==null&&g.uniformMatrix4fv(i.boneGlobalMatrices,false,e.boneMatrices);if(f){if(c&&d.fog){j.fogColor.value=c.color;if(c instanceof THREE.Fog){j.fogNear.value=c.near;j.fogFar.value=c.far}else if(c instanceof THREE.FogExp2)j.fogDensity.value=
c.density}if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(eb){for(var l=0,m=0,n=0,o,p,r,s,u=qc,y=u.directional.colors,x=u.directional.positions,z=u.point.colors,B=u.point.positions,C=u.point.distances,D=u.spot.colors,G=u.spot.positions,J=u.spot.distances,Q=u.spot.directions,E=u.spot.angles,U=u.spot.exponents,T=u.hemi.skyColors,X=u.hemi.groundColors,ca=u.hemi.positions,ba=0,ga=0,ma=0,ha=0,c=o=r=r=p=0,f=b.length;c<f;c++){k=b[c];if(!k.onlyShadow&&k.visible){o=
k.color;s=k.intensity;p=k.distance;if(k instanceof THREE.AmbientLight)if(P.gammaInput){l=l+o.r*o.r;m=m+o.g*o.g;n=n+o.b*o.b}else{l=l+o.r;m=m+o.g;n=n+o.b}else if(k instanceof THREE.DirectionalLight){p=ba*3;P.gammaInput?I(y,p,o,s*s):A(y,p,o,s);Ra.copy(k.matrixWorld.getPosition());Ra.subSelf(k.target.matrixWorld.getPosition());Ra.normalize();x[p]=Ra.x;x[p+1]=Ra.y;x[p+2]=Ra.z;ba=ba+1}else if(k instanceof THREE.PointLight){r=ga*3;P.gammaInput?I(z,r,o,s*s):A(z,r,o,s);s=k.matrixWorld.getPosition();B[r]=s.x;
B[r+1]=s.y;B[r+2]=s.z;C[ga]=p;ga=ga+1}else if(k instanceof THREE.SpotLight){r=ma*3;P.gammaInput?I(D,r,o,s*s):A(D,r,o,s);s=k.matrixWorld.getPosition();G[r]=s.x;G[r+1]=s.y;G[r+2]=s.z;J[ma]=p;Ra.copy(s);Ra.subSelf(k.target.matrixWorld.getPosition());Ra.normalize();Q[r]=Ra.x;Q[r+1]=Ra.y;Q[r+2]=Ra.z;E[ma]=Math.cos(k.angle);U[ma]=k.exponent;ma=ma+1}else if(k instanceof THREE.HemisphereLight){p=k.color;r=k.groundColor;o=ha*3;if(P.gammaInput){s=s*s;I(T,o,p,s);I(X,o,r,s)}else{A(T,o,p,s);A(X,o,r,s)}s=k.matrixWorld.getPosition();
ca[o]=s.x;ca[o+1]=s.y;ca[o+2]=s.z;ha=ha+1}}}c=ba*3;for(f=y.length;c<f;c++)y[c]=0;c=ga*3;for(f=z.length;c<f;c++)z[c]=0;c=ma*3;for(f=D.length;c<f;c++)D[c]=0;c=ha*3;for(f=T.length;c<f;c++)T[c]=0;c=ha*3;for(f=X.length;c<f;c++)X[c]=0;u.directional.length=ba;u.point.length=ga;u.spot.length=ma;u.hemi.length=ha;u.ambient[0]=l;u.ambient[1]=m;u.ambient[2]=n;eb=false}c=qc;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;
j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;j.pointLightDistance.value=c.point.distances;j.spotLightColor.value=c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngle.value=c.spot.angles;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightPosition.value=
c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){j.opacity.value=d.opacity;P.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;if(d.bumpMap){j.bumpMap.value=d.bumpMap;j.bumpScale.value=d.bumpScale}if(d.normalMap){j.normalMap.value=d.normalMap;j.normalScale.value.copy(d.normalScale)}var da;if(d.map)da=d.map;
else if(d.specularMap)da=d.specularMap;else if(d.normalMap)da=d.normalMap;else if(d.bumpMap)da=d.bumpMap;if(da!==void 0){c=da.offset;da=da.repeat;j.offsetRepeat.value.set(c.x,c.y,da.x,da.y)}j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}if(d instanceof THREE.LineBasicMaterial){j.diffuse.value=
d.color;j.opacity.value=d.opacity}else if(d instanceof THREE.ParticleBasicMaterial){j.psColor.value=d.color;j.opacity.value=d.opacity;j.size.value=d.size;j.scale.value=S.height/2;j.map.value=d.map}else if(d instanceof THREE.MeshPhongMaterial){j.shininess.value=d.shininess;if(P.gammaInput){j.ambient.value.copyGammaToLinear(d.ambient);j.emissive.value.copyGammaToLinear(d.emissive);j.specular.value.copyGammaToLinear(d.specular)}else{j.ambient.value=d.ambient;j.emissive.value=d.emissive;j.specular.value=
d.specular}d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)}else if(d instanceof THREE.MeshLambertMaterial){if(P.gammaInput){j.ambient.value.copyGammaToLinear(d.ambient);j.emissive.value.copyGammaToLinear(d.emissive)}else{j.ambient.value=d.ambient;j.emissive.value=d.emissive}d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)}else if(d instanceof THREE.MeshDepthMaterial){j.mNear.value=a.near;j.mFar.value=a.far;j.opacity.value=d.opacity}else if(d instanceof THREE.MeshNormalMaterial)j.opacity.value=d.opacity;
if(e.receiveShadow&&!d._shadowPass&&j.shadowMatrix){c=da=0;for(f=b.length;c<f;c++){k=b[c];if(k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade)){j.shadowMap.value[da]=k.shadowMap;j.shadowMapSize.value[da]=k.shadowMapSize;j.shadowMatrix.value[da]=k.shadowMatrix;j.shadowDarkness.value[da]=k.shadowDarkness;j.shadowBias.value[da]=k.shadowBias;da++}}}b=d.uniformsList;j=0;for(da=b.length;j<da;j++)if(f=h.uniforms[b[j][1]]){c=b[j][0];l=c.type;k=c.value;if(l===
"i")g.uniform1i(f,k);else if(l==="f")g.uniform1f(f,k);else if(l==="v2")g.uniform2f(f,k.x,k.y);else if(l==="v3")g.uniform3f(f,k.x,k.y,k.z);else if(l==="v4")g.uniform4f(f,k.x,k.y,k.z,k.w);else if(l==="c")g.uniform3f(f,k.r,k.g,k.b);else if(l==="iv1")g.uniform1iv(f,k);else if(l==="iv")g.uniform3iv(f,k);else if(l==="fv1")g.uniform1fv(f,k);else if(l==="fv")g.uniform3fv(f,k);else if(l==="v2v"){if(c._array===void 0)c._array=new Float32Array(2*k.length);l=0;for(m=k.length;l<m;l++){n=l*2;c._array[n]=k[l].x;
c._array[n+1]=k[l].y}g.uniform2fv(f,c._array)}else if(l==="v3v"){if(c._array===void 0)c._array=new Float32Array(3*k.length);l=0;for(m=k.length;l<m;l++){n=l*3;c._array[n]=k[l].x;c._array[n+1]=k[l].y;c._array[n+2]=k[l].z}g.uniform3fv(f,c._array)}else if(l==="v4v"){if(c._array===void 0)c._array=new Float32Array(4*k.length);l=0;for(m=k.length;l<m;l++){n=l*4;c._array[n]=k[l].x;c._array[n+1]=k[l].y;c._array[n+2]=k[l].z;c._array[n+3]=k[l].w}g.uniform4fv(f,c._array)}else if(l==="m4"){if(c._array===void 0)c._array=
new Float32Array(16);k.flattenToArray(c._array);g.uniformMatrix4fv(f,false,c._array)}else if(l==="m4v"){if(c._array===void 0)c._array=new Float32Array(16*k.length);l=0;for(m=k.length;l<m;l++)k[l].flattenToArrayOffset(c._array,l*16);g.uniformMatrix4fv(f,false,c._array)}else if(l==="t"){n=k;k=v();g.uniform1i(f,k);if(n)if(n.image instanceof Array&&n.image.length===6){c=n;f=k;if(c.image.length===6)if(c.needsUpdate){if(!c.image.__webglTextureCube)c.image.__webglTextureCube=g.createTexture();g.activeTexture(g.TEXTURE0+
f);g.bindTexture(g.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,c.flipY);f=c instanceof THREE.CompressedTexture;k=[];for(l=0;l<6;l++){m=k;n=l;if(P.autoScaleCubemaps&&!f){u=c.image[l];x=Sc;if(!(u.width<=x&&u.height<=x)){z=Math.max(u.width,u.height);y=Math.floor(u.width*x/z);x=Math.floor(u.height*x/z);z=document.createElement("canvas");z.width=y;z.height=x;z.getContext("2d").drawImage(u,0,0,u.width,u.height,0,0,y,x);u=z}}else u=c.image[l];m[n]=u}l=k[0];m=(l.width&
l.width-1)===0&&(l.height&l.height-1)===0;n=O(c.format);u=O(c.type);F(g.TEXTURE_CUBE_MAP,c,m);for(l=0;l<6;l++)if(f){x=k[l].mipmaps;z=0;for(B=x.length;z<B;z++){y=x[z];g.compressedTexImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+l,z,n,y.width,y.height,0,y.data)}}else g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,n,n,u,k[l]);c.generateMipmaps&&m&&g.generateMipmap(g.TEXTURE_CUBE_MAP);c.needsUpdate=false;if(c.onUpdate)c.onUpdate()}else{g.activeTexture(g.TEXTURE0+f);g.bindTexture(g.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}}else if(n instanceof
THREE.WebGLRenderTargetCube){c=n;g.activeTexture(g.TEXTURE0+k);g.bindTexture(g.TEXTURE_CUBE_MAP,c.__webglTexture)}else P.setTexture(n,k)}else if(l==="tv"){if(c._array===void 0)c._array=[];l=0;for(m=c.value.length;l<m;l++)c._array[l]=v();g.uniform1iv(f,c._array);l=0;for(m=c.value.length;l<m;l++){n=c.value[l];k=c._array[l];n&&P.setTexture(n,k)}}}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&i.cameraPosition!==null){b=a.matrixWorld.getPosition();g.uniform3f(i.cameraPosition,
b.x,b.y,b.z)}(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&i.viewMatrix!==null&&g.uniformMatrix4fv(i.viewMatrix,false,a._viewMatrixArray)}g.uniformMatrix4fv(i.modelViewMatrix,false,e._modelViewMatrix.elements);i.normalMatrix&&g.uniformMatrix3fv(i.normalMatrix,false,e._normalMatrix.elements);i.modelMatrix!==null&&g.uniformMatrix4fv(i.modelMatrix,false,e.matrixWorld.elements);return h}function v(){var a=ra;a>=Dc&&console.warn("Trying to use "+
a+" texture units while this GPU supports only "+Dc);ra=ra+1;return a}function x(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function I(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function A(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function y(a,b,c){if(yb!==a){a?g.enable(g.POLYGON_OFFSET_FILL):g.disable(g.POLYGON_OFFSET_FILL);yb=a}if(a&&(zb!==b||ob!==c)){g.polygonOffset(b,c);zb=b;
ob=c}}function T(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function B(a,b){var c;a==="fragment"?c=g.createShader(g.FRAGMENT_SHADER):a==="vertex"&&(c=g.createShader(g.VERTEX_SHADER));g.shaderSource(c,b);g.compileShader(c);if(!g.getShaderParameter(c,g.COMPILE_STATUS)){console.error(g.getShaderInfoLog(c));console.error(T(b));return null}return c}function F(a,b,c){if(c){g.texParameteri(a,g.TEXTURE_WRAP_S,O(b.wrapS));g.texParameteri(a,g.TEXTURE_WRAP_T,O(b.wrapT));
g.texParameteri(a,g.TEXTURE_MAG_FILTER,O(b.magFilter));g.texParameteri(a,g.TEXTURE_MIN_FILTER,O(b.minFilter))}else{g.texParameteri(a,g.TEXTURE_WRAP_S,g.CLAMP_TO_EDGE);g.texParameteri(a,g.TEXTURE_WRAP_T,g.CLAMP_TO_EDGE);g.texParameteri(a,g.TEXTURE_MAG_FILTER,G(b.magFilter));g.texParameteri(a,g.TEXTURE_MIN_FILTER,G(b.minFilter))}if(Rb&&b.type!==THREE.FloatType&&(b.anisotropy>1||b.__oldAnisotropy)){g.texParameterf(a,Rb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,rc));b.__oldAnisotropy=b.anisotropy}}
function C(a,b){g.bindRenderbuffer(g.RENDERBUFFER,a);if(b.depthBuffer&&!b.stencilBuffer){g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_COMPONENT16,b.width,b.height);g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_ATTACHMENT,g.RENDERBUFFER,a)}else if(b.depthBuffer&&b.stencilBuffer){g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_STENCIL,b.width,b.height);g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_STENCIL_ATTACHMENT,g.RENDERBUFFER,a)}else g.renderbufferStorage(g.RENDERBUFFER,g.RGBA4,b.width,b.height)}
function G(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?g.NEAREST:g.LINEAR}function O(a){if(a===THREE.RepeatWrapping)return g.REPEAT;if(a===THREE.ClampToEdgeWrapping)return g.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return g.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return g.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return g.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return g.NEAREST_MIPMAP_LINEAR;if(a===
THREE.LinearFilter)return g.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return g.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return g.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return g.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return g.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return g.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return g.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return g.BYTE;if(a===THREE.ShortType)return g.SHORT;if(a===
THREE.UnsignedShortType)return g.UNSIGNED_SHORT;if(a===THREE.IntType)return g.INT;if(a===THREE.UnsignedIntType)return g.UNSIGNED_INT;if(a===THREE.FloatType)return g.FLOAT;if(a===THREE.AlphaFormat)return g.ALPHA;if(a===THREE.RGBFormat)return g.RGB;if(a===THREE.RGBAFormat)return g.RGBA;if(a===THREE.LuminanceFormat)return g.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return g.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return g.FUNC_ADD;if(a===THREE.SubtractEquation)return g.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return g.FUNC_REVERSE_SUBTRACT;
if(a===THREE.ZeroFactor)return g.ZERO;if(a===THREE.OneFactor)return g.ONE;if(a===THREE.SrcColorFactor)return g.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return g.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return g.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return g.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return g.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return g.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return g.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return g.ONE_MINUS_DST_COLOR;
if(a===THREE.SrcAlphaSaturateFactor)return g.SRC_ALPHA_SATURATE;if(Ab!==void 0){if(a===THREE.RGB_S3TC_DXT1_Format)return Ab.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Ab.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Ab.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Ab.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},S=a.canvas!==void 0?a.canvas:document.createElement("canvas"),
Q=a.precision!==void 0?a.precision:"highp",E=a.alpha!==void 0?a.alpha:true,z=a.premultipliedAlpha!==void 0?a.premultipliedAlpha:true,J=a.antialias!==void 0?a.antialias:false,X=a.stencil!==void 0?a.stencil:true,ba=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:false,ga=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),da=a.clearAlpha!==void 0?a.clearAlpha:0,xa=a.maxLights!==void 0?a.maxLights:4;this.domElement=S;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=
this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=true;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=false;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=true;this.shadowMapCascade=this.shadowMapDebug=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,
vertices:0,faces:0,points:0}};var P=this,Ka=[],La=0,Y=null,ca=null,K=-1,U=null,fa=null,Ha=0,ra=0,ma=-1,Ea=-1,Fa=-1,$a=-1,ha=-1,mb=-1,Va=-1,ab=-1,yb=null,zb=null,ob=null,Ma=null,ka=0,ub=0,va=0,ib=0,vb=0,ya=0,cb=new THREE.Frustum,db=new THREE.Matrix4,jb=new THREE.Matrix4,Oa=new THREE.Vector4,Ra=new THREE.Vector3,eb=true,qc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],
angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},g,Rb,Ab;try{if(!(g=S.getContext("experimental-webgl",{alpha:E,premultipliedAlpha:z,antialias:J,stencil:X,preserveDrawingBuffer:ba})))throw"Error creating WebGL context.";}catch(Rc){console.error(Rc)}a=g.getExtension("OES_texture_float");E=g.getExtension("OES_standard_derivatives");Rb=g.getExtension("EXT_texture_filter_anisotropic")||g.getExtension("MOZ_EXT_texture_filter_anisotropic")||g.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
Ab=g.getExtension("WEBGL_compressed_texture_s3tc")||g.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||g.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");E||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Rb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");Ab||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");g.clearColor(0,0,0,1);g.clearDepth(1);
g.clearStencil(0);g.enable(g.DEPTH_TEST);g.depthFunc(g.LEQUAL);g.frontFace(g.CCW);g.cullFace(g.BACK);g.enable(g.CULL_FACE);g.enable(g.BLEND);g.blendEquation(g.FUNC_ADD);g.blendFunc(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA);g.clearColor(ga.r,ga.g,ga.b,da);this.context=g;var Dc=g.getParameter(g.MAX_TEXTURE_IMAGE_UNITS),E=g.getParameter(g.MAX_VERTEX_TEXTURE_IMAGE_UNITS);g.getParameter(g.MAX_TEXTURE_SIZE);var Sc=g.getParameter(g.MAX_CUBE_MAP_TEXTURE_SIZE),rc=Rb?g.getParameter(Rb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):
0,jc=E>0,gc=jc&&a;Ab&&g.getParameter(g.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return g};this.supportsVertexTextures=function(){return jc};this.getMaxAnisotropy=function(){return rc};this.setSize=function(a,b){S.width=a;S.height=b;this.setViewport(0,0,S.width,S.height)};this.setViewport=function(a,b,c,d){ka=a!==void 0?a:0;ub=b!==void 0?b:0;va=c!==void 0?c:S.width;ib=d!==void 0?d:S.height;g.viewport(ka,ub,va,ib)};this.setScissor=function(a,b,c,d){g.scissor(a,b,c,d)};this.enableScissorTest=
function(a){a?g.enable(g.SCISSOR_TEST):g.disable(g.SCISSOR_TEST)};this.setClearColorHex=function(a,b){ga.setHex(a);da=b;g.clearColor(ga.r,ga.g,ga.b,da)};this.setClearColor=function(a,b){ga.copy(a);da=b;g.clearColor(ga.r,ga.g,ga.b,da)};this.getClearColor=function(){return ga};this.getClearAlpha=function(){return da};this.clear=function(a,b,c){var d=0;if(a===void 0||a)d=d|g.COLOR_BUFFER_BIT;if(b===void 0||b)d=d|g.DEPTH_BUFFER_BIT;if(c===void 0||c)d=d|g.STENCIL_BUFFER_BIT;g.clear(d)};this.clearTarget=
function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit){a.__webglInit=false;delete a._modelViewMatrix;delete a._normalMatrix;delete a._normalMatrixArray;delete a._modelViewMatrixArray;delete a._modelMatrixArray;if(a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];
g.deleteBuffer(c.__webglVertexBuffer);g.deleteBuffer(c.__webglNormalBuffer);g.deleteBuffer(c.__webglTangentBuffer);g.deleteBuffer(c.__webglColorBuffer);g.deleteBuffer(c.__webglUVBuffer);g.deleteBuffer(c.__webglUV2Buffer);g.deleteBuffer(c.__webglSkinIndicesBuffer);g.deleteBuffer(c.__webglSkinWeightsBuffer);g.deleteBuffer(c.__webglFaceBuffer);g.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=0;for(e=c.numMorphTargets;d<e;d++)g.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=
0;for(e=c.numMorphNormals;d<e;d++)g.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList){d=void 0;for(d in c.__webglCustomAttributesList)g.deleteBuffer(c.__webglCustomAttributesList[d].buffer)}P.info.memory.geometries--}else if(a instanceof THREE.Ribbon){a=a.geometry;g.deleteBuffer(a.__webglVertexBuffer);g.deleteBuffer(a.__webglColorBuffer);P.info.memory.geometries--}else if(a instanceof THREE.Line){a=a.geometry;g.deleteBuffer(a.__webglVertexBuffer);g.deleteBuffer(a.__webglColorBuffer);
P.info.memory.geometries--}else if(a instanceof THREE.ParticleSystem){a=a.geometry;g.deleteBuffer(a.__webglVertexBuffer);g.deleteBuffer(a.__webglColorBuffer);P.info.memory.geometries--}}};this.deallocateTexture=function(a){if(a.__webglInit){a.__webglInit=false;g.deleteTexture(a.__webglTexture);P.info.memory.textures--}};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture){g.deleteTexture(a.__webglTexture);if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;b<6;b++){g.deleteFramebuffer(a.__webglFramebuffer[b]);
g.deleteRenderbuffer(a.__webglRenderbuffer[b])}else{g.deleteFramebuffer(a.__webglFramebuffer);g.deleteRenderbuffer(a.__webglRenderbuffer)}}};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=false,a=0;for(c=Ka.length;a<c;a++){d=Ka[a];if(d.program===b){d.usedTimes--;d.usedTimes===0&&(e=true);break}}if(e){e=[];a=0;for(c=Ka.length;a<c;a++){d=Ka[a];d.program!==b&&e.push(d)}Ka=e;g.deleteProgram(b);P.info.memory.programs--}}};this.updateShadowMap=function(a,b){Y=null;
K=U=ab=Va=Fa=-1;eb=true;Ea=ma=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){if(a.hasPositions&&!a.__webglVertexBuffer)a.__webglVertexBuffer=g.createBuffer();if(a.hasNormals&&!a.__webglNormalBuffer)a.__webglNormalBuffer=g.createBuffer();if(a.hasUvs&&!a.__webglUvBuffer)a.__webglUvBuffer=g.createBuffer();if(a.hasColors&&!a.__webglColorBuffer)a.__webglColorBuffer=g.createBuffer();if(a.hasPositions){g.bindBuffer(g.ARRAY_BUFFER,a.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,
a.positionArray,g.DYNAMIC_DRAW);g.enableVertexAttribArray(b.attributes.position);g.vertexAttribPointer(b.attributes.position,3,g.FLOAT,false,0,0)}if(a.hasNormals){g.bindBuffer(g.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,h,i,j,k,l,m,n,o,p=a.count*3;for(o=0;o<p;o=o+9){n=a.normalArray;d=n[o];e=n[o+1];f=n[o+2];h=n[o+3];j=n[o+4];l=n[o+5];i=n[o+6];k=n[o+7];m=n[o+8];d=(d+h+i)/3;e=(e+j+k)/3;f=(f+l+m)/3;n[o]=d;n[o+1]=e;n[o+2]=f;n[o+3]=d;n[o+4]=e;n[o+5]=f;n[o+6]=d;n[o+
7]=e;n[o+8]=f}}g.bufferData(g.ARRAY_BUFFER,a.normalArray,g.DYNAMIC_DRAW);g.enableVertexAttribArray(b.attributes.normal);g.vertexAttribPointer(b.attributes.normal,3,g.FLOAT,false,0,0)}if(a.hasUvs&&c.map){g.bindBuffer(g.ARRAY_BUFFER,a.__webglUvBuffer);g.bufferData(g.ARRAY_BUFFER,a.uvArray,g.DYNAMIC_DRAW);g.enableVertexAttribArray(b.attributes.uv);g.vertexAttribPointer(b.attributes.uv,2,g.FLOAT,false,0,0)}if(a.hasColors&&c.vertexColors!==THREE.NoColors){g.bindBuffer(g.ARRAY_BUFFER,a.__webglColorBuffer);
g.bufferData(g.ARRAY_BUFFER,a.colorArray,g.DYNAMIC_DRAW);g.enableVertexAttribArray(b.attributes.color);g.vertexAttribPointer(b.attributes.color,3,g.FLOAT,false,0,0)}g.drawArrays(g.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==false){c=D(a,b,c,d,f);a=c.attributes;b=false;d=e.id*16777215+c.id*2+(d.wireframe?1:0);if(d!==U){U=d;b=true}if(f instanceof THREE.Mesh){f=e.offsets;f.length>1&&(b=true);d=0;for(c=f.length;d<c;++d){var h=f[d].index;if(b){var i=e.attributes.position,
j=i.itemSize;g.bindBuffer(g.ARRAY_BUFFER,i.buffer);g.vertexAttribPointer(a.position,j,g.FLOAT,false,0,h*j*4);i=e.attributes.normal;if(a.normal>=0&&i){j=i.itemSize;g.bindBuffer(g.ARRAY_BUFFER,i.buffer);g.vertexAttribPointer(a.normal,j,g.FLOAT,false,0,h*j*4)}i=e.attributes.uv;if(a.uv>=0&&i)if(i.buffer){j=i.itemSize;g.bindBuffer(g.ARRAY_BUFFER,i.buffer);g.vertexAttribPointer(a.uv,j,g.FLOAT,false,0,h*j*4);g.enableVertexAttribArray(a.uv)}else g.disableVertexAttribArray(a.uv);j=e.attributes.color;if(a.color>=
0&&j){var k=j.itemSize;g.bindBuffer(g.ARRAY_BUFFER,j.buffer);g.vertexAttribPointer(a.color,k,g.FLOAT,false,0,h*k*4)}i=e.attributes.tangent;if(a.tangent>=0&&i){j=i.itemSize;g.bindBuffer(g.ARRAY_BUFFER,i.buffer);g.vertexAttribPointer(a.tangent,j,g.FLOAT,false,0,h*j*4)}g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}g.drawElements(g.TRIANGLES,f[d].count,g.UNSIGNED_SHORT,f[d].start*2);P.info.render.calls++;P.info.render.vertices=P.info.render.vertices+f[d].count;P.info.render.faces=P.info.render.faces+
f[d].count/3}}else if(f instanceof THREE.ParticleSystem&&b){i=e.attributes.position;j=i.itemSize;g.bindBuffer(g.ARRAY_BUFFER,i.buffer);g.vertexAttribPointer(a.position,j,g.FLOAT,false,0,0);j=e.attributes.color;if(a.color>=0&&j){k=j.itemSize;g.bindBuffer(g.ARRAY_BUFFER,j.buffer);g.vertexAttribPointer(a.color,k,g.FLOAT,false,0,0)}g.drawArrays(g.POINTS,0,i.numItems/3);P.info.render.calls++;P.info.render.points=P.info.render.points+i.numItems/3}}};this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==
false){var h,i,c=D(a,b,c,d,f),b=c.attributes,a=false,c=e.id*16777215+c.id*2+(d.wireframe?1:0);if(c!==U){U=c;a=true}if(!d.morphTargets&&b.position>=0){if(a){g.bindBuffer(g.ARRAY_BUFFER,e.__webglVertexBuffer);g.vertexAttribPointer(b.position,3,g.FLOAT,false,0,0)}}else if(f.morphTargetBase){c=d.program.attributes;if(f.morphTargetBase!==-1){g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]);g.vertexAttribPointer(c.position,3,g.FLOAT,false,0,0)}else if(c.position>=0){g.bindBuffer(g.ARRAY_BUFFER,
e.__webglVertexBuffer);g.vertexAttribPointer(c.position,3,g.FLOAT,false,0,0)}if(f.morphTargetForcedOrder.length){var j=0;i=f.morphTargetForcedOrder;for(h=f.morphTargetInfluences;j<d.numSupportedMorphTargets&&j<i.length;){g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[i[j]]);g.vertexAttribPointer(c["morphTarget"+j],3,g.FLOAT,false,0,0);if(d.morphNormals){g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[i[j]]);g.vertexAttribPointer(c["morphNormal"+j],3,g.FLOAT,false,0,0)}f.__webglMorphTargetInfluences[j]=
h[i[j]];j++}}else{i=[];h=f.morphTargetInfluences;var k,m=h.length;for(k=0;k<m;k++){j=h[k];j>0&&i.push([k,j])}if(i.length>d.numSupportedMorphTargets){i.sort(l);i.length=d.numSupportedMorphTargets}else i.length>d.numSupportedMorphNormals?i.sort(l):i.length===0&&i.push([0,0]);for(j=0;j<d.numSupportedMorphTargets;){if(i[j]){k=i[j][0];g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k]);g.vertexAttribPointer(c["morphTarget"+j],3,g.FLOAT,false,0,0);if(d.morphNormals){g.bindBuffer(g.ARRAY_BUFFER,
e.__webglMorphNormalsBuffers[k]);g.vertexAttribPointer(c["morphNormal"+j],3,g.FLOAT,false,0,0)}f.__webglMorphTargetInfluences[j]=h[k]}else{g.vertexAttribPointer(c["morphTarget"+j],3,g.FLOAT,false,0,0);d.morphNormals&&g.vertexAttribPointer(c["morphNormal"+j],3,g.FLOAT,false,0,0);f.__webglMorphTargetInfluences[j]=0}j++}}d.program.uniforms.morphTargetInfluences!==null&&g.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){h=0;for(i=
e.__webglCustomAttributesList.length;h<i;h++){c=e.__webglCustomAttributesList[h];if(b[c.buffer.belongsToAttribute]>=0){g.bindBuffer(g.ARRAY_BUFFER,c.buffer);g.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,g.FLOAT,false,0,0)}}}if(b.color>=0){g.bindBuffer(g.ARRAY_BUFFER,e.__webglColorBuffer);g.vertexAttribPointer(b.color,3,g.FLOAT,false,0,0)}if(b.normal>=0){g.bindBuffer(g.ARRAY_BUFFER,e.__webglNormalBuffer);g.vertexAttribPointer(b.normal,3,g.FLOAT,false,0,0)}if(b.tangent>=0){g.bindBuffer(g.ARRAY_BUFFER,
e.__webglTangentBuffer);g.vertexAttribPointer(b.tangent,4,g.FLOAT,false,0,0)}if(b.uv>=0)if(e.__webglUVBuffer){g.bindBuffer(g.ARRAY_BUFFER,e.__webglUVBuffer);g.vertexAttribPointer(b.uv,2,g.FLOAT,false,0,0);g.enableVertexAttribArray(b.uv)}else g.disableVertexAttribArray(b.uv);if(b.uv2>=0)if(e.__webglUV2Buffer){g.bindBuffer(g.ARRAY_BUFFER,e.__webglUV2Buffer);g.vertexAttribPointer(b.uv2,2,g.FLOAT,false,0,0);g.enableVertexAttribArray(b.uv2)}else g.disableVertexAttribArray(b.uv2);if(d.skinning&&b.skinIndex>=
0&&b.skinWeight>=0){g.bindBuffer(g.ARRAY_BUFFER,e.__webglSkinIndicesBuffer);g.vertexAttribPointer(b.skinIndex,4,g.FLOAT,false,0,0);g.bindBuffer(g.ARRAY_BUFFER,e.__webglSkinWeightsBuffer);g.vertexAttribPointer(b.skinWeight,4,g.FLOAT,false,0,0)}}if(f instanceof THREE.Mesh){if(d.wireframe){d=d.wireframeLinewidth;if(d!==Ma){g.lineWidth(d);Ma=d}a&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer);g.drawElements(g.LINES,e.__webglLineCount,g.UNSIGNED_SHORT,0)}else{a&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,
e.__webglFaceBuffer);g.drawElements(g.TRIANGLES,e.__webglFaceCount,g.UNSIGNED_SHORT,0)}P.info.render.calls++;P.info.render.vertices=P.info.render.vertices+e.__webglFaceCount;P.info.render.faces=P.info.render.faces+e.__webglFaceCount/3}else if(f instanceof THREE.Line){f=f.type===THREE.LineStrip?g.LINE_STRIP:g.LINES;d=d.linewidth;if(d!==Ma){g.lineWidth(d);Ma=d}g.drawArrays(f,0,e.__webglLineCount);P.info.render.calls++}else if(f instanceof THREE.ParticleSystem){g.drawArrays(g.POINTS,0,e.__webglParticleCount);
P.info.render.calls++;P.info.render.points=P.info.render.points+e.__webglParticleCount}else if(f instanceof THREE.Ribbon){g.drawArrays(g.TRIANGLE_STRIP,0,e.__webglVertexCount);P.info.render.calls++}}};this.render=function(a,b,c,d){if(b instanceof THREE.Camera===false)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,h,k,l=a.__lights,o=a.fog;K=-1;eb=true;this.autoUpdateScene&&a.updateMatrixWorld();b.parent===void 0&&b.updateMatrixWorld();if(!b._viewMatrixArray)b._viewMatrixArray=
new Float32Array(16);if(!b._projectionMatrixArray)b._projectionMatrixArray=new Float32Array(16);b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);b.projectionMatrix.flattenToArray(b._projectionMatrixArray);db.multiply(b.projectionMatrix,b.matrixWorldInverse);cb.setFromMatrix(db);this.autoUpdateObjects&&this.initWebGLObjects(a);j(this.renderPluginsPre,a,b);P.info.render.calls=0;P.info.render.vertices=0;P.info.render.faces=0;P.info.render.points=
0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);k=a.__webglObjects;d=0;for(e=k.length;d<e;d++){f=k[d];h=f.object;f.render=false;if(h.visible&&(!(h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem)||!h.frustumCulled||cb.contains(h))){x(h,b);var p=f,r=p.object,s=p.buffer,u=void 0,u=u=void 0,u=r.material;if(u instanceof THREE.MeshFaceMaterial){u=s.materialIndex;if(u>=0){u=r.geometry.materials[u];if(u.transparent){p.transparent=
u;p.opaque=null}else{p.opaque=u;p.transparent=null}}}else if(u)if(u.transparent){p.transparent=u;p.opaque=null}else{p.opaque=u;p.transparent=null}f.render=true;if(this.sortObjects===true)if(h.renderDepth!==null)f.z=h.renderDepth;else{Oa.copy(h.matrixWorld.getPosition());db.multiplyVector3(Oa);f.z=Oa.z}}}this.sortObjects&&k.sort(i);k=a.__webglObjectsImmediate;d=0;for(e=k.length;d<e;d++){f=k[d];h=f.object;if(h.visible){x(h,b);h=f.object.material;if(h.transparent){f.transparent=h;f.opaque=null}else{f.opaque=
h;f.transparent=null}}}if(a.overrideMaterial){d=a.overrideMaterial;this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst);this.setDepthTest(d.depthTest);this.setDepthWrite(d.depthWrite);y(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits);n(a.__webglObjects,false,"",b,l,o,true,d);m(a.__webglObjectsImmediate,"",b,l,o,false,d)}else{this.setBlending(THREE.NormalBlending);n(a.__webglObjects,true,"opaque",b,l,o,false);m(a.__webglObjectsImmediate,"opaque",b,l,o,false);n(a.__webglObjects,
false,"transparent",b,l,o,true);m(a.__webglObjectsImmediate,"transparent",b,l,o,true)}j(this.renderPluginsPost,a,b);if(c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)if(c instanceof THREE.WebGLRenderTargetCube){g.bindTexture(g.TEXTURE_CUBE_MAP,c.__webglTexture);g.generateMipmap(g.TEXTURE_CUBE_MAP);g.bindTexture(g.TEXTURE_CUBE_MAP,null)}else{g.bindTexture(g.TEXTURE_2D,c.__webglTexture);g.generateMipmap(g.TEXTURE_2D);g.bindTexture(g.TEXTURE_2D,null)}this.setDepthTest(true);
this.setDepthWrite(true)}};this.renderImmediateObject=function(a,b,c,d,e){var f=D(a,b,c,d,e);U=-1;P.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,g,cb):e.render(function(a){P.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){if(!a.__webglObjects){a.__webglObjects=[];a.__webglObjectsImmediate=[];a.__webglSprites=[];a.__webglFlares=[]}for(;a.__objectsAdded.length;){var i=a.__objectsAdded[0],j=a,l=void 0,m=void 0,n=void 0;if(!i.__webglInit){i.__webglInit=true;
i._modelViewMatrix=new THREE.Matrix4;i._normalMatrix=new THREE.Matrix3;if(i instanceof THREE.Mesh){m=i.geometry;if(m instanceof THREE.Geometry){if(m.geometryGroups===void 0){var v=m,x=void 0,y=void 0,z=void 0,A=void 0,B=void 0,C=void 0,D=void 0,G={},I=v.morphTargets.length,O=v.morphNormals.length;v.geometryGroups={};x=0;for(y=v.faces.length;x<y;x++){z=v.faces[x];A=z.materialIndex;C=A!==void 0?A:-1;G[C]===void 0&&(G[C]={hash:C,counter:0});D=G[C].hash+"_"+G[C].counter;v.geometryGroups[D]===void 0&&
(v.geometryGroups[D]={faces3:[],faces4:[],materialIndex:A,vertices:0,numMorphTargets:I,numMorphNormals:O});B=z instanceof THREE.Face3?3:4;if(v.geometryGroups[D].vertices+B>65535){G[C].counter=G[C].counter+1;D=G[C].hash+"_"+G[C].counter;v.geometryGroups[D]===void 0&&(v.geometryGroups[D]={faces3:[],faces4:[],materialIndex:A,vertices:0,numMorphTargets:I,numMorphNormals:O})}z instanceof THREE.Face3?v.geometryGroups[D].faces3.push(x):v.geometryGroups[D].faces4.push(x);v.geometryGroups[D].vertices=v.geometryGroups[D].vertices+
B}v.geometryGroupsList=[];var J=void 0;for(J in v.geometryGroups){v.geometryGroups[J].id=Ha++;v.geometryGroupsList.push(v.geometryGroups[J])}}for(l in m.geometryGroups){n=m.geometryGroups[l];if(!n.__webglVertexBuffer){var F=n;F.__webglVertexBuffer=g.createBuffer();F.__webglNormalBuffer=g.createBuffer();F.__webglTangentBuffer=g.createBuffer();F.__webglColorBuffer=g.createBuffer();F.__webglUVBuffer=g.createBuffer();F.__webglUV2Buffer=g.createBuffer();F.__webglSkinIndicesBuffer=g.createBuffer();F.__webglSkinWeightsBuffer=
g.createBuffer();F.__webglFaceBuffer=g.createBuffer();F.__webglLineBuffer=g.createBuffer();var K=void 0,Q=void 0;if(F.numMorphTargets){F.__webglMorphTargetsBuffers=[];K=0;for(Q=F.numMorphTargets;K<Q;K++)F.__webglMorphTargetsBuffers.push(g.createBuffer())}if(F.numMorphNormals){F.__webglMorphNormalsBuffers=[];K=0;for(Q=F.numMorphNormals;K<Q;K++)F.__webglMorphNormalsBuffers.push(g.createBuffer())}P.info.memory.geometries++;var E=n,S=i,T=S.geometry,U=E.faces3,X=E.faces4,Y=U.length*3+X.length*4,ca=U.length*
1+X.length*2,da=U.length*3+X.length*4,ba=c(S,E),fa=f(ba),ga=d(ba),ma=ba.vertexColors?ba.vertexColors:false;E.__vertexArray=new Float32Array(Y*3);if(ga)E.__normalArray=new Float32Array(Y*3);if(T.hasTangents)E.__tangentArray=new Float32Array(Y*4);if(ma)E.__colorArray=new Float32Array(Y*3);if(fa){if(T.faceUvs.length>0||T.faceVertexUvs.length>0)E.__uvArray=new Float32Array(Y*2);if(T.faceUvs.length>1||T.faceVertexUvs.length>1)E.__uv2Array=new Float32Array(Y*2)}if(S.geometry.skinWeights.length&&S.geometry.skinIndices.length){E.__skinIndexArray=
new Float32Array(Y*4);E.__skinWeightArray=new Float32Array(Y*4)}E.__faceArray=new Uint16Array(ca*3);E.__lineArray=new Uint16Array(da*2);var ha=void 0,ra=void 0;if(E.numMorphTargets){E.__morphTargetsArrays=[];ha=0;for(ra=E.numMorphTargets;ha<ra;ha++)E.__morphTargetsArrays.push(new Float32Array(Y*3))}if(E.numMorphNormals){E.__morphNormalsArrays=[];ha=0;for(ra=E.numMorphNormals;ha<ra;ha++)E.__morphNormalsArrays.push(new Float32Array(Y*3))}E.__webglFaceCount=ca*3;E.__webglLineCount=da*2;if(ba.attributes){if(E.__webglCustomAttributesList===
void 0)E.__webglCustomAttributesList=[];var ya=void 0;for(ya in ba.attributes){var xa=ba.attributes[ya],ka={},Ea;for(Ea in xa)ka[Ea]=xa[Ea];if(!ka.__webglInitialized||ka.createUniqueBuffers){ka.__webglInitialized=true;var va=1;ka.type==="v2"?va=2:ka.type==="v3"?va=3:ka.type==="v4"?va=4:ka.type==="c"&&(va=3);ka.size=va;ka.array=new Float32Array(Y*va);ka.buffer=g.createBuffer();ka.buffer.belongsToAttribute=ya;xa.needsUpdate=true;ka.__original=xa}E.__webglCustomAttributesList.push(ka)}}E.__inittedArrays=
true;m.verticesNeedUpdate=true;m.morphTargetsNeedUpdate=true;m.elementsNeedUpdate=true;m.uvsNeedUpdate=true;m.normalsNeedUpdate=true;m.tangentsNeedUpdate=true;m.colorsNeedUpdate=true}}}else m instanceof THREE.BufferGeometry&&e(m)}else if(i instanceof THREE.Ribbon){m=i.geometry;if(!m.__webglVertexBuffer){var Ka=m;Ka.__webglVertexBuffer=g.createBuffer();Ka.__webglColorBuffer=g.createBuffer();P.info.memory.geometries++;var Fa=m,Ma=Fa.vertices.length;Fa.__vertexArray=new Float32Array(Ma*3);Fa.__colorArray=
new Float32Array(Ma*3);Fa.__webglVertexCount=Ma;m.verticesNeedUpdate=true;m.colorsNeedUpdate=true}}else if(i instanceof THREE.Line){m=i.geometry;if(!m.__webglVertexBuffer){var Oa=m;Oa.__webglVertexBuffer=g.createBuffer();Oa.__webglColorBuffer=g.createBuffer();P.info.memory.geometries++;var La=m,Va=i,Ra=La.vertices.length;La.__vertexArray=new Float32Array(Ra*3);La.__colorArray=new Float32Array(Ra*3);La.__webglLineCount=Ra;b(La,Va);m.verticesNeedUpdate=true;m.colorsNeedUpdate=true}}else if(i instanceof
THREE.ParticleSystem){m=i.geometry;if(!m.__webglVertexBuffer)if(m instanceof THREE.Geometry){var $a=m;$a.__webglVertexBuffer=g.createBuffer();$a.__webglColorBuffer=g.createBuffer();P.info.memory.geometries++;var ab=m,ob=i,ib=ab.vertices.length;ab.__vertexArray=new Float32Array(ib*3);ab.__colorArray=new Float32Array(ib*3);ab.__sortArray=[];ab.__webglParticleCount=ib;b(ab,ob);m.verticesNeedUpdate=true;m.colorsNeedUpdate=true}else m instanceof THREE.BufferGeometry&&e(m)}}if(!i.__webglActive){if(i instanceof
THREE.Mesh){m=i.geometry;if(m instanceof THREE.BufferGeometry)s(j.__webglObjects,m,i);else for(l in m.geometryGroups){n=m.geometryGroups[l];s(j.__webglObjects,n,i)}}else if(i instanceof THREE.Ribbon||i instanceof THREE.Line||i instanceof THREE.ParticleSystem){m=i.geometry;s(j.__webglObjects,m,i)}else i instanceof THREE.ImmediateRenderObject||i.immediateRenderCallback?j.__webglObjectsImmediate.push({object:i,opaque:null,transparent:null}):i instanceof THREE.Sprite?j.__webglSprites.push(i):i instanceof
THREE.LensFlare&&j.__webglFlares.push(i);i.__webglActive=true}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var qb=a.__objectsRemoved[0],eb=a;qb instanceof THREE.Mesh||qb instanceof THREE.ParticleSystem||qb instanceof THREE.Ribbon||qb instanceof THREE.Line?r(eb.__webglObjects,qb):qb instanceof THREE.Sprite?u(eb.__webglSprites,qb):qb instanceof THREE.LensFlare?u(eb.__webglFlares,qb):(qb instanceof THREE.ImmediateRenderObject||qb.immediateRenderCallback)&&r(eb.__webglObjectsImmediate,
qb);qb.__webglActive=false;a.__objectsRemoved.splice(0,1)}for(var mb=0,vb=a.__webglObjects.length;mb<vb;mb++){var wb=a.__webglObjects[mb].object,aa=wb.geometry,db=void 0,cb=void 0,fb=void 0;if(wb instanceof THREE.Mesh)if(aa instanceof THREE.BufferGeometry){(aa.verticesNeedUpdate||aa.elementsNeedUpdate||aa.uvsNeedUpdate||aa.normalsNeedUpdate||aa.colorsNeedUpdate||aa.tangentsNeedUpdate)&&k(aa,g.DYNAMIC_DRAW,!aa.dynamic);aa.verticesNeedUpdate=false;aa.elementsNeedUpdate=false;aa.uvsNeedUpdate=false;
aa.normalsNeedUpdate=false;aa.colorsNeedUpdate=false;aa.tangentsNeedUpdate=false}else{for(var ub=0,yb=aa.geometryGroupsList.length;ub<yb;ub++){db=aa.geometryGroupsList[ub];fb=c(wb,db);cb=fb.attributes&&p(fb);if(aa.verticesNeedUpdate||aa.morphTargetsNeedUpdate||aa.elementsNeedUpdate||aa.uvsNeedUpdate||aa.normalsNeedUpdate||aa.colorsNeedUpdate||aa.tangentsNeedUpdate||cb){var la=db,zb=wb,rb=g.DYNAMIC_DRAW,Ab=!aa.dynamic,jb=fb;if(la.__inittedArrays){var Rb=d(jb),gc=jb.vertexColors?jb.vertexColors:false,
jc=f(jb),Fc=Rb===THREE.SmoothShading,w=void 0,R=void 0,Zb=void 0,H=void 0,kc=void 0,$b=void 0,xb=void 0,Gc=void 0,Sb=void 0,lc=void 0,mc=void 0,L=void 0,M=void 0,N=void 0,ia=void 0,Bb=void 0,Cb=void 0,Db=void 0,sc=void 0,Eb=void 0,Fb=void 0,Gb=void 0,tc=void 0,Hb=void 0,Ib=void 0,Jb=void 0,uc=void 0,Kb=void 0,Lb=void 0,Mb=void 0,vc=void 0,Nb=void 0,Ob=void 0,Pb=void 0,wc=void 0,sa=void 0,qc=void 0,ac=void 0,nc=void 0,oc=void 0,Sa=void 0,rc=void 0,Pa=void 0,Qa=void 0,bc=void 0,Tb=void 0,Ga=0,Na=0,
Ub=0,Vb=0,sb=0,Ya=0,ua=0,bb=0,Ja=0,Z=0,ea=0,t=0,ta=void 0,Ta=la.__vertexArray,xc=la.__uvArray,yc=la.__uv2Array,tb=la.__normalArray,za=la.__tangentArray,Ua=la.__colorArray,Aa=la.__skinIndexArray,Ba=la.__skinWeightArray,Uc=la.__morphTargetsArrays,Vc=la.__morphNormalsArrays,Wc=la.__webglCustomAttributesList,q=void 0,Qb=la.__faceArray,lb=la.__lineArray,gb=zb.geometry,Dc=gb.elementsNeedUpdate,ad=gb.uvsNeedUpdate,Rc=gb.normalsNeedUpdate,Sc=gb.tangentsNeedUpdate,hd=gb.colorsNeedUpdate,id=gb.morphTargetsNeedUpdate,
hc=gb.vertices,na=la.faces3,oa=la.faces4,Za=gb.faces,Xc=gb.faceVertexUvs[0],Yc=gb.faceVertexUvs[1],ic=gb.skinIndices,cc=gb.skinWeights,dc=gb.morphTargets,Hc=gb.morphNormals;if(gb.verticesNeedUpdate){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];L=hc[H.a];M=hc[H.b];N=hc[H.c];Ta[Na]=L.x;Ta[Na+1]=L.y;Ta[Na+2]=L.z;Ta[Na+3]=M.x;Ta[Na+4]=M.y;Ta[Na+5]=M.z;Ta[Na+6]=N.x;Ta[Na+7]=N.y;Ta[Na+8]=N.z;Na=Na+9}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];L=hc[H.a];M=hc[H.b];N=hc[H.c];ia=hc[H.d];Ta[Na]=L.x;Ta[Na+1]=L.y;Ta[Na+
2]=L.z;Ta[Na+3]=M.x;Ta[Na+4]=M.y;Ta[Na+5]=M.z;Ta[Na+6]=N.x;Ta[Na+7]=N.y;Ta[Na+8]=N.z;Ta[Na+9]=ia.x;Ta[Na+10]=ia.y;Ta[Na+11]=ia.z;Na=Na+12}g.bindBuffer(g.ARRAY_BUFFER,la.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,Ta,rb)}if(id){Sa=0;for(rc=dc.length;Sa<rc;Sa++){w=ea=0;for(R=na.length;w<R;w++){bc=na[w];H=Za[bc];L=dc[Sa].vertices[H.a];M=dc[Sa].vertices[H.b];N=dc[Sa].vertices[H.c];Pa=Uc[Sa];Pa[ea]=L.x;Pa[ea+1]=L.y;Pa[ea+2]=L.z;Pa[ea+3]=M.x;Pa[ea+4]=M.y;Pa[ea+5]=M.z;Pa[ea+6]=N.x;Pa[ea+7]=N.y;Pa[ea+
8]=N.z;if(jb.morphNormals){if(Fc){Tb=Hc[Sa].vertexNormals[bc];Eb=Tb.a;Fb=Tb.b;Gb=Tb.c}else Gb=Fb=Eb=Hc[Sa].faceNormals[bc];Qa=Vc[Sa];Qa[ea]=Eb.x;Qa[ea+1]=Eb.y;Qa[ea+2]=Eb.z;Qa[ea+3]=Fb.x;Qa[ea+4]=Fb.y;Qa[ea+5]=Fb.z;Qa[ea+6]=Gb.x;Qa[ea+7]=Gb.y;Qa[ea+8]=Gb.z}ea=ea+9}w=0;for(R=oa.length;w<R;w++){bc=oa[w];H=Za[bc];L=dc[Sa].vertices[H.a];M=dc[Sa].vertices[H.b];N=dc[Sa].vertices[H.c];ia=dc[Sa].vertices[H.d];Pa=Uc[Sa];Pa[ea]=L.x;Pa[ea+1]=L.y;Pa[ea+2]=L.z;Pa[ea+3]=M.x;Pa[ea+4]=M.y;Pa[ea+5]=M.z;Pa[ea+6]=N.x;
Pa[ea+7]=N.y;Pa[ea+8]=N.z;Pa[ea+9]=ia.x;Pa[ea+10]=ia.y;Pa[ea+11]=ia.z;if(jb.morphNormals){if(Fc){Tb=Hc[Sa].vertexNormals[bc];Eb=Tb.a;Fb=Tb.b;Gb=Tb.c;tc=Tb.d}else tc=Gb=Fb=Eb=Hc[Sa].faceNormals[bc];Qa=Vc[Sa];Qa[ea]=Eb.x;Qa[ea+1]=Eb.y;Qa[ea+2]=Eb.z;Qa[ea+3]=Fb.x;Qa[ea+4]=Fb.y;Qa[ea+5]=Fb.z;Qa[ea+6]=Gb.x;Qa[ea+7]=Gb.y;Qa[ea+8]=Gb.z;Qa[ea+9]=tc.x;Qa[ea+10]=tc.y;Qa[ea+11]=tc.z}ea=ea+12}g.bindBuffer(g.ARRAY_BUFFER,la.__webglMorphTargetsBuffers[Sa]);g.bufferData(g.ARRAY_BUFFER,Uc[Sa],rb);if(jb.morphNormals){g.bindBuffer(g.ARRAY_BUFFER,
la.__webglMorphNormalsBuffers[Sa]);g.bufferData(g.ARRAY_BUFFER,Vc[Sa],rb)}}}if(cc.length){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];Kb=cc[H.a];Lb=cc[H.b];Mb=cc[H.c];Ba[Z]=Kb.x;Ba[Z+1]=Kb.y;Ba[Z+2]=Kb.z;Ba[Z+3]=Kb.w;Ba[Z+4]=Lb.x;Ba[Z+5]=Lb.y;Ba[Z+6]=Lb.z;Ba[Z+7]=Lb.w;Ba[Z+8]=Mb.x;Ba[Z+9]=Mb.y;Ba[Z+10]=Mb.z;Ba[Z+11]=Mb.w;Nb=ic[H.a];Ob=ic[H.b];Pb=ic[H.c];Aa[Z]=Nb.x;Aa[Z+1]=Nb.y;Aa[Z+2]=Nb.z;Aa[Z+3]=Nb.w;Aa[Z+4]=Ob.x;Aa[Z+5]=Ob.y;Aa[Z+6]=Ob.z;Aa[Z+7]=Ob.w;Aa[Z+8]=Pb.x;Aa[Z+9]=Pb.y;Aa[Z+10]=Pb.z;Aa[Z+11]=
Pb.w;Z=Z+12}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];Kb=cc[H.a];Lb=cc[H.b];Mb=cc[H.c];vc=cc[H.d];Ba[Z]=Kb.x;Ba[Z+1]=Kb.y;Ba[Z+2]=Kb.z;Ba[Z+3]=Kb.w;Ba[Z+4]=Lb.x;Ba[Z+5]=Lb.y;Ba[Z+6]=Lb.z;Ba[Z+7]=Lb.w;Ba[Z+8]=Mb.x;Ba[Z+9]=Mb.y;Ba[Z+10]=Mb.z;Ba[Z+11]=Mb.w;Ba[Z+12]=vc.x;Ba[Z+13]=vc.y;Ba[Z+14]=vc.z;Ba[Z+15]=vc.w;Nb=ic[H.a];Ob=ic[H.b];Pb=ic[H.c];wc=ic[H.d];Aa[Z]=Nb.x;Aa[Z+1]=Nb.y;Aa[Z+2]=Nb.z;Aa[Z+3]=Nb.w;Aa[Z+4]=Ob.x;Aa[Z+5]=Ob.y;Aa[Z+6]=Ob.z;Aa[Z+7]=Ob.w;Aa[Z+8]=Pb.x;Aa[Z+9]=Pb.y;Aa[Z+10]=Pb.z;Aa[Z+11]=
Pb.w;Aa[Z+12]=wc.x;Aa[Z+13]=wc.y;Aa[Z+14]=wc.z;Aa[Z+15]=wc.w;Z=Z+16}if(Z>0){g.bindBuffer(g.ARRAY_BUFFER,la.__webglSkinIndicesBuffer);g.bufferData(g.ARRAY_BUFFER,Aa,rb);g.bindBuffer(g.ARRAY_BUFFER,la.__webglSkinWeightsBuffer);g.bufferData(g.ARRAY_BUFFER,Ba,rb)}}if(hd&&gc){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];xb=H.vertexColors;Gc=H.color;if(xb.length===3&&gc===THREE.VertexColors){Hb=xb[0];Ib=xb[1];Jb=xb[2]}else Jb=Ib=Hb=Gc;Ua[Ja]=Hb.r;Ua[Ja+1]=Hb.g;Ua[Ja+2]=Hb.b;Ua[Ja+3]=Ib.r;Ua[Ja+4]=Ib.g;Ua[Ja+
5]=Ib.b;Ua[Ja+6]=Jb.r;Ua[Ja+7]=Jb.g;Ua[Ja+8]=Jb.b;Ja=Ja+9}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];xb=H.vertexColors;Gc=H.color;if(xb.length===4&&gc===THREE.VertexColors){Hb=xb[0];Ib=xb[1];Jb=xb[2];uc=xb[3]}else uc=Jb=Ib=Hb=Gc;Ua[Ja]=Hb.r;Ua[Ja+1]=Hb.g;Ua[Ja+2]=Hb.b;Ua[Ja+3]=Ib.r;Ua[Ja+4]=Ib.g;Ua[Ja+5]=Ib.b;Ua[Ja+6]=Jb.r;Ua[Ja+7]=Jb.g;Ua[Ja+8]=Jb.b;Ua[Ja+9]=uc.r;Ua[Ja+10]=uc.g;Ua[Ja+11]=uc.b;Ja=Ja+12}if(Ja>0){g.bindBuffer(g.ARRAY_BUFFER,la.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,Ua,rb)}}if(Sc&&
gb.hasTangents){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];Sb=H.vertexTangents;Bb=Sb[0];Cb=Sb[1];Db=Sb[2];za[ua]=Bb.x;za[ua+1]=Bb.y;za[ua+2]=Bb.z;za[ua+3]=Bb.w;za[ua+4]=Cb.x;za[ua+5]=Cb.y;za[ua+6]=Cb.z;za[ua+7]=Cb.w;za[ua+8]=Db.x;za[ua+9]=Db.y;za[ua+10]=Db.z;za[ua+11]=Db.w;ua=ua+12}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];Sb=H.vertexTangents;Bb=Sb[0];Cb=Sb[1];Db=Sb[2];sc=Sb[3];za[ua]=Bb.x;za[ua+1]=Bb.y;za[ua+2]=Bb.z;za[ua+3]=Bb.w;za[ua+4]=Cb.x;za[ua+5]=Cb.y;za[ua+6]=Cb.z;za[ua+7]=Cb.w;za[ua+8]=Db.x;
za[ua+9]=Db.y;za[ua+10]=Db.z;za[ua+11]=Db.w;za[ua+12]=sc.x;za[ua+13]=sc.y;za[ua+14]=sc.z;za[ua+15]=sc.w;ua=ua+16}g.bindBuffer(g.ARRAY_BUFFER,la.__webglTangentBuffer);g.bufferData(g.ARRAY_BUFFER,za,rb)}if(Rc&&Rb){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];kc=H.vertexNormals;$b=H.normal;if(kc.length===3&&Fc)for(sa=0;sa<3;sa++){ac=kc[sa];tb[Ya]=ac.x;tb[Ya+1]=ac.y;tb[Ya+2]=ac.z;Ya=Ya+3}else for(sa=0;sa<3;sa++){tb[Ya]=$b.x;tb[Ya+1]=$b.y;tb[Ya+2]=$b.z;Ya=Ya+3}}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];kc=
H.vertexNormals;$b=H.normal;if(kc.length===4&&Fc)for(sa=0;sa<4;sa++){ac=kc[sa];tb[Ya]=ac.x;tb[Ya+1]=ac.y;tb[Ya+2]=ac.z;Ya=Ya+3}else for(sa=0;sa<4;sa++){tb[Ya]=$b.x;tb[Ya+1]=$b.y;tb[Ya+2]=$b.z;Ya=Ya+3}}g.bindBuffer(g.ARRAY_BUFFER,la.__webglNormalBuffer);g.bufferData(g.ARRAY_BUFFER,tb,rb)}if(ad&&Xc&&jc){w=0;for(R=na.length;w<R;w++){Zb=na[w];lc=Xc[Zb];if(lc!==void 0)for(sa=0;sa<3;sa++){nc=lc[sa];xc[Ub]=nc.u;xc[Ub+1]=nc.v;Ub=Ub+2}}w=0;for(R=oa.length;w<R;w++){Zb=oa[w];lc=Xc[Zb];if(lc!==void 0)for(sa=
0;sa<4;sa++){nc=lc[sa];xc[Ub]=nc.u;xc[Ub+1]=nc.v;Ub=Ub+2}}if(Ub>0){g.bindBuffer(g.ARRAY_BUFFER,la.__webglUVBuffer);g.bufferData(g.ARRAY_BUFFER,xc,rb)}}if(ad&&Yc&&jc){w=0;for(R=na.length;w<R;w++){Zb=na[w];mc=Yc[Zb];if(mc!==void 0)for(sa=0;sa<3;sa++){oc=mc[sa];yc[Vb]=oc.u;yc[Vb+1]=oc.v;Vb=Vb+2}}w=0;for(R=oa.length;w<R;w++){Zb=oa[w];mc=Yc[Zb];if(mc!==void 0)for(sa=0;sa<4;sa++){oc=mc[sa];yc[Vb]=oc.u;yc[Vb+1]=oc.v;Vb=Vb+2}}if(Vb>0){g.bindBuffer(g.ARRAY_BUFFER,la.__webglUV2Buffer);g.bufferData(g.ARRAY_BUFFER,
yc,rb)}}if(Dc){w=0;for(R=na.length;w<R;w++){Qb[sb]=Ga;Qb[sb+1]=Ga+1;Qb[sb+2]=Ga+2;sb=sb+3;lb[bb]=Ga;lb[bb+1]=Ga+1;lb[bb+2]=Ga;lb[bb+3]=Ga+2;lb[bb+4]=Ga+1;lb[bb+5]=Ga+2;bb=bb+6;Ga=Ga+3}w=0;for(R=oa.length;w<R;w++){Qb[sb]=Ga;Qb[sb+1]=Ga+1;Qb[sb+2]=Ga+3;Qb[sb+3]=Ga+1;Qb[sb+4]=Ga+2;Qb[sb+5]=Ga+3;sb=sb+6;lb[bb]=Ga;lb[bb+1]=Ga+1;lb[bb+2]=Ga;lb[bb+3]=Ga+3;lb[bb+4]=Ga+1;lb[bb+5]=Ga+2;lb[bb+6]=Ga+2;lb[bb+7]=Ga+3;bb=bb+8;Ga=Ga+4}g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,la.__webglFaceBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,
Qb,rb);g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,la.__webglLineBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,lb,rb)}if(Wc){sa=0;for(qc=Wc.length;sa<qc;sa++){q=Wc[sa];if(q.__original.needsUpdate){t=0;if(q.size===1)if(q.boundTo===void 0||q.boundTo==="vertices"){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];q.array[t]=q.value[H.a];q.array[t+1]=q.value[H.b];q.array[t+2]=q.value[H.c];t=t+3}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];q.array[t]=q.value[H.a];q.array[t+1]=q.value[H.b];q.array[t+2]=q.value[H.c];q.array[t+
3]=q.value[H.d];t=t+4}}else{if(q.boundTo==="faces"){w=0;for(R=na.length;w<R;w++){ta=q.value[na[w]];q.array[t]=ta;q.array[t+1]=ta;q.array[t+2]=ta;t=t+3}w=0;for(R=oa.length;w<R;w++){ta=q.value[oa[w]];q.array[t]=ta;q.array[t+1]=ta;q.array[t+2]=ta;q.array[t+3]=ta;t=t+4}}}else if(q.size===2)if(q.boundTo===void 0||q.boundTo==="vertices"){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];L=q.value[H.a];M=q.value[H.b];N=q.value[H.c];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=M.x;q.array[t+3]=M.y;q.array[t+4]=N.x;
q.array[t+5]=N.y;t=t+6}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];L=q.value[H.a];M=q.value[H.b];N=q.value[H.c];ia=q.value[H.d];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=M.x;q.array[t+3]=M.y;q.array[t+4]=N.x;q.array[t+5]=N.y;q.array[t+6]=ia.x;q.array[t+7]=ia.y;t=t+8}}else{if(q.boundTo==="faces"){w=0;for(R=na.length;w<R;w++){N=M=L=ta=q.value[na[w]];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=M.x;q.array[t+3]=M.y;q.array[t+4]=N.x;q.array[t+5]=N.y;t=t+6}w=0;for(R=oa.length;w<R;w++){ia=N=M=L=ta=q.value[oa[w]];
q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=M.x;q.array[t+3]=M.y;q.array[t+4]=N.x;q.array[t+5]=N.y;q.array[t+6]=ia.x;q.array[t+7]=ia.y;t=t+8}}}else if(q.size===3){var W;W=q.type==="c"?["r","g","b"]:["x","y","z"];if(q.boundTo===void 0||q.boundTo==="vertices"){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];L=q.value[H.a];M=q.value[H.b];N=q.value[H.c];q.array[t]=L[W[0]];q.array[t+1]=L[W[1]];q.array[t+2]=L[W[2]];q.array[t+3]=M[W[0]];q.array[t+4]=M[W[1]];q.array[t+5]=M[W[2]];q.array[t+6]=N[W[0]];q.array[t+
7]=N[W[1]];q.array[t+8]=N[W[2]];t=t+9}w=0;for(R=oa.length;w<R;w++){H=Za[oa[w]];L=q.value[H.a];M=q.value[H.b];N=q.value[H.c];ia=q.value[H.d];q.array[t]=L[W[0]];q.array[t+1]=L[W[1]];q.array[t+2]=L[W[2]];q.array[t+3]=M[W[0]];q.array[t+4]=M[W[1]];q.array[t+5]=M[W[2]];q.array[t+6]=N[W[0]];q.array[t+7]=N[W[1]];q.array[t+8]=N[W[2]];q.array[t+9]=ia[W[0]];q.array[t+10]=ia[W[1]];q.array[t+11]=ia[W[2]];t=t+12}}else if(q.boundTo==="faces"){w=0;for(R=na.length;w<R;w++){N=M=L=ta=q.value[na[w]];q.array[t]=L[W[0]];
q.array[t+1]=L[W[1]];q.array[t+2]=L[W[2]];q.array[t+3]=M[W[0]];q.array[t+4]=M[W[1]];q.array[t+5]=M[W[2]];q.array[t+6]=N[W[0]];q.array[t+7]=N[W[1]];q.array[t+8]=N[W[2]];t=t+9}w=0;for(R=oa.length;w<R;w++){ia=N=M=L=ta=q.value[oa[w]];q.array[t]=L[W[0]];q.array[t+1]=L[W[1]];q.array[t+2]=L[W[2]];q.array[t+3]=M[W[0]];q.array[t+4]=M[W[1]];q.array[t+5]=M[W[2]];q.array[t+6]=N[W[0]];q.array[t+7]=N[W[1]];q.array[t+8]=N[W[2]];q.array[t+9]=ia[W[0]];q.array[t+10]=ia[W[1]];q.array[t+11]=ia[W[2]];t=t+12}}else if(q.boundTo===
"faceVertices"){w=0;for(R=na.length;w<R;w++){ta=q.value[na[w]];L=ta[0];M=ta[1];N=ta[2];q.array[t]=L[W[0]];q.array[t+1]=L[W[1]];q.array[t+2]=L[W[2]];q.array[t+3]=M[W[0]];q.array[t+4]=M[W[1]];q.array[t+5]=M[W[2]];q.array[t+6]=N[W[0]];q.array[t+7]=N[W[1]];q.array[t+8]=N[W[2]];t=t+9}w=0;for(R=oa.length;w<R;w++){ta=q.value[oa[w]];L=ta[0];M=ta[1];N=ta[2];ia=ta[3];q.array[t]=L[W[0]];q.array[t+1]=L[W[1]];q.array[t+2]=L[W[2]];q.array[t+3]=M[W[0]];q.array[t+4]=M[W[1]];q.array[t+5]=M[W[2]];q.array[t+6]=N[W[0]];
q.array[t+7]=N[W[1]];q.array[t+8]=N[W[2]];q.array[t+9]=ia[W[0]];q.array[t+10]=ia[W[1]];q.array[t+11]=ia[W[2]];t=t+12}}}else if(q.size===4)if(q.boundTo===void 0||q.boundTo==="vertices"){w=0;for(R=na.length;w<R;w++){H=Za[na[w]];L=q.value[H.a];M=q.value[H.b];N=q.value[H.c];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=L.z;q.array[t+3]=L.w;q.array[t+4]=M.x;q.array[t+5]=M.y;q.array[t+6]=M.z;q.array[t+7]=M.w;q.array[t+8]=N.x;q.array[t+9]=N.y;q.array[t+10]=N.z;q.array[t+11]=N.w;t=t+12}w=0;for(R=oa.length;w<
R;w++){H=Za[oa[w]];L=q.value[H.a];M=q.value[H.b];N=q.value[H.c];ia=q.value[H.d];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=L.z;q.array[t+3]=L.w;q.array[t+4]=M.x;q.array[t+5]=M.y;q.array[t+6]=M.z;q.array[t+7]=M.w;q.array[t+8]=N.x;q.array[t+9]=N.y;q.array[t+10]=N.z;q.array[t+11]=N.w;q.array[t+12]=ia.x;q.array[t+13]=ia.y;q.array[t+14]=ia.z;q.array[t+15]=ia.w;t=t+16}}else if(q.boundTo==="faces"){w=0;for(R=na.length;w<R;w++){N=M=L=ta=q.value[na[w]];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=L.z;q.array[t+
3]=L.w;q.array[t+4]=M.x;q.array[t+5]=M.y;q.array[t+6]=M.z;q.array[t+7]=M.w;q.array[t+8]=N.x;q.array[t+9]=N.y;q.array[t+10]=N.z;q.array[t+11]=N.w;t=t+12}w=0;for(R=oa.length;w<R;w++){ia=N=M=L=ta=q.value[oa[w]];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=L.z;q.array[t+3]=L.w;q.array[t+4]=M.x;q.array[t+5]=M.y;q.array[t+6]=M.z;q.array[t+7]=M.w;q.array[t+8]=N.x;q.array[t+9]=N.y;q.array[t+10]=N.z;q.array[t+11]=N.w;q.array[t+12]=ia.x;q.array[t+13]=ia.y;q.array[t+14]=ia.z;q.array[t+15]=ia.w;t=t+16}}else if(q.boundTo===
"faceVertices"){w=0;for(R=na.length;w<R;w++){ta=q.value[na[w]];L=ta[0];M=ta[1];N=ta[2];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=L.z;q.array[t+3]=L.w;q.array[t+4]=M.x;q.array[t+5]=M.y;q.array[t+6]=M.z;q.array[t+7]=M.w;q.array[t+8]=N.x;q.array[t+9]=N.y;q.array[t+10]=N.z;q.array[t+11]=N.w;t=t+12}w=0;for(R=oa.length;w<R;w++){ta=q.value[oa[w]];L=ta[0];M=ta[1];N=ta[2];ia=ta[3];q.array[t]=L.x;q.array[t+1]=L.y;q.array[t+2]=L.z;q.array[t+3]=L.w;q.array[t+4]=M.x;q.array[t+5]=M.y;q.array[t+6]=M.z;q.array[t+
7]=M.w;q.array[t+8]=N.x;q.array[t+9]=N.y;q.array[t+10]=N.z;q.array[t+11]=N.w;q.array[t+12]=ia.x;q.array[t+13]=ia.y;q.array[t+14]=ia.z;q.array[t+15]=ia.w;t=t+16}}g.bindBuffer(g.ARRAY_BUFFER,q.buffer);g.bufferData(g.ARRAY_BUFFER,q.array,rb)}}}if(Ab){delete la.__inittedArrays;delete la.__colorArray;delete la.__normalArray;delete la.__tangentArray;delete la.__uvArray;delete la.__uv2Array;delete la.__faceArray;delete la.__vertexArray;delete la.__lineArray;delete la.__skinIndexArray;delete la.__skinWeightArray}}}}aa.verticesNeedUpdate=
false;aa.morphTargetsNeedUpdate=false;aa.elementsNeedUpdate=false;aa.uvsNeedUpdate=false;aa.normalsNeedUpdate=false;aa.colorsNeedUpdate=false;aa.tangentsNeedUpdate=false;fb.attributes&&o(fb)}else if(wb instanceof THREE.Ribbon){if(aa.verticesNeedUpdate||aa.colorsNeedUpdate){var ec=aa,bd=g.DYNAMIC_DRAW,zc=void 0,Ac=void 0,Ic=void 0,fc=void 0,Jc=void 0,cd=ec.vertices,dd=ec.colors,jd=cd.length,kd=dd.length,Kc=ec.__vertexArray,Lc=ec.__colorArray,ld=ec.colorsNeedUpdate;if(ec.verticesNeedUpdate){for(zc=
0;zc<jd;zc++){Ic=cd[zc];fc=zc*3;Kc[fc]=Ic.x;Kc[fc+1]=Ic.y;Kc[fc+2]=Ic.z}g.bindBuffer(g.ARRAY_BUFFER,ec.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,Kc,bd)}if(ld){for(Ac=0;Ac<kd;Ac++){Jc=dd[Ac];fc=Ac*3;Lc[fc]=Jc.r;Lc[fc+1]=Jc.g;Lc[fc+2]=Jc.b}g.bindBuffer(g.ARRAY_BUFFER,ec.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,Lc,bd)}}aa.verticesNeedUpdate=false;aa.colorsNeedUpdate=false}else if(wb instanceof THREE.Line){fb=c(wb,db);cb=fb.attributes&&p(fb);if(aa.verticesNeedUpdate||aa.colorsNeedUpdate||
cb){var Wb=aa,Zc=g.DYNAMIC_DRAW,Bc=void 0,Cc=void 0,Mc=void 0,Ca=void 0,Nc=void 0,ed=Wb.vertices,fd=Wb.colors,md=ed.length,nd=fd.length,Oc=Wb.__vertexArray,Pc=Wb.__colorArray,od=Wb.colorsNeedUpdate,$c=Wb.__webglCustomAttributesList,Qc=void 0,gd=void 0,Xa=void 0,pc=void 0,hb=void 0,wa=void 0;if(Wb.verticesNeedUpdate){for(Bc=0;Bc<md;Bc++){Mc=ed[Bc];Ca=Bc*3;Oc[Ca]=Mc.x;Oc[Ca+1]=Mc.y;Oc[Ca+2]=Mc.z}g.bindBuffer(g.ARRAY_BUFFER,Wb.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,Oc,Zc)}if(od){for(Cc=0;Cc<
nd;Cc++){Nc=fd[Cc];Ca=Cc*3;Pc[Ca]=Nc.r;Pc[Ca+1]=Nc.g;Pc[Ca+2]=Nc.b}g.bindBuffer(g.ARRAY_BUFFER,Wb.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,Pc,Zc)}if($c){Qc=0;for(gd=$c.length;Qc<gd;Qc++){wa=$c[Qc];if(wa.needsUpdate&&(wa.boundTo===void 0||wa.boundTo==="vertices")){Ca=0;pc=wa.value.length;if(wa.size===1)for(Xa=0;Xa<pc;Xa++)wa.array[Xa]=wa.value[Xa];else if(wa.size===2)for(Xa=0;Xa<pc;Xa++){hb=wa.value[Xa];wa.array[Ca]=hb.x;wa.array[Ca+1]=hb.y;Ca=Ca+2}else if(wa.size===3)if(wa.type==="c")for(Xa=
0;Xa<pc;Xa++){hb=wa.value[Xa];wa.array[Ca]=hb.r;wa.array[Ca+1]=hb.g;wa.array[Ca+2]=hb.b;Ca=Ca+3}else for(Xa=0;Xa<pc;Xa++){hb=wa.value[Xa];wa.array[Ca]=hb.x;wa.array[Ca+1]=hb.y;wa.array[Ca+2]=hb.z;Ca=Ca+3}else if(wa.size===4)for(Xa=0;Xa<pc;Xa++){hb=wa.value[Xa];wa.array[Ca]=hb.x;wa.array[Ca+1]=hb.y;wa.array[Ca+2]=hb.z;wa.array[Ca+3]=hb.w;Ca=Ca+4}g.bindBuffer(g.ARRAY_BUFFER,wa.buffer);g.bufferData(g.ARRAY_BUFFER,wa.array,Zc)}}}}aa.verticesNeedUpdate=false;aa.colorsNeedUpdate=false;fb.attributes&&o(fb)}else if(wb instanceof
THREE.ParticleSystem)if(aa instanceof THREE.BufferGeometry){(aa.verticesNeedUpdate||aa.colorsNeedUpdate)&&k(aa,g.DYNAMIC_DRAW,!aa.dynamic);aa.verticesNeedUpdate=false;aa.colorsNeedUpdate=false}else{fb=c(wb,db);cb=fb.attributes&&p(fb);(aa.verticesNeedUpdate||aa.colorsNeedUpdate||wb.sortParticles||cb)&&h(aa,g.DYNAMIC_DRAW,wb);aa.verticesNeedUpdate=false;aa.colorsNeedUpdate=false;fb.attributes&&o(fb)}}};this.initMaterial=function(a,b,c,d){var e,f,h,i,j,k,l,m,n;a instanceof THREE.MeshDepthMaterial?n=
"depth":a instanceof THREE.MeshNormalMaterial?n="normal":a instanceof THREE.MeshBasicMaterial?n="basic":a instanceof THREE.MeshLambertMaterial?n="lambert":a instanceof THREE.MeshPhongMaterial?n="phong":a instanceof THREE.LineBasicMaterial?n="basic":a instanceof THREE.ParticleBasicMaterial&&(n="particle_basic");if(n){var o=THREE.ShaderLib[n];a.uniforms=THREE.UniformsUtils.clone(o.uniforms);a.vertexShader=o.vertexShader;a.fragmentShader=o.fragmentShader}var p,r;p=i=f=e=o=0;for(h=b.length;p<h;p++){r=
b[p];if(!r.onlyShadow){r instanceof THREE.DirectionalLight&&i++;r instanceof THREE.PointLight&&f++;r instanceof THREE.SpotLight&&e++;r instanceof THREE.HemisphereLight&&o++}}if(f+e+i+o<=xa){p=i;h=e}else{p=Math.ceil(xa*i/(f+i));h=f=xa-p;o=p}e=p;i=o;o=m=0;for(p=b.length;o<p;o++){r=b[o];if(r.castShadow){r instanceof THREE.SpotLight&&m++;r instanceof THREE.DirectionalLight&&!r.shadowCascade&&m++}}if(gc&&d&&d.useVertexTexture)l=1024;else{b=g.getParameter(g.MAX_VERTEX_UNIFORM_VECTORS);b=Math.floor((b-20)/
4);if(d!==void 0&&d instanceof THREE.SkinnedMesh){b=Math.min(d.bones.length,b);b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")}l=b}var s;a:{r=a.fragmentShader;p=a.vertexShader;var o=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:l,useVertexTexture:gc&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:h,maxHemiLights:i,maxShadows:m,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,
alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},u,d=[];if(n)d.push(n);else{d.push(r);d.push(p)}for(u in c){d.push(u);d.push(c[u])}n=d.join();u=0;for(d=Ka.length;u<d;u++){e=Ka[u];if(e.code===n){e.usedTimes++;s=e.program;break a}}u=g.createProgram();d=["precision "+Q+" float;",jc?"#define VERTEX_TEXTURES":"",P.gammaInput?"#define GAMMA_INPUT":"",P.gammaOutput?"#define GAMMA_OUTPUT":"",P.physicallyBasedShading?
"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?
"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
e=["precision "+Q+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",P.gammaInput?"#define GAMMA_INPUT":"",P.gammaOutput?"#define GAMMA_OUTPUT":"",P.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");e=B("fragment",e+r);d=B("vertex",d+p);g.attachShader(u,d);g.attachShader(u,e);g.linkProgram(u);g.getProgramParameter(u,g.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+g.getProgramParameter(u,
g.VALIDATE_STATUS)+", gl error ["+g.getError()+"]");g.deleteShader(e);g.deleteShader(d);u.uniforms={};u.attributes={};var v,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"];c.useVertexTexture?d.push("boneTexture"):d.push("boneGlobalMatrices");for(v in o)d.push(v);v=d;d=0;for(o=v.length;d<o;d++){e=v[d];u.uniforms[e]=g.getUniformLocation(u,e)}d=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight"];for(v=
0;v<c.maxMorphTargets;v++)d.push("morphTarget"+v);for(v=0;v<c.maxMorphNormals;v++)d.push("morphNormal"+v);for(s in b)d.push(s);s=d;v=0;for(c=s.length;v<c;v++){d=s[v];u.attributes[d]=g.getAttribLocation(u,d)}u.id=La++;Ka.push({program:u,code:n,usedTimes:1});P.info.memory.programs=Ka.length;s=u}a.program=s;s=a.program.attributes;s.position>=0&&g.enableVertexAttribArray(s.position);s.color>=0&&g.enableVertexAttribArray(s.color);s.normal>=0&&g.enableVertexAttribArray(s.normal);s.tangent>=0&&g.enableVertexAttribArray(s.tangent);
if(a.skinning&&s.skinIndex>=0&&s.skinWeight>=0){g.enableVertexAttribArray(s.skinIndex);g.enableVertexAttribArray(s.skinWeight)}if(a.attributes)for(k in a.attributes)s[k]!==void 0&&s[k]>=0&&g.enableVertexAttribArray(s[k]);if(a.morphTargets){a.numSupportedMorphTargets=0;u="morphTarget";for(k=0;k<this.maxMorphTargets;k++){v=u+k;if(s[v]>=0){g.enableVertexAttribArray(s[v]);a.numSupportedMorphTargets++}}}if(a.morphNormals){a.numSupportedMorphNormals=0;u="morphNormal";for(k=0;k<this.maxMorphNormals;k++){v=
u+k;if(s[v]>=0){g.enableVertexAttribArray(s[v]);a.numSupportedMorphNormals++}}}a.uniformsList=[];for(j in a.uniforms)a.uniformsList.push([a.uniforms[j],j])};this.setFaceCulling=function(a,b){if(a){!b||b==="ccw"?g.frontFace(g.CCW):g.frontFace(g.CW);a==="back"?g.cullFace(g.BACK):a==="front"?g.cullFace(g.FRONT):g.cullFace(g.FRONT_AND_BACK);g.enable(g.CULL_FACE)}else g.disable(g.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;if(ma!==b){b?g.disable(g.CULL_FACE):
g.enable(g.CULL_FACE);ma=b}if(Ea!==a){a?g.frontFace(g.CW):g.frontFace(g.CCW);Ea=a}};this.setDepthTest=function(a){if(Va!==a){a?g.enable(g.DEPTH_TEST):g.disable(g.DEPTH_TEST);Va=a}};this.setDepthWrite=function(a){if(ab!==a){g.depthMask(a);ab=a}};this.setBlending=function(a,b,c,d){if(a!==Fa){if(a===THREE.NoBlending)g.disable(g.BLEND);else if(a===THREE.AdditiveBlending){g.enable(g.BLEND);g.blendEquation(g.FUNC_ADD);g.blendFunc(g.SRC_ALPHA,g.ONE)}else if(a===THREE.SubtractiveBlending){g.enable(g.BLEND);
g.blendEquation(g.FUNC_ADD);g.blendFunc(g.ZERO,g.ONE_MINUS_SRC_COLOR)}else if(a===THREE.MultiplyBlending){g.enable(g.BLEND);g.blendEquation(g.FUNC_ADD);g.blendFunc(g.ZERO,g.SRC_COLOR)}else if(a===THREE.CustomBlending)g.enable(g.BLEND);else{g.enable(g.BLEND);g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD);g.blendFuncSeparate(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA,g.ONE,g.ONE_MINUS_SRC_ALPHA)}Fa=a}if(a===THREE.CustomBlending){if(b!==$a){g.blendEquation(O(b));$a=b}if(c!==ha||d!==mb){g.blendFunc(O(c),O(d));
ha=c;mb=d}}else mb=ha=$a=null};this.setTexture=function(a,b){if(a.needsUpdate){if(!a.__webglInit){a.__webglInit=true;a.__webglTexture=g.createTexture();P.info.memory.textures++}g.activeTexture(g.TEXTURE0+b);g.bindTexture(g.TEXTURE_2D,a.__webglTexture);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,a.flipY);g.pixelStorei(g.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=(c.width&c.width-1)===0&&(c.height&c.height-1)===0,e=O(a.format),f=O(a.type);F(g.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=
a.mipmaps,h=0,i=f.length;h<i;h++){c=f[h];g.compressedTexImage2D(g.TEXTURE_2D,h,e,c.width,c.height,0,c.data)}else a instanceof THREE.DataTexture?g.texImage2D(g.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):g.texImage2D(g.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&g.generateMipmap(g.TEXTURE_2D);a.needsUpdate=false;if(a.onUpdate)a.onUpdate()}else{g.activeTexture(g.TEXTURE0+b);g.bindTexture(g.TEXTURE_2D,a.__webglTexture)}};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;
if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=true;if(a.stencilBuffer===void 0)a.stencilBuffer=true;a.__webglTexture=g.createTexture();var c=(a.width&a.width-1)===0&&(a.height&a.height-1)===0,d=O(a.format),e=O(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];g.bindTexture(g.TEXTURE_CUBE_MAP,a.__webglTexture);F(g.TEXTURE_CUBE_MAP,a,c);for(var f=0;f<6;f++){a.__webglFramebuffer[f]=g.createFramebuffer();a.__webglRenderbuffer[f]=g.createRenderbuffer();g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+
f,0,d,a.width,a.height,0,d,e,null);var h=a,i=g.TEXTURE_CUBE_MAP_POSITIVE_X+f;g.bindFramebuffer(g.FRAMEBUFFER,a.__webglFramebuffer[f]);g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,i,h.__webglTexture,0);C(a.__webglRenderbuffer[f],a)}c&&g.generateMipmap(g.TEXTURE_CUBE_MAP)}else{a.__webglFramebuffer=g.createFramebuffer();a.__webglRenderbuffer=g.createRenderbuffer();g.bindTexture(g.TEXTURE_2D,a.__webglTexture);F(g.TEXTURE_2D,a,c);g.texImage2D(g.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null);d=
g.TEXTURE_2D;g.bindFramebuffer(g.FRAMEBUFFER,a.__webglFramebuffer);g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,d,a.__webglTexture,0);C(a.__webglRenderbuffer,a);c&&g.generateMipmap(g.TEXTURE_2D)}b?g.bindTexture(g.TEXTURE_CUBE_MAP,null):g.bindTexture(g.TEXTURE_2D,null);g.bindRenderbuffer(g.RENDERBUFFER,null);g.bindFramebuffer(g.FRAMEBUFFER,null)}if(a){b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer;c=a.width;a=a.height;e=d=0}else{b=null;c=va;a=ib;d=ka;e=ub}if(b!==ca){g.bindFramebuffer(g.FRAMEBUFFER,
b);g.viewport(d,e,c,a);ca=b}vb=c;ya=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=c.anisotropy!==void 0?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:
THREE.RGBAFormat;this.type=c.type!==void 0?c.type:THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:true;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:true;this.generateMipmaps=true};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=true};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
